@use "../../../assets/styles/base/fonts" as fonts;
@use "../../../assets/styles/base/rem" as rem;
@use "../../../assets/styles/base/mixins" as mixins;

$circleTypes: (
  "under_review": RGBA(var(--color-yellow-primary)),
  "active": RGBA(var(--color-mariner-500)),
  "done": RGBA(var(--color-green-primary)),
  "pending": RGBA(var(--color-white-primary)),
);

.bmb_hito-card {
  position: relative;
  padding: var(--bmb-spacing-m);
  container-type: inline-size;

  &-bullet::after {
    content: "";
    width: rem.rem_calc(9);
    height: rem.rem_calc(9);
    background-color: RGBA(var(--color-charade-500));
    position: absolute;
    left: rem.rem_calc(-23);
    top: 50%;
    border-radius: 50%;
    border: rem.rem_calc(2) solid RGBA(var(--color-charade-200));
    margin-top: rem.rem_calc(-7);
  }

  &-active::after {
    background-color: RGBA(var(--color-mariner-700));
  }

  &-content {
    cursor: pointer;
    display: grid;
    grid-template-columns: rem.rem_calc(32) 1fr;
    grid-template-rows: auto;
    gap: rem.rem_calc(8);
    grid-template-areas:
      "icon type"
      "title title"
      "description description";

    @include mixins.container-query(500, "min") {
      grid-template-columns: rem.rem_calc(32) 1fr auto;
      grid-template-rows: auto;
      grid-template-areas:
        "icon title type"
        "icon description date";
    }

    &-icon {
      width: rem.rem_calc(32);
      height: rem.rem_calc(32);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: RGBA(var(--color-white-primary));
      @include fonts.font(5, regular);
      grid-area: icon;
      align-self: center;

      @each $type, $value in $circleTypes {
        &-#{$type} {
          background-color: $value;
          @if ($type == "pending") {
            color: RGBA(var(--color-charade-900));
          }
        }
      }
    }

    &-title {
      @include fonts.font(3, regular);
      font-weight: 400;
      grid-area: title;
    }

    &-description {
      @include fonts.font(1, regular);
      margin: 0;
      grid-area: description;
    }

    .bmb_badge {
      text-transform: capitalize;
    }

    &-type {
      text-align: right;
      grid-area: type;
    }

    &-duration {
      margin: 0;
      display: none;
      grid-area: date;
      @include mixins.container-query(500, "min") {
        display: block;
      }
    }
  }

  &-alternative {
    padding: 0;

    .bmb_card.bmb_card-type-normal {
      background-color: RGBA(var(--color-charade-100));
      border: rem.rem_calc(1) solid RGBA(var(--color-charade-200));
      box-shadow: 6px 6px 4px 0px rgba(0, 0, 0, 0.15);
    }

    .bmb_hito-card-content {
      grid-template-areas: "icon title";

      &-type {
        display: none;
      }

      &.bmb_padding-m {
        padding: var(--bmb-spacing-s) var(--bmb-spacing-m);
      }

      &-title {
        margin: 0;
        align-self: center;
      }
    }
  }
}

[data-theme="dark"],
.storybook-dark-theme {
  .bmb_hito-card {
    &-bullet::after {
      border: rem.rem_calc(2) solid RGBA(var(--color-charade-950));
    }

    &-active::after {
      background-color: RGBA(var(--color-neon-primary));
    }

    &-alternative {
      .bmb_card.bmb_card-type-normal {
        background-color: RGBA(var(--color-charade-900));
        border: rem.rem_calc(1) solid RGBA(var(--color-charade-700));
      }
    }
  }
}
