{
    "pipes": [],
    "interfaces": [
        {
            "name": "BmbProgressCircleOptionsInterface",
            "id": "interface-BmbProgressCircleOptionsInterface-423be6793de23403d1fce58597732b4ac4f5b03cfb4b1086c3611fbeae8ece9a7239e9c87576160ec6b3f722f215c873a164192de0670dec692c1a6d410be077",
            "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BmbProgressCircleOptionsInterface {\n  valueLabel?: string;\n  showValueLabel?: boolean;\n  backgroundColor?: string;\n  percent?: number;\n  radius?: number;\n  space?: number;\n  title?: string | Array<String>;\n  showTitle?: boolean;\n  showBackground?: boolean;\n  responsive?: boolean;\n}\n",
            "properties": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "percent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "radius",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "responsive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "showBackground",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "showTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "showValueLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "space",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | Array<String>",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "valueLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IBmbApp",
            "id": "interface-IBmbApp-c3ed0c63e6ffbbd1f18232859e4b83d93f2b305766673cd675df7454edeef3f77e630a7a08c9bbc20901771d083832bfdd307ab2df7c653fa60da96c42a58c11",
            "file": "projects/ds-ng/src/lib/types/index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IBmbInteractiveIconAppearance } from '../components/bmb-interactive-icon/bmb-interactive-icon.component';\n\nexport type SizeNames = 'xs' | 's' | 'm' | 'l' | 'xl' | 'none' | 'auto';\nexport type IButtonAppearance =\n  | 'primary'\n  | 'secondary-filled'\n  | 'secondary-outlined'\n  | 'destructive';\nexport interface IBmbApp {\n  icon: string;\n  title: string;\n  link?: string;\n  target?: string;\n  appearance: IBmbInteractiveIconAppearance;\n}\nexport type IBmbHorizontalPosition = 'left' | 'right';\nexport * from '../components/bmb-timestream/types';\nexport * from '../components/bmb-push-notification/types';\nexport * from '../components/bmb-advertisement-card/types';\nexport * from '../components/bmb-login-onboarding/types';\n",
            "properties": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IBmbInteractiveIconAppearance",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IBmbAuthenticateInfo",
            "id": "interface-IBmbAuthenticateInfo-4a1c10ee7413557fa43d69f968e3af4f3058da77107bcb7f4127fb401b2f2214d6c798d0b09a8587e6d6e3ac9314d6ef2f0d2cee45ca83b4d570c8597835ca9f",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IBmbUserInfo {\n  id: string;\n  fullName: string;\n  profilePicture: string;\n}\n\nexport interface IBmbError {\n  codeError: boolean;\n  errorMessage: string;\n}\n\nexport interface IBmbAuthenticateInfo {\n  user: string;\n  password: string;\n}\n\nexport interface IBmbLoginOnbording {\n  data: {\n    [x: string]: unknown;\n  };\n  action?: 'auth' | 'toTP' | 'biometric' | 'activate' | 'getUserInfo' | 'init';\n  callback: (result: unknown) => void;\n}\n",
            "properties": [
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IBmbCalendarEventClick",
            "id": "interface-IBmbCalendarEventClick-cd9cb2e6b33842b69c5a7c24157c4edce1122270c2c359b39a80d3591c2bc0edbed0cfda9de494c6ae27e7e83709d5a44af95eb9d3c456719513981b57a22051",
            "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DateTime } from 'luxon';\n\nexport type IBmbCalendarEvent = {\n  title: string;\n  detail: string;\n  start: string;\n  end: string;\n  modalTitle: string;\n  status: string;\n  type?: IBmbEventType;\n  id?: string;\n};\n\nexport type IBmbCalendarView = 'week' | 'month' | 'day';\n\nexport type IBmbCalendarHourFormat = '12' | '24';\n\nexport type IBmbEventType = 'academic' | 'life' | 'events';\n\nexport interface IBmbCalendarEventClick {\n  event: IBmbCalendarEvent;\n  position: any;\n}\n\nexport interface IBmbCalendarRenderEvents {\n  date: DateTime;\n  events: IBmbCalendarEvent[];\n}\n",
            "properties": [
                {
                    "name": "event",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IBmbCalendarEvent",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IBmbCalendarRenderEvents",
            "id": "interface-IBmbCalendarRenderEvents-cd9cb2e6b33842b69c5a7c24157c4edce1122270c2c359b39a80d3591c2bc0edbed0cfda9de494c6ae27e7e83709d5a44af95eb9d3c456719513981b57a22051",
            "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DateTime } from 'luxon';\n\nexport type IBmbCalendarEvent = {\n  title: string;\n  detail: string;\n  start: string;\n  end: string;\n  modalTitle: string;\n  status: string;\n  type?: IBmbEventType;\n  id?: string;\n};\n\nexport type IBmbCalendarView = 'week' | 'month' | 'day';\n\nexport type IBmbCalendarHourFormat = '12' | '24';\n\nexport type IBmbEventType = 'academic' | 'life' | 'events';\n\nexport interface IBmbCalendarEventClick {\n  event: IBmbCalendarEvent;\n  position: any;\n}\n\nexport interface IBmbCalendarRenderEvents {\n  date: DateTime;\n  events: IBmbCalendarEvent[];\n}\n",
            "properties": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DateTime",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "events",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IBmbCalendarEvent[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IBmbError",
            "id": "interface-IBmbError-4a1c10ee7413557fa43d69f968e3af4f3058da77107bcb7f4127fb401b2f2214d6c798d0b09a8587e6d6e3ac9314d6ef2f0d2cee45ca83b4d570c8597835ca9f",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IBmbUserInfo {\n  id: string;\n  fullName: string;\n  profilePicture: string;\n}\n\nexport interface IBmbError {\n  codeError: boolean;\n  errorMessage: string;\n}\n\nexport interface IBmbAuthenticateInfo {\n  user: string;\n  password: string;\n}\n\nexport interface IBmbLoginOnbording {\n  data: {\n    [x: string]: unknown;\n  };\n  action?: 'auth' | 'toTP' | 'biometric' | 'activate' | 'getUserInfo' | 'init';\n  callback: (result: unknown) => void;\n}\n",
            "properties": [
                {
                    "name": "codeError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IBmbLoginOnbording",
            "id": "interface-IBmbLoginOnbording-4a1c10ee7413557fa43d69f968e3af4f3058da77107bcb7f4127fb401b2f2214d6c798d0b09a8587e6d6e3ac9314d6ef2f0d2cee45ca83b4d570c8597835ca9f",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IBmbUserInfo {\n  id: string;\n  fullName: string;\n  profilePicture: string;\n}\n\nexport interface IBmbError {\n  codeError: boolean;\n  errorMessage: string;\n}\n\nexport interface IBmbAuthenticateInfo {\n  user: string;\n  password: string;\n}\n\nexport interface IBmbLoginOnbording {\n  data: {\n    [x: string]: unknown;\n  };\n  action?: 'auth' | 'toTP' | 'biometric' | 'activate' | 'getUserInfo' | 'init';\n  callback: (result: unknown) => void;\n}\n",
            "properties": [
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"auth\" | \"toTP\" | \"biometric\" | \"activate\" | \"getUserInfo\" | \"init\"",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "callback",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IBmbTab",
            "id": "interface-IBmbTab-5c13b223ac492604be4bed76c6c6413e893247e269f1e3ce01c58b81ddf1d0d9f4a933e279d277c133ecbe51170fd6a2944d16a19306e7650ea65c5dd74cb589",
            "file": "projects/ds-ng/src/lib/components/bmb-inner-header/bmb-inner-header.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbSearchInputComponent } from '../bmb-search-input/bmb-search-input.component';\nimport { BmbTabsComponent } from '../bmb-tabs/bmb-tabs.component';\n\ninterface NavItem {\n  title: string;\n  id: string;\n  badge?: number;\n  isActive?: boolean;\n}\n\ninterface IBmbTab {\n  title: string;\n  id: number;\n  badge?: number;\n  isActive?: boolean;\n}\n\n@Component({\n  selector: 'bmb-inner-header',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbSearchInputComponent,\n    BmbTabsComponent,\n  ],\n  styleUrl: './bmb-inner-header.component.scss',\n  templateUrl: './bmb-inner-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbInnerHeaderComponent {\n  @Input() title: string = '';\n  @Input() isLoading: boolean = false;\n  @Input() data: string[] = [];\n  @Output() onHandleBack: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onValueChange: EventEmitter<string> = new EventEmitter<string>();\n\n  showSearch: boolean = false;\n\n  handleBack() {\n    this.onHandleBack.emit();\n  }\n\n  handleSearch() {\n    this.showSearch = !this.showSearch;\n  }\n\n  handleValueChange(event: string): void {\n    this.onValueChange.emit(event);\n  }\n}\n",
            "properties": [
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IBmbTab",
            "id": "interface-IBmbTab-e22424fdf9598cf03b961dd0141f369e6120e27a4349c7b05e538b035826a2d35f1e245303899d07289e77678b696672191f5a185aac3cdc59fbc275fc1f5461-1",
            "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  ViewChild,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  OnInit,\n  AfterViewInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface IBmbTab {\n  id: number;\n  title: string;\n  isActive?: boolean;\n  badge?: number;\n}\n\n@Component({\n  selector: 'bmb-tabs',\n  templateUrl: './bmb-tabs.component.html',\n  styleUrls: ['./bmb-tabs.component.scss'],\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbTabsComponent implements OnInit, AfterViewInit {\n  @Input() format: string = '';\n  @Input() tabs: IBmbTab[] = [];\n  @Output() selected = new EventEmitter<IBmbTab>();\n\n  activeTabIndex: number = 0;\n  @ViewChild('tabsItems') tabsItems!: ElementRef;\n\n  ngOnInit(): void {\n    const initialActiveTab = this.tabs.findIndex((tab) => tab.isActive);\n    this.activeTabIndex = initialActiveTab !== -1 ? initialActiveTab : 0;\n    this.tabs.forEach(\n      (tab, index) => (tab.isActive = index === this.activeTabIndex),\n    );\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.showActiveTab(), 100);\n  }\n\n  selectTab(selectedId: number): void {\n    const tabIndex = this.tabs.findIndex((tab) => tab.id === selectedId);\n    if (tabIndex !== -1) {\n      this.tabs.forEach((tab) => (tab.isActive = false));\n      this.tabs[tabIndex].isActive = true;\n      this.activeTabIndex = tabIndex;\n      const activeTab = this.tabs[tabIndex];\n      this.selected.emit(activeTab);\n      setTimeout(() => this.showActiveTab(), 0);\n    }\n  }\n\n  showActiveTab(): void {\n    requestAnimationFrame(() => {\n      const tabsElement = this.tabsItems.nativeElement;\n      const activeTabElement = tabsElement.children[this.activeTabIndex];\n\n      if (activeTabElement) {\n        const containerWidth = tabsElement.offsetWidth;\n        const activeTabWidth = activeTabElement.offsetWidth;\n        const activeTabOffsetLeft = activeTabElement.offsetLeft;\n\n        const scrollOffset =\n          activeTabOffsetLeft - (containerWidth - activeTabWidth) / 2;\n\n        tabsElement.scrollTo({\n          left: scrollOffset,\n          behavior: 'smooth',\n        });\n      }\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IBmbTab-1"
        },
        {
            "name": "IBmbUserInfo",
            "id": "interface-IBmbUserInfo-4a1c10ee7413557fa43d69f968e3af4f3058da77107bcb7f4127fb401b2f2214d6c798d0b09a8587e6d6e3ac9314d6ef2f0d2cee45ca83b4d570c8597835ca9f",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IBmbUserInfo {\n  id: string;\n  fullName: string;\n  profilePicture: string;\n}\n\nexport interface IBmbError {\n  codeError: boolean;\n  errorMessage: string;\n}\n\nexport interface IBmbAuthenticateInfo {\n  user: string;\n  password: string;\n}\n\nexport interface IBmbLoginOnbording {\n  data: {\n    [x: string]: unknown;\n  };\n  action?: 'auth' | 'toTP' | 'biometric' | 'activate' | 'getUserInfo' | 'init';\n  callback: (result: unknown) => void;\n}\n",
            "properties": [
                {
                    "name": "fullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "profilePicture",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IBotType",
            "id": "interface-IBotType-180ed44f6a4a3f64a8a91fd8f5914e16a3cf6d1e14666d6522640f0b129f89404306714121e85282f331a28ddf468883def0f12826d884379d2d1ebdbe7ad162",
            "file": "projects/ds-ng/src/lib/components/bmb-chat-bar/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IBotType {\n  name: string;\n  icon: string;\n}\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFixDecimals",
            "id": "interface-IFixDecimals-2d4c61f6834d4de11e1efdeb7b6e471f905aa09182cd9252968c6349713d05e71e36f3912da79c88aa07514358d2430d140bbb8ae1d1a97205e1bc05eda8012f",
            "file": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface IFixDecimals {\n  value: number;\n  dp?: number;\n}\n\nfunction fixDecimals({ value, dp = 2 }: IFixDecimals) {\n  return parseFloat(value.toString()).toFixed(dp);\n}\n\nexport const pixelToRem = (size: number) =>\n  `${fixDecimals({ value: size / 16 })}rem`;\n",
            "properties": [
                {
                    "name": "dp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IMargin",
            "id": "interface-IMargin-1396a987a9f3e7de16a8cc9b117e4f4509d8bff919c9dfe790b992732332ebf04db3154290498eea97317e59af5e80ad2c7dee81e83bb7f0e1f36b3631d44837",
            "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.directive.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Directive, HostBinding, Input, OnInit } from '@angular/core';\n\nexport interface IMargin {\n  sm: number;\n  lg?: number;\n}\n\n@Directive({\n  selector: '[bmbLayoutItem]',\n  standalone: true,\n})\nexport class BmbLayoutItemDirective implements OnInit {\n  @Input() colSm: number = 0;\n  @Input() colLg: number = 0;\n  @Input() marginLeft?: IMargin;\n  @Input() marginRight?: IMargin;\n  @Input() colGrow: number = 0;\n  @Input() isDinamycItem: boolean = false;\n\n  @HostBinding('class') get elementClass(): string[] {\n    const classes = [];\n\n    if (this.colSm) classes.push(`bmb_col-sm-${this.colSm}`);\n    if (this.colLg) classes.push(`bmb_col-lg-${this.colLg}`);\n    if (this.marginLeft) {\n      classes.push(`bmb_space-sm-left-${this.marginLeft?.sm}`);\n\n      if (this.marginLeft.lg)\n        classes.push(`bmb_space-lg-left-${this.marginLeft?.lg}`);\n    }\n    if (this.marginRight) {\n      classes.push(`bmb_space-sm-right-${this.marginRight?.sm}`);\n\n      if (this.marginRight.lg)\n        classes.push(`bmb_space-lg-right-${this.marginRight?.lg}`);\n    }\n    return classes;\n  }\n\n  @HostBinding('style.flex') flex?: string;\n\n  ngOnInit() {\n    if (this.isDinamycItem) {\n      this.flex = `${this.colGrow} 0 0%`;\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "lg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "sm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IMinimalNotification",
            "id": "interface-IMinimalNotification-4f7e78afa05bff38371090cb140584ff62127bcef1bac73f460ffe872e7157c2ae5ab92064e87f42cf4da4f38179e73c848a4f0103ac7c46a363c7ae33556f05",
            "file": "projects/ds-ng/src/lib/components/bmb-push-notification/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IButtonAppearance } from '../../types';\n\nexport interface INotification extends IMinimalNotification {\n  icon?: string;\n  type?: NotificationType;\n  dontAskAgainEvent?: (id: string) => void;\n  date?: string;\n  delay?: number;\n  actions?: INotificationAction[];\n  appIcon?: string;\n  appName?: string;\n  userName?: string;\n  userMail?: string;\n  userAvatar?: string;\n  media?: string;\n}\n\nexport interface IMinimalNotification {\n  title: string;\n  subTitle?: string;\n  content?: string;\n  isFullColor: boolean;\n  id?: string;\n}\n\nexport interface INotificationAction {\n  title: string;\n  action: 'close' | ((notification: IMinimalNotification) => void);\n  type?: IButtonAppearance;\n  icon?: string;\n}\n\nexport type NotificationType =\n  | 'tec'\n  | 'success'\n  | 'info'\n  | 'neutral'\n  | 'event'\n  | 'error'\n  | 'warning'\n  | 'black';\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isFullColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "subTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "INotification",
            "id": "interface-INotification-4f7e78afa05bff38371090cb140584ff62127bcef1bac73f460ffe872e7157c2ae5ab92064e87f42cf4da4f38179e73c848a4f0103ac7c46a363c7ae33556f05",
            "file": "projects/ds-ng/src/lib/components/bmb-push-notification/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IButtonAppearance } from '../../types';\n\nexport interface INotification extends IMinimalNotification {\n  icon?: string;\n  type?: NotificationType;\n  dontAskAgainEvent?: (id: string) => void;\n  date?: string;\n  delay?: number;\n  actions?: INotificationAction[];\n  appIcon?: string;\n  appName?: string;\n  userName?: string;\n  userMail?: string;\n  userAvatar?: string;\n  media?: string;\n}\n\nexport interface IMinimalNotification {\n  title: string;\n  subTitle?: string;\n  content?: string;\n  isFullColor: boolean;\n  id?: string;\n}\n\nexport interface INotificationAction {\n  title: string;\n  action: 'close' | ((notification: IMinimalNotification) => void);\n  type?: IButtonAppearance;\n  icon?: string;\n}\n\nexport type NotificationType =\n  | 'tec'\n  | 'success'\n  | 'info'\n  | 'neutral'\n  | 'event'\n  | 'error'\n  | 'warning'\n  | 'black';\n",
            "properties": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "INotificationAction[]",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "appIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "appName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "delay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "dontAskAgainEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "media",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NotificationType",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "userAvatar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "userMail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "userName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "IMinimalNotification"
            ]
        },
        {
            "name": "INotificationAction",
            "id": "interface-INotificationAction-4f7e78afa05bff38371090cb140584ff62127bcef1bac73f460ffe872e7157c2ae5ab92064e87f42cf4da4f38179e73c848a4f0103ac7c46a363c7ae33556f05",
            "file": "projects/ds-ng/src/lib/components/bmb-push-notification/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IButtonAppearance } from '../../types';\n\nexport interface INotification extends IMinimalNotification {\n  icon?: string;\n  type?: NotificationType;\n  dontAskAgainEvent?: (id: string) => void;\n  date?: string;\n  delay?: number;\n  actions?: INotificationAction[];\n  appIcon?: string;\n  appName?: string;\n  userName?: string;\n  userMail?: string;\n  userAvatar?: string;\n  media?: string;\n}\n\nexport interface IMinimalNotification {\n  title: string;\n  subTitle?: string;\n  content?: string;\n  isFullColor: boolean;\n  id?: string;\n}\n\nexport interface INotificationAction {\n  title: string;\n  action: 'close' | ((notification: IMinimalNotification) => void);\n  type?: IButtonAppearance;\n  icon?: string;\n}\n\nexport type NotificationType =\n  | 'tec'\n  | 'success'\n  | 'info'\n  | 'neutral'\n  | 'event'\n  | 'error'\n  | 'warning'\n  | 'black';\n",
            "properties": [
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"close\" | ",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IButtonAppearance",
                    "optional": true,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IPlaceholderObject",
            "id": "interface-IPlaceholderObject-2dc92aa8008e5ca6e98e66116c271e52877e4c45581ee7d1fda24d3a7bbf1e4238bb378aa9414cc5e28251a73fd6a64f924e2873168d7f966dab0c83db89f6a9",
            "file": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DateTime, Info } from 'luxon';\nimport { BmbTimestreamErrorComponent } from './bmb-timestream-error/bmb-timestream-error.component';\nimport { BmbTimestreamTimelineComponent } from './bmb-timestream-timeline/bmb-timestream-timeline.component';\nimport { BmbTimestreamDetailsComponent } from './bmb-timestream-detail/bmb-timestream-detail.component';\nimport { ITimelineEvent, ISelectedDate, ITimelineEventParsed } from './types';\nimport { BmbTimestreamDialogComponent } from './bmb-timestream-dialog/bmb-timestream-dialog.component';\nimport { CommonModule } from '@angular/common';\n\ninterface IPlaceholderObject {\n  [key: string]: any | any[];\n}\n\n@Component({\n  selector: 'bmb-timestream',\n  standalone: true,\n  imports: [\n    BmbTimestreamErrorComponent,\n    BmbTimestreamTimelineComponent,\n    BmbTimestreamDetailsComponent,\n    BmbTimestreamDialogComponent,\n    CommonModule,\n  ],\n  templateUrl: './bmb-timestream.component.html',\n  styleUrl: './bmb-timestream.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbTimestreamComponent implements OnInit {\n  @Input() startDate: string = '';\n  @Input() endDate: string = '';\n  @Input() dateFormat: string = 'dd/MM/yyyy';\n  @Input() lang: string = 'es';\n  @Input() events: ITimelineEvent[] | null = null;\n\n  error = false;\n  now = DateTime.now();\n  start: DateTime | null = null;\n  end: DateTime | null = null;\n  difference = 0;\n  validMonths: any = [];\n  parsedEvents: any | null = null;\n  monthsNames = Info.months('long', { locale: this.lang });\n  isDialogOpen: null | ITimelineEvent = null;\n  selectedDate: ISelectedDate = {\n    day: '',\n    month: '',\n    date: this.now,\n  };\n  orderedMonths: string[] = [];\n  orderedEvents: ITimelineEventParsed[] = [];\n\n  ngOnInit(): void {\n    this.dateValidation();\n\n    this.start = DateTime.fromFormat(this.startDate, this.dateFormat);\n    this.end = DateTime.fromFormat(this.endDate, this.dateFormat);\n    this.difference = Math.ceil(this.end.diff(this.start, 'months').months);\n    this.parsedEvents = this.prepareEvents(this.events);\n    this.orderedMonths = this.orderDates(this.parsedEvents, 'yyyy/MM');\n    this.selectedDate = this.selectAValidDate();\n  }\n\n  dateValidation() {\n    const isValidStart = DateTime.fromFormat(\n      this.startDate,\n      this.dateFormat,\n    ).isValid;\n    const isValidEnd = DateTime.fromFormat(\n      this.endDate,\n      this.dateFormat,\n    ).isValid;\n\n    this.error = !isValidEnd || !isValidStart;\n  }\n\n  prepareEvents(events: ITimelineEvent[] | null) {\n    if (!events) return {};\n\n    const objectEvent: IPlaceholderObject = {};\n    events.forEach((event) => {\n      const startDate = DateTime.fromFormat(event.start, this.dateFormat);\n      const endDate = DateTime.fromFormat(event.end, this.dateFormat);\n      const diff = endDate.diff(startDate, 'days').days + 1;\n\n      for (let index = 0; index < diff; index++) {\n        const currentDate = startDate.plus({ days: index });\n        const stringDate = currentDate.toFormat('yyyy/MM/dd');\n        const month = currentDate.toFormat('yyyy/MM');\n\n        objectEvent[month] ??= {\n          events: {},\n          name: this.monthsNames[currentDate.month - 1],\n          stringDate: month,\n          year: currentDate.year,\n          date: currentDate,\n        };\n\n        objectEvent[month].events[stringDate] ??= {\n          events: [],\n          date: currentDate,\n          stringDate,\n          selected: false,\n        };\n\n        objectEvent[month].events[stringDate].events.push({\n          ...event,\n          start: stringDate,\n          startEvent: currentDate,\n          endEvent: endDate,\n          selected: false,\n          diff: diff - 1,\n          originalStart: startDate,\n        });\n      }\n    });\n\n    const orededEvents = this.orderDates(objectEvent, 'yyyy/MM');\n    objectEvent['orderedEvents'] = orededEvents;\n\n    objectEvent['orderedEvents'].forEach((date: string) => {\n      objectEvent[date]['orderedEvents'] = this.orderDates(\n        objectEvent[date].events,\n        'yyyy/MM/dd',\n      );\n    });\n\n    this.orderedEvents = objectEvent['orderedEvents']\n      .map((month: string) => {\n        return objectEvent[month]['orderedEvents'].map(\n          (day: string) => objectEvent[month].events[day],\n        );\n      })\n      .flat();\n\n    return objectEvent;\n  }\n\n  orderDates(events: any, format: string): string[] {\n    const monthsList = Object.keys(events);\n    const monthsOrdered = monthsList.sort((dateA: string, dateB: string) => {\n      const parsedDateA = DateTime.fromFormat(dateA, format);\n      const parsedDateB = DateTime.fromFormat(dateB, format);\n      return parsedDateA.toMillis() - parsedDateB.toMillis();\n    });\n\n    return monthsOrdered;\n  }\n\n  selectAValidDate(): { month: string; day: string; date: DateTime } {\n    const month =\n      this.orderedMonths.find((date) => {\n        const parsedDate = this.parsedEvents[date].date;\n        return (\n          this.now.year <= parsedDate.year && this.now.month <= parsedDate.month\n        );\n      }) ||\n      this.orderedMonths.at(-1) ||\n      '';\n    const orderedEvents = this.parsedEvents?.[month]?.orderedEvents;\n\n    const day =\n      orderedEvents?.find((date: string) => {\n        const parsedDate = this.parsedEvents[month].events[date].date;\n        return (\n          this.now.year <= parsedDate.year &&\n          this.now.month <= parsedDate.month &&\n          this.now.day <= parsedDate.day\n        );\n      }) ||\n      orderedEvents?.at(-1) ||\n      '';\n\n    if (this.parsedEvents[month]) {\n      this.parsedEvents[month].selected = true;\n      this.parsedEvents[month].events[day].selected = true;\n    }\n    return {\n      month,\n      day,\n      date: this.parsedEvents?.[month]?.events?.[day]?.date,\n    };\n  }\n\n  handleSelectedDateChange({ month, day }: { month: string; day: string }) {\n    this.parsedEvents[this.selectedDate.month].selected = false;\n    this.parsedEvents[this.selectedDate.month].events[\n      this.selectedDate.day\n    ].selected = false;\n\n    this.parsedEvents[month].selected = true;\n    this.parsedEvents[month].events[day].selected = true;\n\n    this.selectedDate = {\n      month,\n      day,\n      date: this.parsedEvents[month].events[day].date,\n    };\n  }\n\n  handleSelectedEventChange(event: ITimelineEvent) {\n    this.isDialogOpen = event;\n  }\n\n  closeDetail() {\n    this.isDialogOpen = null;\n  }\n}\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-2dc92aa8008e5ca6e98e66116c271e52877e4c45581ee7d1fda24d3a7bbf1e4238bb378aa9414cc5e28251a73fd6a64f924e2873168d7f966dab0c83db89f6a9",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any | []",
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 181,
            "methods": [],
            "extends": []
        },
        {
            "name": "ISelectedDate",
            "id": "interface-ISelectedDate-64f0c3de3cb29c73bc8c90f2e05765158e97c8d638f7e67a290d2222451c1920582d4b38486f590a9672f00b8e7222ddaa71af3c723bad585620c53cce930495",
            "file": "projects/ds-ng/src/lib/components/bmb-timestream/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DateTime } from 'luxon';\n\nexport interface ISelectedDate {\n  day: string;\n  month: string;\n  date: DateTime;\n}\n\nexport interface ITimelineDayEvent {\n  date: DateTime;\n  events: ITimelineEvent[];\n  selected: boolean;\n  stringDate: string;\n}\n\nexport interface ITimelineEvent {\n  id: number;\n  user_first_name: string;\n  user_last_name: string;\n  user_email: string;\n  start: string;\n  end: string;\n  description: string;\n  short_description: string;\n  type: string;\n  tags: string[];\n  instances: string;\n  related_to: string;\n  decision: string;\n  title: string;\n  image: string;\n  picture_profile: string;\n  diff?: number;\n  startEvent?: DateTime;\n  endEvent?: DateTime;\n  originalStart?: DateTime;\n}\n\nexport interface ITimelineEventParsed extends ITimelineEvent {\n  startEvent: DateTime;\n  endEvent: DateTime;\n  selected: boolean;\n  diff: number;\n  originalStart: DateTime;\n  date: DateTime;\n  events: ITimelineEvent[];\n}\n",
            "properties": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DateTime",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "day",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "month",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ITimelineDayEvent",
            "id": "interface-ITimelineDayEvent-64f0c3de3cb29c73bc8c90f2e05765158e97c8d638f7e67a290d2222451c1920582d4b38486f590a9672f00b8e7222ddaa71af3c723bad585620c53cce930495",
            "file": "projects/ds-ng/src/lib/components/bmb-timestream/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DateTime } from 'luxon';\n\nexport interface ISelectedDate {\n  day: string;\n  month: string;\n  date: DateTime;\n}\n\nexport interface ITimelineDayEvent {\n  date: DateTime;\n  events: ITimelineEvent[];\n  selected: boolean;\n  stringDate: string;\n}\n\nexport interface ITimelineEvent {\n  id: number;\n  user_first_name: string;\n  user_last_name: string;\n  user_email: string;\n  start: string;\n  end: string;\n  description: string;\n  short_description: string;\n  type: string;\n  tags: string[];\n  instances: string;\n  related_to: string;\n  decision: string;\n  title: string;\n  image: string;\n  picture_profile: string;\n  diff?: number;\n  startEvent?: DateTime;\n  endEvent?: DateTime;\n  originalStart?: DateTime;\n}\n\nexport interface ITimelineEventParsed extends ITimelineEvent {\n  startEvent: DateTime;\n  endEvent: DateTime;\n  selected: boolean;\n  diff: number;\n  originalStart: DateTime;\n  date: DateTime;\n  events: ITimelineEvent[];\n}\n",
            "properties": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DateTime",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "events",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITimelineEvent[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "stringDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ITimelineEvent",
            "id": "interface-ITimelineEvent-64f0c3de3cb29c73bc8c90f2e05765158e97c8d638f7e67a290d2222451c1920582d4b38486f590a9672f00b8e7222ddaa71af3c723bad585620c53cce930495",
            "file": "projects/ds-ng/src/lib/components/bmb-timestream/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DateTime } from 'luxon';\n\nexport interface ISelectedDate {\n  day: string;\n  month: string;\n  date: DateTime;\n}\n\nexport interface ITimelineDayEvent {\n  date: DateTime;\n  events: ITimelineEvent[];\n  selected: boolean;\n  stringDate: string;\n}\n\nexport interface ITimelineEvent {\n  id: number;\n  user_first_name: string;\n  user_last_name: string;\n  user_email: string;\n  start: string;\n  end: string;\n  description: string;\n  short_description: string;\n  type: string;\n  tags: string[];\n  instances: string;\n  related_to: string;\n  decision: string;\n  title: string;\n  image: string;\n  picture_profile: string;\n  diff?: number;\n  startEvent?: DateTime;\n  endEvent?: DateTime;\n  originalStart?: DateTime;\n}\n\nexport interface ITimelineEventParsed extends ITimelineEvent {\n  startEvent: DateTime;\n  endEvent: DateTime;\n  selected: boolean;\n  diff: number;\n  originalStart: DateTime;\n  date: DateTime;\n  events: ITimelineEvent[];\n}\n",
            "properties": [
                {
                    "name": "decision",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "diff",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "end",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "endEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DateTime",
                    "optional": true,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "instances",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "originalStart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DateTime",
                    "optional": true,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "picture_profile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "related_to",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "short_description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "start",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "startEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DateTime",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "user_email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "user_first_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "user_last_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ITimelineEventParsed",
            "id": "interface-ITimelineEventParsed-64f0c3de3cb29c73bc8c90f2e05765158e97c8d638f7e67a290d2222451c1920582d4b38486f590a9672f00b8e7222ddaa71af3c723bad585620c53cce930495",
            "file": "projects/ds-ng/src/lib/components/bmb-timestream/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DateTime } from 'luxon';\n\nexport interface ISelectedDate {\n  day: string;\n  month: string;\n  date: DateTime;\n}\n\nexport interface ITimelineDayEvent {\n  date: DateTime;\n  events: ITimelineEvent[];\n  selected: boolean;\n  stringDate: string;\n}\n\nexport interface ITimelineEvent {\n  id: number;\n  user_first_name: string;\n  user_last_name: string;\n  user_email: string;\n  start: string;\n  end: string;\n  description: string;\n  short_description: string;\n  type: string;\n  tags: string[];\n  instances: string;\n  related_to: string;\n  decision: string;\n  title: string;\n  image: string;\n  picture_profile: string;\n  diff?: number;\n  startEvent?: DateTime;\n  endEvent?: DateTime;\n  originalStart?: DateTime;\n}\n\nexport interface ITimelineEventParsed extends ITimelineEvent {\n  startEvent: DateTime;\n  endEvent: DateTime;\n  selected: boolean;\n  diff: number;\n  originalStart: DateTime;\n  date: DateTime;\n  events: ITimelineEvent[];\n}\n",
            "properties": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DateTime",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "diff",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "endEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DateTime",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "events",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITimelineEvent[]",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "originalStart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DateTime",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "startEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DateTime",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "ITimelineEvent"
            ]
        },
        {
            "name": "IUserInformation",
            "id": "interface-IUserInformation-604ce6ba42502fcfd5d4eb38dbd100a718ce1257e42cc22a8f846ee6428c4bf3f36ee00ba0d623b4a0a6a9ca18f11fa63124da273e2c25ea9c723c4a029eb0a1",
            "file": "projects/ds-ng/src/lib/components/bmb-top-bar/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export type IPositionButtonMenu = 'left' | 'right';\n\nexport interface IUserInformation {\n  name: string;\n  image: string;\n  role: string;\n}\n",
            "properties": [
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "role",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ModalDataConfig",
            "id": "interface-ModalDataConfig-edb04944ba7a9d6cf344f725d4ad489524c141d9fd479158a6f2ef43c8d8f02fa0c7632438767119a8d7731d70e80f1a231a292044b5c183733bf8432ab2d81d",
            "file": "projects/ds-ng/src/lib/components/bmb-modal/bmb-modal.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TemplateRef } from '@angular/core';\n\nexport interface ModalDataConfig {\n  title?: string;\n  subtitle?: string;\n  content?: string | TemplateRef<any> | null;\n  type?: 'informative' | 'action' | 'alert';\n  alertStyle?:\n    | 'warning'\n    | 'neutral'\n    | 'primary'\n    | 'event'\n    | 'success'\n    | 'error';\n  size?: 'small' | 'medium' | 'large';\n  primaryBtnLabel?: string;\n  secondaryBtnLabel?: string;\n  scrollable?: boolean;\n}\n",
            "properties": [
                {
                    "name": "alertStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"warning\" | \"neutral\" | \"primary\" | \"event\" | \"success\" | \"error\"",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | TemplateRef<any> | null",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "primaryBtnLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "scrollable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "secondaryBtnLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"informative\" | \"action\" | \"alert\"",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "NavItem",
            "id": "interface-NavItem-5c13b223ac492604be4bed76c6c6413e893247e269f1e3ce01c58b81ddf1d0d9f4a933e279d277c133ecbe51170fd6a2944d16a19306e7650ea65c5dd74cb589",
            "file": "projects/ds-ng/src/lib/components/bmb-inner-header/bmb-inner-header.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbSearchInputComponent } from '../bmb-search-input/bmb-search-input.component';\nimport { BmbTabsComponent } from '../bmb-tabs/bmb-tabs.component';\n\ninterface NavItem {\n  title: string;\n  id: string;\n  badge?: number;\n  isActive?: boolean;\n}\n\ninterface IBmbTab {\n  title: string;\n  id: number;\n  badge?: number;\n  isActive?: boolean;\n}\n\n@Component({\n  selector: 'bmb-inner-header',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbSearchInputComponent,\n    BmbTabsComponent,\n  ],\n  styleUrl: './bmb-inner-header.component.scss',\n  templateUrl: './bmb-inner-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbInnerHeaderComponent {\n  @Input() title: string = '';\n  @Input() isLoading: boolean = false;\n  @Input() data: string[] = [];\n  @Output() onHandleBack: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onValueChange: EventEmitter<string> = new EventEmitter<string>();\n\n  showSearch: boolean = false;\n\n  handleBack() {\n    this.onHandleBack.emit();\n  }\n\n  handleSearch() {\n    this.showSearch = !this.showSearch;\n  }\n\n  handleValueChange(event: string): void {\n    this.onValueChange.emit(event);\n  }\n}\n",
            "properties": [
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "NavItem",
            "id": "interface-NavItem-b4e9470a118f946f9e97d791e62e777b606a5fd3760d812f21037d19b81381f26aee2f14c35ff85f7914959a304b8fe8c92966a9e7b27e9342998d4c1670cfff-1",
            "file": "projects/ds-ng/src/lib/components/bmb-wheel-menu/bmb-wheel-menu.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbFabComponent } from '../bmb-fab/bmb-fab.component';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbInnerHeaderComponent } from '../bmb-inner-header/bmb-inner-header.component';\nimport { BmbTabsComponent } from '../bmb-tabs/bmb-tabs.component';\nimport { BmbInteractiveIconComponent } from '../bmb-interactive-icon/bmb-interactive-icon.component';\nimport { IBmbApp } from '../../types';\n\ninterface NavItem {\n  title: string;\n  id: number;\n  badge?: number;\n  isActive?: boolean;\n}\n\n@Component({\n  selector: 'bmb-wheel-menu',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbFabComponent,\n    BmbIconComponent,\n    BmbInnerHeaderComponent,\n    BmbTabsComponent,\n    BmbInteractiveIconComponent,\n  ],\n  styleUrls: ['./bmb-wheel-menu.component.scss'],\n  templateUrl: './bmb-wheel-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbWheelMenuComponent implements AfterViewInit {\n  @Input() navItems: NavItem[] = [];\n  @Input() apps: { [key: number]: IBmbApp[] } = {};\n  @Input() data: string[] = [];\n  @Input() isLoading: boolean = false;\n  @Output() onValueChange: EventEmitter<string> = new EventEmitter<string>();\n  @ViewChild('wheel', { static: false }) wheel!: ElementRef;\n  @ViewChild('wheelMenu', { static: false }) wheelMenu!: ElementRef;\n  @ViewChild(BmbTabsComponent) tabsComponent!: BmbTabsComponent;\n\n  activeNavItemIndex: number = 0;\n  isFull: boolean = false;\n  isOpen: boolean = false;\n\n  constructor() {}\n\n  ngAfterViewInit() {\n    this.updateClasses();\n    this.selectNavItem(0);\n  }\n\n  toggleWheel() {\n    this.isFull = false;\n    this.isOpen = !this.isOpen;\n    this.updateClasses();\n  }\n  toggleFullWheel() {\n    this.isFull = !this.isFull;\n    if (!this.isFull) {\n      this.isOpen = true;\n    } else {\n      this.isOpen = false;\n      this.setActiveTab(this.activeNavItemIndex);\n      setTimeout(() => {\n        this.isOpen = true;\n        this.setActiveTab(this.activeNavItemIndex);\n      }, 100);\n    }\n    this.updateClasses();\n  }\n\n  handleBackButton() {\n    this.toggleFullWheel();\n  }\n\n  selectNavItem(index: number) {\n    if (this.activeNavItemIndex !== index) {\n      this.activeNavItemIndex = index;\n      this.updateClasses();\n      this.setActiveTab(index);\n    }\n  }\n\n  selectFullMenuNavItem(index: number) {\n    if (this.activeNavItemIndex !== index) {\n      this.activeNavItemIndex = index;\n      this.updateClasses();\n      this.setActiveTab(index);\n    }\n  }\n\n  getClasses(index: number): string {\n    const activeIndex = this.activeNavItemIndex;\n    if (index === activeIndex) {\n      return 'active';\n    } else if (index === (activeIndex + 1) % 3) {\n      return 'next';\n    } else if (index === (activeIndex + 2) % 3) {\n      return 'previous';\n    }\n    return '';\n  }\n\n  updateClasses() {\n    if (!this.wheelMenu) return;\n\n    const navItems = Array.from(\n      this.wheelMenu.nativeElement.querySelectorAll('.bmb_wheel-item'),\n    ) as HTMLElement[];\n\n    navItems.forEach((item, index) => {\n      item.classList.remove('previous', 'active', 'next');\n      item.classList.add(...this.getClasses(index).split(' '));\n    });\n  }\n\n  setActiveTab(index: number) {\n    if (this.tabsComponent) {\n      this.tabsComponent.selectTab(this.navItems[index].id);\n    }\n  }\n\n  get activeApps() {\n    return this.apps[this.activeNavItemIndex] || [];\n  }\n\n  handleValueChange(event: string): void {\n    this.onValueChange.emit(event);\n  }\n}\n",
            "properties": [
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "NavItem-1"
        },
        {
            "name": "Props",
            "id": "interface-Props-0be329acc963ff455ffdf9172d95c844a313ba429c49a8f0645bca85aef6b06ecb11a573d85443a1730e1fcc45ddd93688a6b7591932b2eff126b81c31779683",
            "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { EventEmitter } from '@angular/core';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\nexport interface Props {\n  activeStepIndex?: number;\n  totalSteps?: number;\n  targets?: Target[];\n  onStepsPress: EventEmitter<number>;\n}\n",
            "properties": [
                {
                    "name": "activeStepIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "onStepsPress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventEmitter<number>",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "targets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Target[]",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "totalSteps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "SidebarElement",
            "id": "interface-SidebarElement-3a740eb6084df709421195fb164e164a8697bc217631c71bf993ee8ca299e7cca4d49a240ae270c23ffd3b2e77bda8bb53b5303f5c9754779ee0f540e92e7478",
            "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SidebarElement {\n  id: number;\n  icon: string;\n  title: string;\n  link: string;\n  target?: string;\n  children?: SidebarElement[];\n  isOpen?: boolean;\n}\n",
            "properties": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarElement[]",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Tab",
            "id": "interface-Tab-001a951156027c34dbd2727d9f5e495b4cc4a8b0ed8414c2d57df14ab50fbab14da6d3fd38967bfba22d3437e61dcfe110615ca82c6c09ec52aac47f755e2500",
            "file": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream-dialog/bmb-timestream-dialog.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ITimelineEvent } from '../types';\nimport { BmbIconComponent } from '../../bmb-icon/bmb-icon.component';\nimport { BmbTabsComponent } from '../../bmb-tabs/bmb-tabs.component';\nimport { BmbContainerComponent } from '../../bmb-container/bmb-container.component';\nimport { BmbBadgeComponent } from '../../bmb-badge/bmb-badge.component';\nimport { BmbButtonDirective } from '../../../directives/button.directive';\nimport { BmbDividerComponent } from '../../bmb-divider/bmb-divider.component';\nimport { BmbLayoutDirective } from '../../../directives/bmb-layout/bmb-layout.directive';\nimport { BmbLayoutItemDirective } from '../../../directives/bmb-layout/bmb-layout-item.directive';\nimport { DateTime } from 'luxon';\n\ninterface Tab {\n  id: number;\n  title: string;\n  isActive?: boolean;\n  badge?: number;\n}\n\n@Component({\n  selector: 'bmb-timestream-dialog',\n  standalone: true,\n  imports: [\n    BmbIconComponent,\n    BmbTabsComponent,\n    BmbContainerComponent,\n    BmbBadgeComponent,\n    BmbButtonDirective,\n    BmbDividerComponent,\n    CommonModule,\n    BmbLayoutDirective,\n    BmbLayoutItemDirective,\n  ],\n  templateUrl: './bmb-timestream-dialog.component.html',\n  styleUrl: './bmb-timestream-dialog.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbTimestreamDialogComponent {\n  @Input() event: ITimelineEvent | null = null;\n  @Input() lang: string = 'es';\n\n  @Output() closeDialog: EventEmitter<void> = new EventEmitter<void>();\n\n  handleCloseEvent() {\n    this.closeDialog.emit();\n  }\n\n  formatBadgeText(legend: string): string {\n    return legend.replace(/_/g, ' ');\n  }\n\n  appearanceBadgeText(type: string): string {\n    switch (type) {\n      case 'enriquecedor':\n        return 'mitec-red';\n      case 'seriado':\n        return 'mitec-orange';\n      case 'inscripciones':\n        return 'green-light';\n      case 'avance_academico':\n        return 'mitec-blue';\n      case 'otra':\n        return 'purple-light';\n      case 'flexible':\n        return 'mitec-green';\n      default:\n        return 'mitec-blue';\n    }\n  }\n\n  eventTabs: Tab[] = [\n    { id: 1, title: 'Descripción', isActive: true },\n    { id: 2, title: 'Instancias' },\n  ];\n  tabSelected = 1;\n\n  handleTabSelected(tab: Tab) {\n    this.tabSelected = tab.id;\n  }\n\n  getMonthTitle(date: DateTime) {\n    return date.setLocale(this.lang).toFormat('cccc dd LLLL yyyy');\n  }\n\n  getInstances(event: any): string[] {\n    const instances = [];\n    for (let index = 0; index < (event.diff || 0) + 1; index++) {\n      const date = event.originalStart.plus({ days: index });\n      instances.push(this.getMonthTitle(date));\n    }\n    return instances;\n  }\n\n  getDurationString(event: ITimelineEvent): string {\n    return `Duración: ${event.originalStart?.day} - ${event.endEvent?.setLocale(this.lang).toFormat('dd LLLL yyyy')} (${(event.diff || 0) + 1} Días)`;\n  }\n}\n",
            "properties": [
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TableColum",
            "id": "interface-TableColum-178c074bc98bd25303e2db479208eb27862a62871f9ff2b8d0af718a9e4ee1b15803d82c4dcf1a2b6d24fc7acd08032253be1af5d9c695e23b1daebe320126d6",
            "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TemplateRef } from '@angular/core';\n\nexport interface TableColum {\n  label: string;\n  def: string;\n  dataKey: string;\n  htmlLabel?: TemplateRef<any>;\n  templateActions?: TemplateRef<any>;\n  width?: number;\n  icon?: string;\n}\n\nexport interface TableConfig {\n  isSelectable?: boolean;\n  isPaginable?: boolean;\n  isExpandible?: boolean;\n  showActions?: boolean;\n}\n",
            "properties": [
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "def",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "htmlLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "templateActions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TableConfig",
            "id": "interface-TableConfig-178c074bc98bd25303e2db479208eb27862a62871f9ff2b8d0af718a9e4ee1b15803d82c4dcf1a2b6d24fc7acd08032253be1af5d9c695e23b1daebe320126d6",
            "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TemplateRef } from '@angular/core';\n\nexport interface TableColum {\n  label: string;\n  def: string;\n  dataKey: string;\n  htmlLabel?: TemplateRef<any>;\n  templateActions?: TemplateRef<any>;\n  width?: number;\n  icon?: string;\n}\n\nexport interface TableConfig {\n  isSelectable?: boolean;\n  isPaginable?: boolean;\n  isExpandible?: boolean;\n  showActions?: boolean;\n}\n",
            "properties": [
                {
                    "name": "isExpandible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isPaginable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "isSelectable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "showActions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Target",
            "id": "interface-Target-f2c3d13fcf4fd6183ec16ed094945329f06423ca7483317bd35b40b174de58d51ac8b2c617a6cf24a3f7aca7974b78604de4aff3d3f914fbfd2720c5feb49d40",
            "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\n@Component({\n  selector: 'bmb-dot-paginator',\n  standalone: true,\n  styleUrl: './bmb-dot-paginator.component.scss',\n  imports: [CommonModule],\n  templateUrl: './bmb-dot-paginator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbDotPaginatorComponent {\n  @Input() activeDotIndex?: number = 0;\n  @Input() totalDots?: number = 0;\n  @Input() targets: Target[] = [];\n  @Input() appearance: string = '';\n  @Output() onDotPress: EventEmitter<number> = new EventEmitter<number>();\n\n  getDotsArray(): number[] {\n    return new Array(this.totalDots ?? 0).fill(0).map((_, i) => i);\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_dot_paginator'];\n\n    if (this.appearance) {\n      classes.push('bmb_dot_paginator-' + this.appearance);\n    }\n\n    return classes;\n  }\n\n  onDotClicked(index: number): void {\n    this.activeDotIndex = index;\n    this.onDotPress.emit(index);\n  }\n}\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Target",
            "id": "interface-Target-862a1516996e5d18d2a8520cd6caf451201afec1c5719fd13bcb0022f7340430dcd09f326dd17cc204851738187a10b4dc123f374d2d01a9cdabb5c354d5c535-1",
            "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Meta, StoryObj } from '@storybook/angular';\nimport { BmbDotPaginatorComponent } from './bmb-dot-paginator.component';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\nexport default {\n  title: 'Micro Componentes/Dot Paginator',\n  component: BmbDotPaginatorComponent,\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport { BmbDotPaginatorComponent } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [ BmbDotPaginatorComponent ],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\n\nexport class Component {\n  myActiveDotIndex: number = 0;\n  myTotalDots: number = 5;\n  myTargets: Target[] = [\n    { target: '#item1', index: 0 },\n    { target: '#item2', index: 1 },\n  ];\n\n  handleDotPress(index: number): void {\n    this.myActiveDotIndex = index;\n  }\n}\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    appearance: {\n      name: 'Appearance',\n      control: {\n        type: 'radio',\n      },\n      options: ['primary', 'secondary'],\n      description:\n        'The style of the dot paginator. Is not neccesary to add the \"primary\" style.',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'primary' },\n        type: { summary: 'string' },\n      },\n    },\n    activeDotIndex: {\n      name: 'Active dot index',\n      control: 'number',\n      description: 'Index of the active dot.',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 0 },\n        type: { summary: 'number' },\n      },\n    },\n    totalDots: {\n      name: 'Total Dots',\n      control: 'number',\n      description: 'Total number of dots.',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 5 },\n        type: { summary: 'number' },\n      },\n    },\n    targets: {\n      name: 'Targets',\n      control: 'object',\n      description: 'Target objects for each dot.',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'optional' },\n        type: { summary: 'Target[]' },\n      },\n    },\n    onDotPress: {\n      name: 'On Dot Press',\n      control: {\n        type: '',\n      },\n      description:\n        'This handler can be used to perform a specific interaction with each dot.',\n      table: {\n        category: 'Events',\n        type: { summary: '(onDotPress)=\"yourFunction($event)\"' },\n      },\n    },\n  },\n  args: {\n    activeDotIndex: 0,\n    totalDots: 5,\n    targets: [\n      { target: '#item1', index: 0 },\n      { target: '#item2', index: 1 },\n    ],\n    onDotPress: (index: number) => {\n      window.alert(index);\n    },\n  },\n} as Meta<typeof BmbDotPaginatorComponent>;\n\ntype Story = StoryObj<BmbDotPaginatorComponent>;\n\nexport const Default: Story = {};\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Target-1"
        },
        {
            "name": "Target",
            "id": "interface-Target-0be329acc963ff455ffdf9172d95c844a313ba429c49a8f0645bca85aef6b06ecb11a573d85443a1730e1fcc45ddd93688a6b7591932b2eff126b81c31779683-2",
            "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { EventEmitter } from '@angular/core';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\nexport interface Props {\n  activeStepIndex?: number;\n  totalSteps?: number;\n  targets?: Target[];\n  onStepsPress: EventEmitter<number>;\n}\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Target-2"
        }
    ],
    "injectables": [
        {
            "name": "BmbCalendarService",
            "id": "injectable-BmbCalendarService-36a4a591121249642161e76fc2ca33f419f50e61c722b2641146c2257c38b4b0c3e4ef60536712e148db5a12dc19ebc87838bb14f5af28f3455c023703bc410b",
            "file": "projects/ds-ng/src/lib/services/calendar.service.ts",
            "properties": [
                {
                    "name": "eventList",
                    "defaultValue": "signal<IBmbCalendarEvent[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isLoading",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addevent",
                    "args": [
                        {
                            "name": "event",
                            "type": "IBmbCalendarEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IBmbCalendarEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteevent",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editevent",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "geteventList",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setIsLoading",
                    "args": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, signal } from '@angular/core';\nimport { IBmbCalendarEvent } from '../components/bmb-calendar/types';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BmbCalendarService {\n  readonly eventList = signal<IBmbCalendarEvent[]>([]);\n  readonly isLoading = signal<boolean>(false);\n\n  addevent(event: IBmbCalendarEvent) {\n    const id = event.id ?? self.crypto.randomUUID();\n    this.eventList.update((currentevents) => [\n      ...currentevents,\n      { ...event, id },\n    ]);\n  }\n\n  deleteevent(id: string) {\n    this.eventList.update((currentevents) =>\n      currentevents.filter((event) => event.id !== id),\n    );\n  }\n\n  editevent(id: string) {\n    this.eventList.update((currentevents) =>\n      currentevents.map((event) => {\n        if (event.id !== id) return event;\n\n        return event;\n      }),\n    );\n  }\n\n  geteventList() {\n    return this.eventList();\n  }\n\n  setIsLoading(state: boolean) {\n    this.isLoading.set(state);\n  }\n\n  getIsLoading() {\n    return this.isLoading();\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "BmbLoginOnboardingService",
            "id": "injectable-BmbLoginOnboardingService-b96cc646b925f646ce0818d08e877dee472a4b5da09208db63df796d9dd10ed766d67c6a7cc67c1acb72717a5ab77cf392f73075debf52c4fe26846258b0a05b",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding.service.ts",
            "properties": [
                {
                    "name": "activePage",
                    "defaultValue": "signal<number>(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "activeStep",
                    "defaultValue": "signal<number>(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "isLoading",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "totalSteps",
                    "defaultValue": "signal<number>(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "userInfo",
                    "defaultValue": "signal<IBmbUserInfo>({\n    id: '',\n    fullName: '',\n    profilePicture: '',\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "getActivePage",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getActiveStep",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTotalSteps",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUserInfo",
                    "args": [],
                    "optional": false,
                    "returnType": "IBmbUserInfo",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setActivePage",
                    "args": [
                        {
                            "name": "state",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setActiveStep",
                    "args": [
                        {
                            "name": "state",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setIsLoading",
                    "args": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTotalSteps",
                    "args": [
                        {
                            "name": "state",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUserInfo",
                    "args": [
                        {
                            "name": "state",
                            "type": "IBmbUserInfo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "IBmbUserInfo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, signal } from '@angular/core';\nimport { IBmbUserInfo } from './types';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BmbLoginOnboardingService {\n  isLoading = signal<boolean>(false);\n  activePage = signal<number>(0);\n  activeStep = signal<number>(0);\n  totalSteps = signal<number>(0);\n  userInfo = signal<IBmbUserInfo>({\n    id: '',\n    fullName: '',\n    profilePicture: '',\n  });\n\n  getIsLoading(): boolean {\n    return this.isLoading();\n  }\n\n  setIsLoading(state: boolean): void {\n    this.isLoading.set(state);\n  }\n\n  setActivePage(state: number): void {\n    this.activePage.set(state);\n  }\n\n  getActivePage(): number {\n    return this.activePage();\n  }\n\n  setActiveStep(state: number): void {\n    this.activeStep.set(state);\n  }\n\n  getActiveStep(): number {\n    return this.activeStep();\n  }\n\n  getTotalSteps(): number {\n    return this.totalSteps();\n  }\n\n  setTotalSteps(state: number): void {\n    this.totalSteps.set(state);\n  }\n\n  getUserInfo(): IBmbUserInfo {\n    return this.userInfo();\n  }\n\n  setUserInfo(state: IBmbUserInfo) {\n    this.userInfo.set(state);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "BmbNotificationService",
            "id": "injectable-BmbNotificationService-1cc82d868644e21713e8e41ef54b48c0a6fdd2fce0e92d2b7fae37f675174f03bf22911f4c13096d442557c31157f931343c6d94ed196bae170e9d1e3b4b5253",
            "file": "projects/ds-ng/src/lib/services/notification.service.ts",
            "properties": [
                {
                    "name": "notificationList",
                    "defaultValue": "signal<INotification[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "positionX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NotificationPositionX",
                    "optional": true,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "'positionX'"
                        },
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125
                    ]
                },
                {
                    "name": "positionY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NotificationPositionY",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "'positionY'"
                        },
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        170,
                        170,
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addNotification",
                    "args": [
                        {
                            "name": "notification",
                            "type": "INotification",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "notification",
                            "type": "INotification",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteNotification",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getNotificationList",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable, Optional, signal } from '@angular/core';\nimport { INotification } from '../components/bmb-push-notification/types';\n\nexport type NotificationPositionX = 'left' | 'right';\nexport type NotificationPositionY = 'top' | 'bottom';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BmbNotificationService {\n  readonly notificationList = signal<INotification[]>([]);\n\n  constructor(\n    @Inject('positionX') @Optional() public positionX?: NotificationPositionX,\n    @Inject('positionY') @Optional() public positionY?: NotificationPositionY,\n  ) {\n    this.positionX = positionX || 'right';\n    this.positionY = positionY || 'top';\n  }\n\n  addNotification(notification: INotification) {\n    const id = notification.id ?? self.crypto.randomUUID();\n\n    this.notificationList.update((currentNotifications) => [\n      ...currentNotifications,\n      { ...notification, id },\n    ]);\n\n    setTimeout(() => {\n      this.deleteNotification(id);\n    }, notification.delay || 5000);\n  }\n\n  deleteNotification(id: string) {\n    console.log('delete');\n\n    this.notificationList.update((currentNotifications) =>\n      currentNotifications.filter((notification) => notification.id !== id),\n    );\n  }\n\n  getNotificationList() {\n    return this.notificationList();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "positionX",
                        "type": "NotificationPositionX",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "positionY",
                        "type": "NotificationPositionY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "positionX",
                        "type": "NotificationPositionX",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "positionY",
                        "type": "NotificationPositionY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "DsNgService",
            "id": "injectable-DsNgService-e91991127dd8fe0ec548387ab65070beb0485803fcea2c2869027f1a009bf961c6c901a5d51eefbd74b583d360590acefd38ec0295336e71094b3cedf4ed89af",
            "file": "projects/ds-ng/src/lib/ds-ng.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DsNgService {\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ModalService",
            "id": "injectable-ModalService-fb7affb0ade2ac184895d425b33713cb634356f007420252e0186f1d84dcd2c50bea52263b448ae2603476fd971892cf3522b9642c12a5f77e5e39da1d851b50",
            "file": "projects/ds-ng/src/lib/services/modal.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "openModal",
                    "args": [
                        {
                            "name": "data",
                            "type": "ModalDataConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "ModalDataConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { BmbModalComponent } from '../../public-api';\nimport { ModalDataConfig } from '../components/bmb-modal/bmb-modal.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  constructor(private matDialog: MatDialog) {}\n\n  public openModal(data: ModalDataConfig) {\n    this.matDialog.open(BmbModalComponent, {\n      data,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ThemeService",
            "id": "injectable-ThemeService-86c42e29891da680255e828f90ca9c13ab90bda752e9b775026658162ae6becb733f9b7ddf3c1f5cfc652708b43c4d13c735a9af03f08b9dff17fcd786d2d275",
            "file": "projects/ds-ng/src/lib/services/theme.service.ts",
            "properties": [
                {
                    "name": "theme$",
                    "defaultValue": "this.themeSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "themeSubject",
                    "defaultValue": "new BehaviorSubject<string>(\n    localStorage.getItem('theme') || 'light',\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getDefaultTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setTheme",
                    "args": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService {\n  private themeSubject = new BehaviorSubject<string>(\n    localStorage.getItem('theme') || 'light',\n  );\n  theme$ = this.themeSubject.asObservable();\n\n  getDefaultTheme(): string {\n    return 'light';\n  }\n\n  setTheme(theme: string): void {\n    this.themeSubject.next(theme);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ToastService",
            "id": "injectable-ToastService-d15917c926925fffde10fc52717e682a9543cc1913fbe4a085ce0513851e78b90b31268ef81ee30f9089a24f17f0bf8b2e018bf27fb5b9edd8d9c5636ead3938",
            "file": "projects/ds-ng/src/lib/services/toast.service.ts",
            "properties": [
                {
                    "name": "isOpen$",
                    "defaultValue": "this.isOpenSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "isOpenSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "closeToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastService {\n  private isOpenSubject = new BehaviorSubject<boolean>(false);\n  isOpen$ = this.isOpenSubject.asObservable();\n\n  openToast() {\n    this.isOpenSubject.next(true);\n  }\n\n  closeToast() {\n    this.isOpenSubject.next(false);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "CircleProgressOptions",
            "id": "class-CircleProgressOptions-a5162687b78f5e786a7591a6972ca88723c372697f4a6d69166cf67ac9d759e19c1a141c962e6d3aee63d632bbc1fca481d178d17af2bd8d58972c46a9b81c2c",
            "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { BmbProgressCircleOptionsInterface } from './bmb-progress-circle.interface';\nimport { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nexport class CircleProgressOptions\n  implements BmbProgressCircleOptionsInterface\n{\n  valueLabel = '$10000';\n  showValueLabel = true;\n  backgroundPadding = -9;\n  percent = 50;\n  radius = 100;\n  space = -5;\n  outerStrokeWidth = 5;\n  outerStrokeLinecap = 'round';\n  innerStrokeWidth = 5;\n  title: string | Array<String> = 'Total a pagar';\n  showTitle = true;\n  showBackground = true;\n  responsive = true;\n}\n\n@Component({\n  selector: 'bmb-progress-circle',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-progress-circle.component.html',\n  styleUrl: './bmb-progress-circle.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    { provide: CircleProgressOptions, useValue: CircleProgressOptions },\n  ],\n})\nexport class BmbProgressCircleComponent implements OnChanges {\n  @Input() valueLabel?: string;\n  @Input() showValueLabel?: boolean;\n\n  @Input() percent!: number;\n\n  @Input() title?: string | Array<String>;\n\n  @Input() showTitle?: boolean;\n  @Input() showBackground?: boolean;\n\n  responsive = true;\n  svg: any;\n  options: CircleProgressOptions = new CircleProgressOptions();\n  _lastPercent: number = 0;\n\n  constructor(defaultOptions: CircleProgressOptions) {\n    Object.assign(this.options, defaultOptions);\n  }\n\n  ngOnInit() {\n    this.render();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.render();\n  }\n\n  render() {\n    this.applyOptions();\n    this.draw(this.options.percent);\n    this._lastPercent = this.options.percent;\n  }\n\n  polarToCartesian(\n    centerX: number,\n    centerY: number,\n    radius: number,\n    angleInDegrees: number,\n  ) {\n    let angleInRadius = (angleInDegrees * Math.PI) / 180;\n    let x = centerX + Math.sin(angleInRadius) * radius;\n    let y = centerY - Math.cos(angleInRadius) * radius;\n    return { x: x, y: y };\n  }\n\n  draw(percent: number) {\n    percent = Math.abs(percent);\n    let circlePercent = percent > 100 ? 100 : percent;\n    let boxSize = this.options.radius! * 2 + this.options.outerStrokeWidth * 2;\n    let centre = { x: boxSize / 2, y: boxSize / 2 };\n    let startPoint = { x: centre.x, y: centre.y - this.options.radius };\n    let endPoint = this.polarToCartesian(\n      centre.x,\n      centre.y,\n      this.options.radius,\n      (360 * (100 - circlePercent)) / 100,\n    );\n    let largeArcFlag: any, sweepFlag: any;\n    if (circlePercent > 50) {\n      [largeArcFlag, sweepFlag] = [1, 0];\n    } else {\n      [largeArcFlag, sweepFlag] = [0, 0];\n    }\n    let titlePercent = this.options.percent;\n    let titleTextPercent = titlePercent;\n    let title = {\n      x: centre.x,\n      y: centre.y,\n      textAnchor: 'middle',\n      texts: new Array<any>(),\n      tspans: new Array<any>(),\n    };\n    if (this.title === '' || this.title === undefined) {\n      title.texts.push(titleTextPercent);\n    } else {\n      if (this.title instanceof Array) {\n        title.texts = [...this.title];\n      } else {\n        title.texts.push(this.title.toString());\n      }\n    }\n    let valueLabel = {\n      x: centre.x,\n      y: centre.y,\n      textAnchor: 'middle',\n      texts: new Array<any>(),\n      tspans: new Array<any>(),\n    };\n    if (this.valueLabel === undefined) {\n      valueLabel.texts.push(`0`);\n    } else {\n      valueLabel.texts.push(this.valueLabel);\n    }\n    let rowCount = 0,\n      rowNum = 1;\n    this.options.showTitle && (rowCount += title.texts.length);\n    this.options.showValueLabel && (rowCount += valueLabel.texts.length);\n    if (this.options.showTitle) {\n      for (let span of title.texts) {\n        title.tspans.push({\n          span: span,\n          dy: this.getRelativeY(rowNum, rowCount),\n        });\n        rowNum++;\n      }\n    }\n    if (this.options.showValueLabel) {\n      for (let span of valueLabel.texts) {\n        valueLabel.tspans.push({\n          span: span,\n          dy: this.getRelativeY(rowNum, rowCount),\n        });\n        rowNum++;\n      }\n    }\n    this.svg = {\n      viewBox: `0 0 ${boxSize} ${boxSize}`,\n      width: this.options.responsive ? '100%' : boxSize,\n      height: this.options.responsive ? '100%' : boxSize,\n      backgroundCircle: {\n        cx: centre.x,\n        cy: centre.y,\n        r:\n          this.options.radius +\n          this.options.outerStrokeWidth / 2 +\n          this.options.backgroundPadding,\n      },\n      path: {\n        d: `M ${startPoint.x} ${startPoint.y}\n       A ${this.options.radius} ${this.options.radius} 0 ${largeArcFlag} ${sweepFlag} ${endPoint.x} ${endPoint.y}`,\n        strokeWidth: this.options.outerStrokeWidth,\n        strokeLinecap: this.options.outerStrokeLinecap,\n        fill: 'none',\n      },\n      circle: {\n        cx: centre.x,\n        cy: centre.y,\n        r:\n          this.options.radius -\n          this.options.space -\n          this.options.outerStrokeWidth / 2 -\n          this.options.innerStrokeWidth / 2,\n        strokeWidth: this.options.innerStrokeWidth,\n      },\n      title: title,\n      valueLabel: valueLabel,\n    };\n  }\n\n  private applyOptions() {\n    this.options.radius = Math.abs(100);\n    this.options.space = -5;\n    this.options.percent = this.percent!;\n    this.options.outerStrokeWidth = 5;\n    this.options.innerStrokeWidth = 5;\n    this.options.backgroundPadding = -9;\n    this.options.showTitle = this.showTitle ? this.showTitle : false;\n    this.options.showValueLabel = this.showValueLabel\n      ? this.showValueLabel\n      : false;\n    this.options.responsive = this.responsive!;\n  }\n\n  private getRelativeY(rowNum: number, rowCount: number): string {\n    let initialOffset = -0.18,\n      offset = 1.2;\n    return (initialOffset + offset * (rowNum - rowCount / 2)).toFixed(2) + 'em';\n  }\n}\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "backgroundPadding",
                    "defaultValue": "-9",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "innerStrokeWidth",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "outerStrokeLinecap",
                    "defaultValue": "'round'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "outerStrokeWidth",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "percent",
                    "defaultValue": "50",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "radius",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "responsive",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "showBackground",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "showTitle",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "showValueLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "space",
                    "defaultValue": "-5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "title",
                    "defaultValue": "'Total a pagar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | Array<String>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "valueLabel",
                    "defaultValue": "'$10000'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "BmbProgressCircleOptionsInterface"
            ]
        }
    ],
    "directives": [
        {
            "name": "BmbButtonDirective",
            "id": "directive-BmbButtonDirective-e871543941ba4d87035c2503fce4b47943f21ebfe83cda884c41e69380ac0a5462024a4421d599888a69ea8bf2e14c23482e39e8aa6bb3e02773c17a867a7b48",
            "file": "projects/ds-ng/src/lib/directives/button.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  Directive,\n  Input,\n  ElementRef,\n  HostBinding,\n  ViewContainerRef,\n  ChangeDetectorRef,\n  OnInit,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n  input,\n} from '@angular/core';\nimport { BmbIconComponent } from '../components/bmb-icon/bmb-icon.component';\nimport { IBmbHorizontalPosition, IButtonAppearance } from '../types';\n\n@Directive({\n  selector: '[bmbButton]',\n  standalone: true,\n})\nexport class BmbButtonDirective implements OnInit, OnChanges {\n  icon = input<string>('');\n  position = input<IBmbHorizontalPosition>('left');\n  case = input<boolean>(false);\n  appearance = input<IButtonAppearance>('primary');\n  size = input<'small' | 'large'>('small');\n  isToggleActive = input<boolean>(false);\n  enableButtonToggle = input<boolean>(false);\n  isRounded = input<boolean>(false);\n\n  private providedInputs: Set<string> = new Set();\n\n  constructor(\n    private el: ElementRef,\n    private viewContainerRef: ViewContainerRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n  ) {}\n\n  ngOnInit(): void {\n    this.addContent();\n    this.applyAttributes();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    Object.keys(changes).forEach((input) => {\n      this.providedInputs.add(input);\n    });\n\n    this.applyAttributes();\n    this.addContent();\n    this.cdr.markForCheck();\n  }\n\n  private applyAttributes() {\n    if (this.providedInputs.has('case')) {\n      if (this.case()) {\n        this.renderer.setAttribute(this.el.nativeElement, 'case', 'true');\n      } else {\n        this.renderer.removeAttribute(this.el.nativeElement, 'case');\n      }\n    }\n\n    if (this.providedInputs.has('size') && this.size()) {\n      this.renderer.setAttribute(this.el.nativeElement, 'size', this.size());\n    }\n\n    if (this.providedInputs.has('position')) {\n      this.renderer.setAttribute(\n        this.el.nativeElement,\n        'position',\n        this.position(),\n      );\n    }\n  }\n\n  @HostBinding('class') get elementClass(): string[] {\n    const classList = [`bmb_btn-${this.appearance()}`];\n    if (this.enableButtonToggle() && this.isToggleActive())\n      classList.push('bmb_btn-toggle-active');\n    if (this.isRounded()) classList.push('bmb_btn-rounded');\n\n    return classList;\n  }\n\n  private addContent() {\n    this.viewContainerRef.clear();\n\n    if (this.icon) {\n      const iconComponentRef =\n        this.viewContainerRef.createComponent(BmbIconComponent); // Crear una instancia del componente\n      const iconComponent = iconComponentRef.instance;\n      iconComponent.icon = this.icon();\n\n      if (this.position() === 'right') {\n        this.el.nativeElement.insertBefore(\n          iconComponentRef.location.nativeElement,\n          this.el.nativeElement.lastChild.nextSibling,\n        );\n      } else {\n        this.el.nativeElement.insertBefore(\n          iconComponentRef.location.nativeElement,\n          this.el.nativeElement.firstChild,\n        );\n      }\n    }\n  }\n}\n",
            "selector": "[bmbButton]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "case",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false
                },
                {
                    "name": "enableButtonToggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "required": false
                },
                {
                    "name": "isRounded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                },
                {
                    "name": "isToggleActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": false
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "defaultValue": "input<IButtonAppearance>('primary')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "case",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false
                },
                {
                    "name": "enableButtonToggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "required": false
                },
                {
                    "name": "icon",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "isRounded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                },
                {
                    "name": "isToggleActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": false
                },
                {
                    "name": "position",
                    "defaultValue": "input<IBmbHorizontalPosition>('left')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "providedInputs",
                    "defaultValue": "new Set()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Set<string>",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "size",
                    "defaultValue": "input<'small' | 'large'>('small')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "addContent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "applyAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "elementClass": {
                    "name": "elementClass",
                    "getSignature": {
                        "name": "elementClass",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 77
                    }
                }
            }
        },
        {
            "name": "BmbButtonGroupDirective",
            "id": "directive-BmbButtonGroupDirective-c677ecadaacf1d28632ef03c669d4c8bbf5def5b409c1a6e833318bf32f0f5f2229603177647bb496da35b428b220127347ab217f383310186a1c5a240c0f641",
            "file": "projects/ds-ng/src/lib/directives/bmb-button-group/bmb-button-group.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\nimport { IButtonAppearance } from '../../types';\n\n@Directive({\n  selector: '[bmbButtonGroup]',\n  standalone: true,\n})\nexport class BmbButtonGroupDirective {\n  @Input() appearance: IButtonAppearance = 'primary';\n  @Input() size: 'small' | 'large' = 'small';\n\n  @HostBinding('class') get elementClass(): string[] {\n    const classList = [\n      'bmb_button-group',\n      `bmb_button-group-${this.appearance}`,\n      `bmb_button-group-${this.size}`,\n    ];\n    return classList;\n  }\n}\n",
            "selector": "[bmbButtonGroup]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "IButtonAppearance",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'small'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"small\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": [],
            "accessors": {
                "elementClass": {
                    "name": "elementClass",
                    "getSignature": {
                        "name": "elementClass",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 12
                    }
                }
            }
        },
        {
            "name": "BmbInputStatesDirective",
            "id": "directive-BmbInputStatesDirective-58782ed409203032b9a6bedf297a73a8d8847b9128fb1557fa33bef3f62d6938afc764a86e8ad55addafba430764f9b1940d2f1deb8e45742279003d553e2de9",
            "file": "projects/ds-ng/src/lib/directives/bmb-input-states/bmb-input-states.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[bmb-input-states]',\n})\nexport class BmbInputStatesDirective {\n  @Input() focus: unknown = () => {};\n  @Input() blur: unknown = () => {};\n  constructor(private el: ElementRef) {}\n\n  @HostListener('focus')\n  onFocus() {\n    focus();\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    blur();\n  }\n}\n",
            "selector": "[bmb-input-states]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "blur",
                    "defaultValue": "() => {}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "focus",
                    "defaultValue": "() => {}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "blur",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17
                },
                {
                    "name": "focus",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'blur'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "onFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'focus'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "BmbLayoutDirective",
            "id": "directive-BmbLayoutDirective-20a4b677df2ea71481f02efa2a933ca1d274c81daa7799ec34c87bafc53da573610cc103cdae0456e7ce725aaee9a9812d40c8c4304ef4ad44ced40332beb266",
            "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\nimport { SizeNames } from '../../types';\n\nexport type IJustifyOptions =\n  | 'center'\n  | 'end'\n  | 'start'\n  | 'stretch'\n  | 'spaceAround'\n  | 'spaceBetween'\n  | 'spaceEvenly';\nexport type IAlignItemsOptions = 'center' | 'end' | 'start' | 'stretch';\n\n@Directive({\n  selector: '[bmbLayout]',\n  standalone: true,\n})\nexport class BmbLayoutDirective {\n  @Input() gapSise: SizeNames = 'm';\n  @Input() margin: SizeNames = 'm';\n  @Input() dinamycCols: boolean = false;\n  @Input() justify: IJustifyOptions = 'start';\n  @Input() alignItems: IAlignItemsOptions = 'start';\n\n  constructor() {}\n\n  @HostBinding('class') get elementClass(): string[] {\n    const classes = [\n      'bmb_layout',\n      `bmb_gap-${this.gapSise}`,\n      `bmb_margin-${this.margin}`,\n      `bmb_justify-${this.justify}`,\n      `bmb_alignItems-${this.alignItems}`,\n    ];\n\n    if (this.dinamycCols) classes.push('bmb_layout-smart');\n    return classes;\n  }\n}\n",
            "selector": "[bmbLayout]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "alignItems",
                    "defaultValue": "'start'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "IAlignItemsOptions",
                    "decorators": []
                },
                {
                    "name": "dinamycCols",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "gapSise",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "SizeNames",
                    "decorators": []
                },
                {
                    "name": "justify",
                    "defaultValue": "'start'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "IJustifyOptions",
                    "decorators": []
                },
                {
                    "name": "margin",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "SizeNames",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "accessors": {
                "elementClass": {
                    "name": "elementClass",
                    "getSignature": {
                        "name": "elementClass",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 27
                    }
                }
            }
        },
        {
            "name": "BmbLayoutItemDirective",
            "id": "directive-BmbLayoutItemDirective-1396a987a9f3e7de16a8cc9b117e4f4509d8bff919c9dfe790b992732332ebf04db3154290498eea97317e59af5e80ad2c7dee81e83bb7f0e1f36b3631d44837",
            "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input, OnInit } from '@angular/core';\n\nexport interface IMargin {\n  sm: number;\n  lg?: number;\n}\n\n@Directive({\n  selector: '[bmbLayoutItem]',\n  standalone: true,\n})\nexport class BmbLayoutItemDirective implements OnInit {\n  @Input() colSm: number = 0;\n  @Input() colLg: number = 0;\n  @Input() marginLeft?: IMargin;\n  @Input() marginRight?: IMargin;\n  @Input() colGrow: number = 0;\n  @Input() isDinamycItem: boolean = false;\n\n  @HostBinding('class') get elementClass(): string[] {\n    const classes = [];\n\n    if (this.colSm) classes.push(`bmb_col-sm-${this.colSm}`);\n    if (this.colLg) classes.push(`bmb_col-lg-${this.colLg}`);\n    if (this.marginLeft) {\n      classes.push(`bmb_space-sm-left-${this.marginLeft?.sm}`);\n\n      if (this.marginLeft.lg)\n        classes.push(`bmb_space-lg-left-${this.marginLeft?.lg}`);\n    }\n    if (this.marginRight) {\n      classes.push(`bmb_space-sm-right-${this.marginRight?.sm}`);\n\n      if (this.marginRight.lg)\n        classes.push(`bmb_space-lg-right-${this.marginRight?.lg}`);\n    }\n    return classes;\n  }\n\n  @HostBinding('style.flex') flex?: string;\n\n  ngOnInit() {\n    if (this.isDinamycItem) {\n      this.flex = `${this.colGrow} 0 0%`;\n    }\n  }\n}\n",
            "selector": "[bmbLayoutItem]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "colGrow",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "colLg",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "colSm",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "isDinamycItem",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "marginLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "IMargin",
                    "decorators": []
                },
                {
                    "name": "marginRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "IMargin",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "style.flex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "flex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.flex'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "elementClass": {
                    "name": "elementClass",
                    "getSignature": {
                        "name": "elementClass",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 20
                    }
                }
            }
        },
        {
            "name": "ClickOutsideDirective",
            "id": "directive-ClickOutsideDirective-a41a9dbe63c75a67b1af4e1ca34ae4ad24364b74c7e498d6d076990695bf2f04efd34cd8d3cbd8c60a4febbb5622c2aa015852771c7951717c8ec77bf16c316c",
            "file": "projects/ds-ng/src/lib/directives/utils/clickoutside.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { Subscription, filter, fromEvent } from 'rxjs';\n\n@Directive({\n  selector: '[clickOutside]',\n  standalone: true,\n})\nexport class ClickOutsideDirective implements AfterViewInit, OnDestroy {\n  @Output() clickOutside: EventEmitter<void> = new EventEmitter<void>();\n\n  documentClickSubscription: Subscription | undefined;\n\n  constructor(\n    private element: ElementRef,\n    @Inject(DOCUMENT) private document: Document,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.documentClickSubscription = fromEvent(this.document, 'click')\n      .pipe(\n        filter((event) => {\n          return !this.isInside(event.target as HTMLElement);\n        }),\n      )\n      .subscribe(() => {\n        this.clickOutside.emit();\n      });\n  }\n\n  isInside(elemeToCheck: HTMLElement): boolean {\n    return (\n      elemeToCheck === this.element.nativeElement ||\n      this.element.nativeElement.contains(elemeToCheck) ||\n      elemeToCheck?.classList?.contains('modal-persist')\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.documentClickSubscription?.unsubscribe();\n  }\n}\n",
            "selector": "[clickOutside]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "clickOutside",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<void>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "documentClickSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "isInside",
                    "args": [
                        {
                            "name": "elemeToCheck",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "elemeToCheck",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "TemplateNameDirective",
            "id": "directive-TemplateNameDirective-d1e6fc20f697e9a35fb44fe61ad64be1e7037aa2e8f0a0e976a90d3a60719075084392bdbee761f944ba4ecd2528f8f8c968267e7fd68b59afd866439cb66f82",
            "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[templateName]',\n})\nexport class TemplateNameDirective {\n  @Input() templateName!: string;\n\n  constructor(public template: TemplateRef<any>) {}\n}\n",
            "selector": "[templateName]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "templateName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "template",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "template",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "BmbAccountStatementComponent",
            "id": "component-BmbAccountStatementComponent-68409dfa006cb777a8e265aca5e543842e2ffe7c2aa2da676af9a8bcb6ab1dcc72839f14e232d639db2f8b3a1c1bda1991a708d6637b436b9e44a8e42475881d",
            "file": "projects/ds-ng/src/lib/components/bmb-account-statement/bmb-account-statement.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-account-statement",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-account-statement.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "valuePrimary",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                },
                {
                    "name": "valueSecondary",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "closeEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "closeEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "required": false
                },
                {
                    "name": "labelPrimary",
                    "defaultValue": "input<string>('Cuota Mensual')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "labelSecondary",
                    "defaultValue": "input<string>('Pendiente')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "progressCircleTitle",
                    "defaultValue": "input<string[]>(['Total a pagar', 'este mes'])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "title",
                    "defaultValue": "input<string>('Estado de cuenta')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "valuePrimary",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                },
                {
                    "name": "valueSecondary",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "handleClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbHeaderMobileComponent",
                    "type": "component"
                },
                {
                    "name": "BmbBalanceOverviewComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbHeaderMobileComponent } from '../bmb-header-mobile/bmb-header-mobile.component';\nimport { BmbBalanceOverviewComponent } from '../bmb-balance-overview/bmb-balance-overview.component';\n\n@Component({\n  selector: 'bmb-account-statement',\n  standalone: true,\n  imports: [BmbHeaderMobileComponent, BmbBalanceOverviewComponent],\n  templateUrl: './bmb-account-statement.component.html',\n  styleUrl: './bmb-account-statement.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbAccountStatementComponent {\n  title = input<string>('Estado de cuenta');\n  progressCircleTitle = input<string[]>(['Total a pagar', 'este mes']);\n  labelPrimary = input<string>('Cuota Mensual');\n  labelSecondary = input<string>('Pendiente');\n  valuePrimary = input<number>(0);\n  valueSecondary = input<number>(0);\n\n  closeEvent = output<void>();\n\n  handleClose() {\n    this.closeEvent.emit();\n  }\n}\n",
            "styleUrl": "./bmb-account-statement.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<bmb-header-mobile\n  [text]=\"title()\"\n  iconLeft=\"close\"\n  (onIconLeftClick)=\"handleClose()\"\n></bmb-header-mobile>\n<main>\n  <bmb-balance-overview\n    [progressCircleTitle]=\"progressCircleTitle()\"\n    [labelPrimary]=\"labelPrimary()\"\n    [labelSecondary]=\"labelSecondary()\"\n  />\n</main>\n<footer>Footer</footer>\n"
        },
        {
            "name": "BmbAdvertisementCardComponent",
            "id": "component-BmbAdvertisementCardComponent-72fb4b3030fc4b4458b6a0b0e6cce405f810cf5d7f4711e8577765f6f184b0ea29bcbcc75e9646702e7259e991568c171ae448b722fcd09315a18d5e005b7739",
            "file": "projects/ds-ng/src/lib/components/bmb-advertisement-card/bmb-advertisement-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-advertisement-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-advertisement-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "defaultValue": "{\n    promociones: [\n      {\n        imgData: {\n          url: '',\n          alt: 'Imagen',\n        },\n        content: {\n          title: 'Lorem ipsum dolor sit amet',\n          description:\n            'lorem commodi eveniet ullam accusantium officiis mollitia error ipsa sapiente.',\n          linkBtn: '',\n          labelBtn: 'ACTION',\n        },\n      },\n    ],\n    avisos: [\n      {\n        imgData: {\n          url: '',\n          alt: 'Imagen',\n        },\n        content: {\n          title: 'Lorem ipsum dolor sit amet',\n          description:\n            'lorem commodi eveniet ullam accusantium officiis mollitia error ipsa sapiente.',\n          linkBtn: '',\n        },\n      },\n    ],\n    informacion: [\n      {\n        imgData: {\n          url: '',\n          alt: 'Imagen',\n        },\n        content: {\n          title: 'Lorem ipsum dolor sit amet',\n          description:\n            'lorem commodi eveniet ullam accusantium officiis mollitia error ipsa sapiente.',\n          linkBtn: '',\n        },\n      },\n    ],\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "IBmbAdvertisementData",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeData",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "activeDot",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "activeTab",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "expanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 82
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDotPress",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setActiveTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbInteractiveIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbDotPaginatorComponent",
                    "type": "component"
                },
                {
                    "name": "BmbMediaCardComponent",
                    "type": "component"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbFrequentAppsSelectorComponent } from '../bmb-frequent-apps-selector/bmb-frequent-apps-selector.component';\nimport { BmbInteractiveIconComponent } from '../bmb-interactive-icon/bmb-interactive-icon.component';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbDotPaginatorComponent } from '../bmb-dot-paginator/bmb-dot-paginator.component';\nimport { BmbMediaCardComponent } from '../bmb-media-card/bmb-media-card.component';\nimport { BmbButtonDirective } from '../../directives/button.directive';\nimport { IBmbAdvertisementCard, IBmbAdvertisementData } from './types';\n\n@Component({\n  selector: 'bmb-advertisement-card',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbInteractiveIconComponent,\n    BmbIconComponent,\n    BmbDotPaginatorComponent,\n    BmbMediaCardComponent,\n    BmbButtonDirective,\n  ],\n  templateUrl: './bmb-advertisement-card.component.html',\n  styleUrl: './bmb-advertisement-card.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbAdvertisementCardComponent implements OnInit {\n  @Input() data: IBmbAdvertisementData = {\n    promociones: [\n      {\n        imgData: {\n          url: '',\n          alt: 'Imagen',\n        },\n        content: {\n          title: 'Lorem ipsum dolor sit amet',\n          description:\n            'lorem commodi eveniet ullam accusantium officiis mollitia error ipsa sapiente.',\n          linkBtn: '',\n          labelBtn: 'ACTION',\n        },\n      },\n    ],\n    avisos: [\n      {\n        imgData: {\n          url: '',\n          alt: 'Imagen',\n        },\n        content: {\n          title: 'Lorem ipsum dolor sit amet',\n          description:\n            'lorem commodi eveniet ullam accusantium officiis mollitia error ipsa sapiente.',\n          linkBtn: '',\n        },\n      },\n    ],\n    informacion: [\n      {\n        imgData: {\n          url: '',\n          alt: 'Imagen',\n        },\n        content: {\n          title: 'Lorem ipsum dolor sit amet',\n          description:\n            'lorem commodi eveniet ullam accusantium officiis mollitia error ipsa sapiente.',\n          linkBtn: '',\n        },\n      },\n    ],\n  };\n\n  @Input() subtitle: string = '';\n\n  expanded: boolean = false;\n  activeData: any = null;\n  activeTab: number = 1;\n  activeDot: number = 0;\n\n  ngOnInit(): void {\n    this.activeTab = 1;\n    this.activeData = this.data.promociones;\n  }\n\n  setActiveTab(tab: number) {\n    this.activeTab = tab;\n\n    switch (tab) {\n      case 1:\n        this.activeData = this.data.promociones;\n        break;\n      case 2:\n        this.activeData = this.data.avisos;\n        break;\n      case 3:\n        this.activeData = this.data.informacion;\n        break;\n\n      default:\n        this.activeData = this.data.promociones;\n        break;\n    }\n  }\n\n  onDotPress(event: any) {\n    this.activeDot = event;\n  }\n\n  setSize(size: string) {\n    this.expanded = size === 'expand' ? true : false;\n  }\n}\n",
            "styleUrl": "./bmb-advertisement-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<section\n  class=\"bmb_advertisement-card\"\n  [ngClass]=\"{ 'bmb_advertisement-card-expanded': expanded }\"\n>\n  <div class=\"bmb_advertisement-card-header\">\n    <div class=\"bmb_advertisement-card-header-title\">\n      <div class=\"bmb_advertisement-card-header-iconbox\">\n        <bmb-icon\n          class=\"bmb_advertisement-card-header-iconbox-icon\"\n          [icon]=\"'assignment'\"\n        />\n      </div>\n      <div class=\"bmb_advertisement-card-header-title-text\">\n        <h2>Mis Anuncios</h2>\n        @if (expanded) {\n          <span>{{ subtitle }}</span>\n        }\n      </div>\n    </div>\n    <div class=\"bmb_advertisement-card-header-trailing\">\n      @if (expanded) {\n        <bmb-icon\n          (click)=\"setSize('collapse')\"\n          class=\"bmb_advertisement-card-header-trailing-close\"\n          [icon]=\"'close_fullscreen'\"\n          onkeypress=\"\"\n        />\n      } @else {\n        <bmb-icon\n          (click)=\"setSize('expand')\"\n          class=\"bmb_advertisement-card-header-trailing-expand\"\n          [icon]=\"'fit_screen'\"\n          onkeypress=\"\"\n        />\n      }\n    </div>\n  </div>\n  <div class=\"bmb_advertisement-card-tabs\">\n    <div\n      class=\"bmb_advertisement-card-tabs-container\"\n      [ngClass]=\"{ 'bmb_advertisement-card-tabs-active': activeTab == 1 }\"\n      (click)=\"setActiveTab(1)\"\n      onkeypress=\"\"\n    >\n      <span class=\"bmb_advertisement-card-tabs-container-text\">\n        Promociones\n      </span>\n    </div>\n    <div\n      class=\"bmb_advertisement-card-tabs-container\"\n      [ngClass]=\"{ 'bmb_advertisement-card-tabs-active': activeTab == 2 }\"\n      (click)=\"setActiveTab(2)\"\n      onkeypress=\"\"\n    >\n      <span class=\"bmb_advertisement-card-tabs-container-text\"> Avisos </span>\n    </div>\n    <div\n      class=\"bmb_advertisement-card-tabs-container\"\n      [ngClass]=\"{ 'bmb_advertisement-card-tabs-active': activeTab == 3 }\"\n      (click)=\"setActiveTab(3)\"\n      onkeypress=\"\"\n    >\n      <span class=\"bmb_advertisement-card-tabs-container-text\">\n        Información\n      </span>\n    </div>\n  </div>\n  <div class=\"bmb_advertisement-card-content\">\n    @for (data of activeData; track $index) {\n      @if ($index == activeDot) {\n        <div class=\"bmb_advertisement-card-container\">\n          <div\n            [ngClass]=\"{\n              'bmb_advertisement-card-content-image-full': expanded,\n            }\"\n            class=\"bmb_advertisement-card-content-image\"\n          >\n            <figure class=\"bmb_advertisement-card-image-container-figure\">\n              <picture>\n                <source\n                  media=\"(min-width: 100px)\"\n                  [srcset]=\"activeData[activeDot].imgData.url\"\n                />\n                <img\n                  [loading]=\"'lazy'\"\n                  class=\"bmb_advertisement-card-image-container-figure-image\"\n                  [srcset]=\"activeData[activeDot].imgData.url\"\n                  [alt]=\"activeData[activeDot].imgData.alt\"\n                />\n              </picture>\n            </figure>\n          </div>\n          <div\n            [ngClass]=\"{\n              'bmb_advertisement-card-content-description-hide': !expanded,\n            }\"\n            class=\"bmb_advertisement-card-content-description\"\n          >\n            <div class=\"bmb_advertisement-card-content-description-title\">\n              <h1>{{ activeData[activeDot].content.title }}</h1>\n            </div>\n            <div class=\"bmb_advertisement-card-content-description-text\">\n              <p>{{ activeData[activeDot].content.description }}</p>\n            </div>\n            <div class=\"bmb_advertisement-card-content-description-btn\">\n              <a [href]=\"activeData[activeDot].content.linkBtn\" target=\"_blank\">\n                <button\n                  class=\"bmb_advertisement-card-content-description-btn-action\"\n                  bmbButton\n                  appearance=\"primary\"\n                  size=\"small\"\n                >\n                  {{ activeData[activeDot].content.labelBtn }}\n                </button>\n              </a>\n            </div>\n          </div>\n        </div>\n        <div class=\"bmb_advertisement-card-content-paginator\">\n          <bmb-dot-paginator\n            [activeDotIndex]=\"activeDot\"\n            [totalDots]=\"activeData.length\"\n            (onDotPress)=\"onDotPress($event)\"\n          />\n        </div>\n      }\n    }\n  </div>\n</section>\n"
        },
        {
            "name": "BmbBadgeComponent",
            "id": "component-BmbBadgeComponent-5df390225a3d0ef6675bd22ac4dc18adbd5292ee3958e43bcb559d1f5d8c9a48a8fb5731843478bd0c55812d0635d486ffdecdb7b71a9d001be5e67d828f1882",
            "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-badge",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-badge.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "custom",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "customBackground",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "grouped",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getStyles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-badge',\n  styleUrl: './bmb-badge.component.scss',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-badge.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbBadgeComponent implements AfterViewInit {\n  @Input() appearance: string = '';\n  @Input() text: string = '';\n  @Input() grouped: boolean = false;\n  @Input() custom: boolean = false;\n  @Input() customBackground?: string;\n  @Input() customColor?: string;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n  ) {}\n\n  ngAfterViewInit() {\n    if (this.grouped) {\n      const parentElement = this.el.nativeElement.parentElement;\n\n      let wrapperDiv = parentElement.querySelector('.bmb_badge-grouped');\n      if (!wrapperDiv) {\n        wrapperDiv = this.renderer.createElement('div');\n        this.renderer.addClass(wrapperDiv, 'bmb_badge-grouped');\n        this.renderer.insertBefore(parentElement, wrapperDiv, null);\n      }\n\n      this.renderer.appendChild(wrapperDiv, this.el.nativeElement);\n    }\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_badge'];\n\n    if (this.appearance) {\n      classes.push('bmb_badge-' + this.appearance);\n    }\n\n    return classes;\n  }\n\n  getStyles(): any {\n    const newStyles: any = {};\n    if (this.custom) {\n      newStyles['backgroundColor'] =\n        `rgb(var(--color-${this.customBackground}))`;\n      newStyles['color'] = `rgb(var(--color-${this.customColor}))`;\n    }\n    return newStyles;\n  }\n}\n",
            "styleUrl": "./bmb-badge.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div [ngClass]=\"getClasses()\" [ngStyle]=\"getStyles()\">\n  <span>{{ text }}</span>\n</div>\n"
        },
        {
            "name": "BmbBalanceOverviewComponent",
            "id": "component-BmbBalanceOverviewComponent-7164794d24cea65065e74b471dba4ef98dfea8a87dabf30f7338f4c281f86440ce1abdf72f72f4764d12592272ae167ef5206af8577f0456963232b7b27fe0d2",
            "file": "projects/ds-ng/src/lib/components/bmb-balance-overview/bmb-balance-overview.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-balance-overview",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-balance-overview.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "labelPrimary",
                    "defaultValue": "'Text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelSecondary",
                    "defaultValue": "'Text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "progressCirclePercent",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "progressCircleTitle",
                    "defaultValue": "'Title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string | Array<string>",
                    "decorators": []
                },
                {
                    "name": "progressCircleValue",
                    "defaultValue": "'Progress Value'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showProgressCircleBackground",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showProgressCircleTitle",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showProgressCircleValue",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "valuePrimary",
                    "defaultValue": "'$0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "valueSecondary",
                    "defaultValue": "'$0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbProgressCircleComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLegendComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbProgressCircleComponent } from '../bmb-progress-cirlce/bmb-progress-circle.component';\nimport { BmbLegendComponent } from '../bmb-legend/bmb-legend.component';\n\n@Component({\n  selector: 'bmb-balance-overview',\n  standalone: true,\n  imports: [CommonModule, BmbProgressCircleComponent, BmbLegendComponent],\n  templateUrl: './bmb-balance-overview.component.html',\n  styleUrl: './bmb-balance-overview.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbBalanceOverviewComponent {\n  //Inputs for Progress Circle\n  @Input() progressCirclePercent?: number = 0;\n  @Input() progressCircleValue?: string = 'Progress Value';\n  @Input() showProgressCircleValue?: boolean = true;\n  @Input() progressCircleTitle?: string | Array<string> = 'Title';\n  @Input() showProgressCircleTitle?: boolean = true;\n  @Input() showProgressCircleBackground?: boolean = true;\n\n  //Inputs for legeds\n  @Input() labelPrimary?: string = 'Text';\n  @Input() valuePrimary?: string = '$0';\n\n  @Input() labelSecondary?: string = 'Text';\n  @Input() valueSecondary?: string = '$0';\n}\n",
            "styleUrl": "./bmb-balance-overview.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"bmb_balance-overview-container\">\n  <div class=\"bmb_balance-overview-circle-container\">\n    <bmb-progress-circle\n      [percent]=\"progressCirclePercent!\"\n      [valueLabel]=\"progressCircleValue!\"\n      [showValueLabel]=\"showProgressCircleValue\"\n      [title]=\"progressCircleTitle\"\n      [showTitle]=\"showProgressCircleTitle\"\n      [showBackground]=\"showProgressCircleBackground\"\n    />\n  </div>\n  <div class=\"bmb_balance-overview-legend-main-container\">\n    <div class=\"bmb_balance-overview-legend-success\">\n      <bmb-legend\n        class=\"bmb_balance-overview-legend-text\"\n        [indicatorAppearance]=\"'success'\"\n        [label]=\"labelPrimary!\"\n        [value]=\"valuePrimary!\"\n      />\n    </div>\n    <div class=\"bmb_balance-overview-legend-strong\">\n      <bmb-legend\n        class=\"bmb_balance-overview-legend-text\"\n        [indicatorAppearance]=\"'strong'\"\n        [label]=\"labelSecondary!\"\n        [value]=\"valueSecondary!\"\n      />\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "BmbCalendarComponent",
            "id": "component-BmbCalendarComponent-305402a6ec687a1d64a9a189887be4ca91b7a8f5836f12c0bea0346dfe850bef1b73667e5531606117de631274bd8248a53f59161b032ae4000d95a90e47e4ca",
            "file": "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-calendar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-calendar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "calendarTimezone",
                    "defaultValue": "Intl.DateTimeFormat().resolvedOptions().timeZone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "clientTimezone",
                    "defaultValue": "Intl.DateTimeFormat().resolvedOptions().timeZone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "currentDate",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "700",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "number | string",
                    "decorators": []
                },
                {
                    "name": "hourFormat",
                    "defaultValue": "'12'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "IBmbCalendarHourFormat",
                    "decorators": []
                },
                {
                    "name": "lang",
                    "defaultValue": "'es-MX'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onDateChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isListShowing",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "now",
                    "defaultValue": "this.currentDate === ''\n      ? DateTime.now()\n      : DateTime.fromISO(this.currentDate)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "renderWeekDays",
                    "defaultValue": "getWeekDays(this.now)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DateTime[]",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "selectedEvent",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "view",
                    "defaultValue": "model<IBmbCalendarView>('week')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "weekNumber",
                    "defaultValue": "this.now.weekNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 92
                }
            ],
            "methodsClass": [
                {
                    "name": "getEvents",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getHeight",
                    "args": [
                        {
                            "name": "height",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "height",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleCurrentDateChange",
                    "args": [
                        {
                            "name": "newDate",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newDate",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleDateChange",
                    "args": [
                        {
                            "name": "range",
                            "type": "IBmbCalendarView",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "now",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "range",
                            "type": "IBmbCalendarView",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "now",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSelectEvent",
                    "args": [
                        {
                            "name": "newEvent",
                            "type": "IBmbCalendarEventClick | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newEvent",
                            "type": "IBmbCalendarEventClick | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAnEventSelected",
                    "args": [
                        {
                            "name": "event",
                            "type": "IBmbCalendarEventClick | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IBmbCalendarEventClick | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onViewTypeChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170,
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbCalendarTemplateDayComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCalendarTemplateWeekComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCalendarTemplateMonthComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLoaderComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCalendarHeaderComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCalendarTemplateEventComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCalendarTemplateMobileComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCalendarTemplateEventListComponent",
                    "type": "component"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n  HostListener,\n  input,\n  model,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DateTime } from 'luxon';\nimport { BmbCalendarTemplateWeekComponent } from './common/bmb-calendar-template-week/bmb-calendar-template-week.component';\nimport { BmbCalendarTemplateDayComponent } from './common/bmb-calendar-template-day/bmb-calendar-template-day.component';\nimport { BmbCalendarTemplateMonthComponent } from './common/bmb-calendar-template-month/bmb-calendar-template-month.component';\nimport { BmbLoaderComponent } from '../bmb-loader/bmb-loader.component';\nimport { BmbCalendarHeaderComponent } from './common/bmb-calendar-header/bmb-calendar-header.component';\nimport { BmbCalendarTemplateMobileComponent } from './common/bmb-calendar-template-mobile/bmb-calendar-template-mobile.component';\nimport { BmbCalendarTemplateEventListComponent } from './common/bmb-calendar-template-event-list/bmb-calendar-template-event-list.component';\nimport {\n  IBmbCalendarEvent,\n  IBmbCalendarEventClick,\n  IBmbCalendarHourFormat,\n  IBmbCalendarView,\n  IBmbEventType,\n} from './types';\nimport { getWeekDays, getMonthDays } from './utils';\nimport { BmbCalendarTemplateEventComponent } from './common/bmb-calendar-template-event/bmb-calendar-template-event.component';\nimport { BmbCalendarService } from '../../services/calendar.service';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\nexport {\n  IBmbCalendarEvent,\n  IBmbCalendarEventClick,\n  IBmbEventType,\n} from './types';\n\n@Component({\n  selector: 'bmb-calendar',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbCalendarTemplateDayComponent,\n    BmbCalendarTemplateWeekComponent,\n    BmbCalendarTemplateMonthComponent,\n    BmbLoaderComponent,\n    BmbCalendarHeaderComponent,\n    BmbCalendarTemplateEventComponent,\n    BmbCalendarTemplateMobileComponent,\n    BmbCalendarTemplateEventListComponent,\n    BmbIconComponent,\n  ],\n  styleUrl: './bmb-calendar.component.scss',\n  templateUrl: './bmb-calendar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarComponent {\n  view = model<IBmbCalendarView>('week');\n\n  @Input() hourFormat: IBmbCalendarHourFormat = '12';\n  @Input() calendarTimezone: string =\n    Intl.DateTimeFormat().resolvedOptions().timeZone;\n  @Input() clientTimezone: string =\n    Intl.DateTimeFormat().resolvedOptions().timeZone;\n  @Input() lang: string = 'es-MX';\n  @Input() currentDate: string = '';\n  @Input() height: number | string = 700;\n\n  @Output() onDateChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @HostListener('window:resize', ['$event'])\n  private resize() {\n    if (window.innerWidth < 1000) {\n      this.view.set('day');\n    } else {\n      this.isListShowing = false;\n    }\n  }\n\n  constructor(private eventsSignal: BmbCalendarService) {}\n\n  ngOnInit() {\n    this.view.update((value) => (window.innerWidth < 1000 ? 'day' : value));\n  }\n\n  now =\n    this.currentDate === ''\n      ? DateTime.now()\n      : DateTime.fromISO(this.currentDate);\n  weekNumber = this.now.weekNumber;\n  renderWeekDays: DateTime[] = getWeekDays(this.now);\n  selectedEvent: { event: IBmbCalendarEvent; position: any } | null = null;\n  isListShowing: boolean = false;\n\n  handleDateChange(range: IBmbCalendarView, now: DateTime): void {\n    this.view.set(range);\n    let visibleDates: (string | null)[] = [];\n\n    switch (range) {\n      case 'day':\n        visibleDates = getMonthDays(now).map((date) => date.toISO());\n        break;\n\n      case 'week':\n        visibleDates = getWeekDays(now).map((date) => date.toISO());\n        break;\n\n      case 'month':\n        visibleDates = getMonthDays(now).map((date) => date.toISO());\n        break;\n\n      default:\n        break;\n    }\n\n    this.onDateChange.emit({\n      range,\n      now: now.toISO(),\n      visibleDates,\n    });\n  }\n\n  handleCurrentDateChange(newDate: DateTime): void {\n    this.now = newDate;\n    this.weekNumber = newDate.weekNumber;\n    this.renderWeekDays = getWeekDays(newDate);\n  }\n\n  handleSelectEvent(newEvent: IBmbCalendarEventClick | null): void {\n    console.log('close modal');\n\n    this.selectedEvent = newEvent;\n  }\n\n  isAnEventSelected(event: IBmbCalendarEventClick | null): boolean {\n    return !!event;\n  }\n\n  getHeight(height: string | number): string {\n    if (typeof height === 'number') return `${height}px`;\n\n    return height;\n  }\n\n  onViewTypeChange() {\n    this.isListShowing = !this.isListShowing;\n  }\n\n  getEvents() {\n    return this.eventsSignal.geteventList();\n  }\n\n  getIsLoading() {\n    return this.eventsSignal.getIsLoading();\n  }\n}\n",
            "styleUrl": "./bmb-calendar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "eventsSignal",
                        "type": "BmbCalendarService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 80,
                "jsdoctags": [
                    {
                        "name": "eventsSignal",
                        "type": "BmbCalendarService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"bmb_calendar\" [ngStyle]=\"{ height: getHeight(height) }\">\n  <bmb-calendar-template-mobile\n    [now]=\"now\"\n    [lang]=\"lang\"\n    [events]=\"getEvents()\"\n    (onCurrentDateChange)=\"handleCurrentDateChange($event)\"\n    [weekDays]=\"renderWeekDays\"\n    [isListShowing]=\"isListShowing\"\n    (onViewTypeChange)=\"onViewTypeChange()\"\n  />\n  <bmb-calendar-header\n    [weekDays]=\"renderWeekDays\"\n    [lang]=\"lang\"\n    [view]=\"view()\"\n    [currentDate]=\"now\"\n    (onRangeChange)=\"handleDateChange($event, now)\"\n    (onCurrentDateChange)=\"handleCurrentDateChange($event)\"\n  />\n  @if (isListShowing) {\n    <bmb-calendar-template-event-list\n      [events]=\"getEvents()\"\n      (onSelectEvent)=\"handleSelectEvent($event)\"\n    />\n  } @else {\n    @switch (view()) {\n      @case (\"day\") {\n        <bmb-calendar-template-day\n          [now]=\"now\"\n          [events]=\"getEvents()\"\n          (onSelectEvent)=\"handleSelectEvent($event)\"\n        />\n      }\n      @case (\"week\") {\n        <bmb-calendar-template-week\n          [weekDays]=\"renderWeekDays\"\n          [lang]=\"lang\"\n          [hourFormat]=\"hourFormat\"\n          [now]=\"now\"\n          [events]=\"getEvents()\"\n          (onSelectEvent)=\"handleSelectEvent($event)\"\n        />\n      }\n      @case (\"month\") {\n        <bmb-calendar-template-month\n          [now]=\"now\"\n          [events]=\"getEvents()\"\n          (onSelectEvent)=\"handleSelectEvent($event)\"\n        />\n      }\n      @default {\n        <bmb-calendar-template-week\n          [weekDays]=\"renderWeekDays\"\n          [lang]=\"lang\"\n          [hourFormat]=\"hourFormat\"\n          [now]=\"now\"\n          [events]=\"getEvents()\"\n        />\n      }\n    }\n  }\n\n  @if (selectedEvent) {\n    <bmb-calendar-template-event\n      [event]=\"selectedEvent\"\n      (closeModal)=\"handleSelectEvent(null)\"\n    />\n  }\n\n  @if (getIsLoading()) {\n    <section class=\"bmb_calendar-loader\">\n      <div class=\"bmb_loader-loading\">\n        <bmb-icon icon=\"progress_activity\" class=\"bmb_loader-icon\" />\n      </div>\n    </section>\n  }\n</div>\n"
        },
        {
            "name": "BmbCalendarHeaderComponent",
            "id": "component-BmbCalendarHeaderComponent-c1cb8f1e92cc8f69a27487af6210c352d398cd45b0ecad71854285487a053eefed6caaa8fe508bbc53c14863c215a93000c10eb74d9ff53da4b243bd141983ef",
            "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-header/bmb-calendar-header.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-calendar-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-calendar-header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "currentDate",
                    "defaultValue": "DateTime.now()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "DateTime",
                    "decorators": []
                },
                {
                    "name": "lang",
                    "defaultValue": "'es-MX'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "view",
                    "defaultValue": "'week'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "IBmbCalendarView",
                    "decorators": []
                },
                {
                    "name": "weekDays",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "DateTime[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCurrentDateChange",
                    "defaultValue": "new EventEmitter<DateTime>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "EventEmitter<DateTime>"
                },
                {
                    "name": "onRangeChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getTitle",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleChangeDate",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleRangeChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "IBmbCalendarView",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IBmbCalendarView",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbButtonGroupDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbLayoutDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbLayoutItemDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { BmbButtonDirective } from '../../../../directives/button.directive';\nimport { BmbIconComponent } from '../../../bmb-icon/bmb-icon.component';\nimport { DateTime } from 'luxon';\nimport { IBmbCalendarView } from '../../types';\nimport { BmbButtonGroupDirective } from '../../../../directives/bmb-button-group/bmb-button-group.directive';\nimport { BmbLayoutDirective } from '../../../../directives/bmb-layout/bmb-layout.directive';\nimport { BmbLayoutItemDirective } from '../../../../directives/bmb-layout/bmb-layout-item.directive';\n\n@Component({\n  selector: 'bmb-calendar-header',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbButtonDirective,\n    BmbIconComponent,\n    BmbButtonGroupDirective,\n    BmbLayoutDirective,\n    BmbLayoutItemDirective,\n  ],\n  templateUrl: './bmb-calendar-header.component.html',\n  styleUrl: './bmb-calendar-header.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarHeaderComponent {\n  @Input() weekDays: DateTime[] = [];\n  @Input() lang: string = 'es-MX';\n  @Input() view: IBmbCalendarView = 'week';\n  @Input() currentDate: DateTime = DateTime.now();\n\n  @Output() onRangeChange: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onCurrentDateChange: EventEmitter<DateTime> =\n    new EventEmitter<DateTime>();\n\n  getTitle(): string {\n    if (this.view === 'week') {\n      return `${this.weekDays[0].toLocaleString({\n        month: 'short',\n        day: 'numeric',\n      })} - ${this.weekDays[6].toLocaleString({\n        month: 'short',\n        day: 'numeric',\n      })}, ${this.currentDate.toLocaleString({ year: 'numeric' })}`;\n    }\n\n    if (this.view === 'day') {\n      return this.currentDate.toLocaleString({\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric',\n      });\n    }\n\n    return this.currentDate.toLocaleString({ month: 'long', year: 'numeric' });\n  }\n\n  handleRangeChange(event: IBmbCalendarView): void {\n    if (event === 'month') {\n      const newDate = DateTime.fromObject({\n        month: this.currentDate.month,\n        year: this.currentDate.year,\n        day: 1,\n      });\n\n      this.onCurrentDateChange.emit(newDate);\n    }\n    this.onRangeChange.emit(event);\n  }\n\n  handleChangeDate(event: string): void {\n    const modifyDate = ({ config, date }: any) => {\n      if (event === '+') {\n        this.onCurrentDateChange.emit(date.plus(config));\n      } else {\n        this.onCurrentDateChange.emit(date.minus(config));\n      }\n    };\n\n    switch (this.view) {\n      case 'day':\n        modifyDate({ config: { days: 1 }, date: this.currentDate });\n        break;\n\n      case 'week':\n        modifyDate({ config: { days: 7 }, date: this.currentDate });\n        break;\n      case 'month':\n        const newDate = DateTime.fromObject({\n          month: this.currentDate.month,\n          year: this.currentDate.year,\n          day: 1,\n        });\n\n        modifyDate({ config: { month: 1 }, date: newDate });\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n",
            "styleUrl": "./bmb-calendar-header.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section\n  class=\"bmb_calendar-header\"\n  bmbLayout\n  [dinamycCols]=\"true\"\n  margin=\"none\"\n>\n  <div\n    bmbLayoutItem\n    [isDinamycItem]=\"true\"\n    bmbButtonGroup\n    appearance=\"secondary-filled\"\n    size=\"large\"\n  >\n    <button (click)=\"handleChangeDate('-')\">\n      <bmb-icon [icon]=\"'arrow_back_ios'\" />\n    </button>\n    <button (click)=\"handleChangeDate('+')\">\n      <bmb-icon [icon]=\"'arrow_forward_ios'\" />\n    </button>\n  </div>\n  <h1\n    bmbLayoutItem\n    [isDinamycItem]=\"true\"\n    [colGrow]=\"1\"\n    class=\"bmb_calendar-header-title\"\n  >\n    {{ getTitle() }}\n  </h1>\n  <div bmbButtonGroup appearance=\"secondary-filled\" size=\"large\">\n    <button (click)=\"handleRangeChange('day')\" [disabled]=\"view === 'day'\">\n      Day\n    </button>\n    <button (click)=\"handleRangeChange('week')\" [disabled]=\"view === 'week'\">\n      Week\n    </button>\n    <button (click)=\"handleRangeChange('month')\" [disabled]=\"view === 'month'\">\n      Month\n    </button>\n  </div>\n</section>\n"
        },
        {
            "name": "BmbCalendarHourViewComponent",
            "id": "component-BmbCalendarHourViewComponent-c97501f9c6558bf60281e3f8da4a59519df3c7cf46d94219360e61bd34b5de83bd12b940573d572f32f10f578500d245f1342064791e3a6afd019f1ae9bf6a42",
            "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-hour-view/bmb-calendar-hour-view.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-calendar-hour-view",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-calendar-hour-view.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "events",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "IBmbCalendarEvent[]",
                    "decorators": []
                },
                {
                    "name": "hourFormat",
                    "defaultValue": "'12'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "IBmbCalendarHourFormat",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hours",
                    "defaultValue": "this.createHoursRows()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [
                {
                    "name": "createHoursRows",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnchanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { IBmbCalendarEvent, IBmbCalendarHourFormat } from '../../types';\n\n@Component({\n  selector: 'bmb-calendar-hour-view',\n  standalone: true,\n  imports: [],\n  templateUrl: './bmb-calendar-hour-view.component.html',\n  styleUrl: './bmb-calendar-hour-view.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarHourViewComponent {\n  @Input() events: IBmbCalendarEvent[] = [];\n  @Input() hourFormat: IBmbCalendarHourFormat = '12';\n\n  createHoursRows() {\n    const placeholderArray = new Array(24).fill(0);\n    let hour = 0;\n    return placeholderArray.map((_, index) => {\n      if (this.hourFormat === '12' && hour === 12) {\n        hour = 0;\n      }\n      if (this.hourFormat === '12' && !index) return '12 am';\n      if (!index) return 0;\n\n      hour++;\n\n      return this.hourFormat === '24'\n        ? hour\n        : `${hour} ${index < 12 ? 'am' : 'pm'}`;\n    });\n  }\n\n  hours = this.createHoursRows();\n\n  ngOnchanges(): void {\n    this.hours = this.createHoursRows();\n  }\n}\n",
            "styleUrl": "./bmb-calendar-hour-view.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb_calendar-hours\">\n  <header class=\"bmb_calendar-detail-header\">\n    <h2>-</h2>\n  </header>\n  <div class=\"bmb_calendar-hours-row\">All-day</div>\n  @for (item of hours; track $index) {\n    <div class=\"bmb_calendar-hours-row\">\n      {{ item }}\n    </div>\n  }\n</div>\n"
        },
        {
            "name": "BmbCalendarScheduleCardsComponent",
            "id": "component-BmbCalendarScheduleCardsComponent-ac8d093f23a9275d114799433cb6334e6735f8eb36a5d84aaaf3970438da7a22b7656fadaa3189dc7eb913a701730c0965842d5c4eb37dbc1151ee1e3a3b99c1",
            "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-schedule-cards/bmb-calendar-schedule-cards.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-calendar-schedule-cards",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-calendar-schedule-cards.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "event",
                    "defaultValue": "{\n    title: '',\n    detail: '',\n    start: new Date().toISOString(),\n    end: new Date().toISOString(),\n    type: 'academic',\n    modalTitle: '',\n    status: '',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "IBmbCalendarEvent",
                    "decorators": []
                },
                {
                    "name": "extendedContent",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isPositionAbsolute",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSelectEvent",
                    "defaultValue": "new EventEmitter<IBmbCalendarEventClick>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter<IBmbCalendarEventClick>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClassNames",
                    "args": [
                        {
                            "name": "date",
                            "type": "IBmbCalendarEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isPositionAbsolute",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "IBmbCalendarEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isPositionAbsolute",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPosition",
                    "args": [
                        {
                            "name": "date",
                            "type": "IBmbCalendarEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isPositionAbsolute",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "IBmbCalendarEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isPositionAbsolute",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSelectEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "IBmbCalendarEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "domEvent",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IBmbCalendarEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "domEvent",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleTimeRange",
                    "args": [
                        {
                            "name": "event",
                            "type": "IBmbCalendarEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IBmbCalendarEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { IBmbCalendarEvent, IBmbCalendarEventClick } from '../../types';\nimport { DateTime } from 'luxon';\nimport { getTimeRange } from '../../utils';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-calendar-schedule-cards',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-calendar-schedule-cards.component.html',\n  styleUrl: './bmb-calendar-schedule-cards.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarScheduleCardsComponent {\n  @Input() event: IBmbCalendarEvent = {\n    title: '',\n    detail: '',\n    start: new Date().toISOString(),\n    end: new Date().toISOString(),\n    type: 'academic',\n    modalTitle: '',\n    status: '',\n  };\n  @Input() isPositionAbsolute: boolean = true;\n  @Input() extendedContent: boolean = true;\n\n  @Output() onSelectEvent: EventEmitter<IBmbCalendarEventClick> =\n    new EventEmitter<IBmbCalendarEventClick>();\n\n  getPosition(date: IBmbCalendarEvent, isPositionAbsolute: boolean): string {\n    if (!isPositionAbsolute) return '';\n\n    const start = DateTime.fromISO(date.start);\n    const end = DateTime.fromISO(date.end);\n    const startMin = start.hour * 60 + start.minute;\n    const endMin = end.hour * 60 + end.minute - startMin;\n\n    return `top: ${startMin + 60}px; height: ${endMin}px`;\n  }\n\n  getClassNames(\n    date: IBmbCalendarEvent,\n    isPositionAbsolute: boolean,\n  ): string[] {\n    let newClasses = [`bmb_calendar-event-type-${this.event.type}`];\n    if (isPositionAbsolute) newClasses.push('bmb_calendar-event-absolute');\n    const start = DateTime.fromISO(date.start);\n    const end = DateTime.fromISO(date.end);\n    const diff = end.hour * 60 + end.minute - (start.hour * 60 + start.minute);\n\n    if (diff < 60) {\n      newClasses.push('bmb_calendar-event-grid-reduced');\n    } else {\n      newClasses.push('bmb_calendar-event-grid-full');\n    }\n\n    return newClasses;\n  }\n\n  handleSelectEvent(event: IBmbCalendarEvent, domEvent: any) {\n    this.onSelectEvent.emit({\n      event: event,\n      position: domEvent.target.getBoundingClientRect().y,\n    });\n  }\n\n  handleTimeRange(event: IBmbCalendarEvent): string {\n    return getTimeRange(event);\n  }\n}\n",
            "styleUrl": "./bmb-calendar-schedule-cards.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  class=\"bmb_calendar-event\"\n  [ngClass]=\"getClassNames(event, isPositionAbsolute)\"\n  [style]=\"getPosition(event, isPositionAbsolute)\"\n  (click)=\"handleSelectEvent(event, $event)\"\n  title=\"{{ event.title }} - {{ event.detail }}\"\n>\n  <div class=\"bmb_calendar-event-indicator\"></div>\n  <h3 class=\"bmb_calendar-event-title\">\n    {{ event.title }}\n  </h3>\n  @if (extendedContent) {\n    <p class=\"bmb_calendar-event-content\">{{ event.detail }}</p>\n    <span class=\"bmb_calendar-event-time\">{{ handleTimeRange(event) }}</span>\n  }\n</div>\n"
        },
        {
            "name": "BmbCalendarTemplateDayComponent",
            "id": "component-BmbCalendarTemplateDayComponent-8090f3e3400cb692b156d528075584b4c7219d99504729cde8224b508c34ce961b99cb070b90661d2fd06aee298b5ff1c0a825b096666fdee26ec6d31e74fe4b",
            "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-day/bmb-calendar-template-day.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-calendar-template-day",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-calendar-template-day.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "events",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "IBmbCalendarEvent[]",
                    "decorators": []
                },
                {
                    "name": "hourFormat",
                    "defaultValue": "'12'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "IBmbCalendarHourFormat",
                    "decorators": []
                },
                {
                    "name": "lang",
                    "defaultValue": "'es-MX'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "now",
                    "defaultValue": "DateTime.now()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "DateTime",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSelectEvent",
                    "defaultValue": "new EventEmitter<IBmbCalendarEventClick>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter<IBmbCalendarEventClick>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "rows",
                    "defaultValue": "new Array(25).fill(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [
                {
                    "name": "getNameDay",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleEventSelection",
                    "args": [
                        {
                            "name": "newEvent",
                            "type": "IBmbCalendarEventClick",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newEvent",
                            "type": "IBmbCalendarEventClick",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isNow",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "renderEvents",
                    "args": [
                        {
                            "name": "events",
                            "type": "IBmbCalendarRenderEvents",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "events",
                            "type": "IBmbCalendarRenderEvents",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbCalendarHourViewComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCalendarScheduleCardsComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { BmbCalendarHourViewComponent } from '../bmb-calendar-hour-view/bmb-calendar-hour-view.component';\nimport { CommonModule } from '@angular/common';\nimport {\n  IBmbCalendarHourFormat,\n  IBmbCalendarEvent,\n  IBmbCalendarRenderEvents,\n  IBmbCalendarEventClick,\n} from '../../types';\nimport { DateTime } from 'luxon';\nimport { BmbCalendarScheduleCardsComponent } from '../bmb-calendar-schedule-cards/bmb-calendar-schedule-cards.component';\nimport { eventsInDate } from '../../utils';\n\n@Component({\n  selector: 'bmb-calendar-template-day',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbCalendarHourViewComponent,\n    BmbCalendarScheduleCardsComponent,\n  ],\n  templateUrl: './bmb-calendar-template-day.component.html',\n  styleUrl: './bmb-calendar-template-day.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarTemplateDayComponent {\n  @Input() lang: string = 'es-MX';\n  @Input() hourFormat: IBmbCalendarHourFormat = '12';\n  @Input() now: DateTime = DateTime.now();\n  @Input() events: IBmbCalendarEvent[] = [];\n\n  @Output() onSelectEvent: EventEmitter<IBmbCalendarEventClick> =\n    new EventEmitter<IBmbCalendarEventClick>();\n\n  rows = new Array(25).fill(0);\n\n  getNameDay(): string {\n    return this.now.toFormat('cccc', { locale: this.lang });\n  }\n\n  renderEvents(events: IBmbCalendarRenderEvents): any[] {\n    return eventsInDate(events);\n  }\n\n  handleEventSelection(newEvent: IBmbCalendarEventClick) {\n    this.onSelectEvent.emit(newEvent);\n  }\n\n  isNow(date: DateTime): boolean {\n    const diff = date.diffNow('day').days;\n    return diff < 0 && diff > -1;\n  }\n}\n",
            "styleUrl": "./bmb-calendar-template-day.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb_calendar-day-view\">\n  <bmb-calendar-hour-view [hourFormat]=\"hourFormat\" />\n  <section\n    class=\"bmb_calendar-col\"\n    [ngClass]=\"{ 'bmb_calendar-col-today': isNow(now) }\"\n  >\n    <header class=\"bmb_calendar-detail-header\">\n      <h2>{{ getNameDay() }}</h2>\n      <span>{{ now.month }}/{{ now.day }}</span>\n    </header>\n    <div class=\"bmb_calendar-body\">\n      @for (row of rows; track $index) {\n        <div class=\"bmb_calendar-row-body\"></div>\n      }\n      @for (event of renderEvents({ date: now, events }); track $index) {\n        <bmb-calendar-schedule-cards\n          [event]=\"event\"\n          (onSelectEvent)=\"handleEventSelection($event)\"\n          >Event</bmb-calendar-schedule-cards\n        >\n      }\n    </div>\n  </section>\n</div>\n"
        },
        {
            "name": "BmbCalendarTemplateEventComponent",
            "id": "component-BmbCalendarTemplateEventComponent-f281a9b6bc006e161e87dc95cde2f7b857cd6bd54ba486b0e0a6491ad7051e78b198866b93d79bf08e846d2cad8bd3650d1d53f917008f48b41dd29bc9c44776",
            "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-event/bmb-calendar-template-event.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-calendar-template-event",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-calendar-template-event.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "event",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "closeModal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "closeModal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "required": false
                },
                {
                    "name": "event",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "required": true
                }
            ],
            "methodsClass": [
                {
                    "name": "getDateFromString",
                    "args": [
                        {
                            "name": "date",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateTime",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleCloseModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleTimeRange",
                    "args": [
                        {
                            "name": "event",
                            "type": "IBmbCalendarEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IBmbCalendarEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbBadgeComponent",
                    "type": "component"
                },
                {
                    "name": "BmbStudentActivityCardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  input,\n  Input,\n  output,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { IBmbCalendarEventClick, IBmbCalendarEvent } from '../../types';\nimport { CommonModule } from '@angular/common';\nimport { BmbButtonDirective } from '../../../../directives/button.directive';\nimport { BmbIconComponent } from '../../../bmb-icon/bmb-icon.component';\nimport { DateTime } from 'luxon';\nimport { BmbBadgeComponent } from '../../../bmb-badge/bmb-badge.component';\nimport { getTimeRange } from '../../utils';\nimport { BmbStudentActivityCardComponent } from '../../../bmb-student-activity-card/bmb-student-activity-card.component';\n\n@Component({\n  selector: 'bmb-calendar-template-event',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbButtonDirective,\n    BmbIconComponent,\n    BmbBadgeComponent,\n    BmbStudentActivityCardComponent,\n  ],\n  templateUrl: './bmb-calendar-template-event.component.html',\n  styleUrl: './bmb-calendar-template-event.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarTemplateEventComponent {\n  event = input.required<IBmbCalendarEventClick>();\n\n  closeModal = output<void>();\n\n  getDateFromString(date: string): DateTime {\n    return DateTime.fromISO(date);\n  }\n\n  handleTimeRange(event: IBmbCalendarEvent): string {\n    if (!event) return '';\n    return getTimeRange(event);\n  }\n\n  handleCloseModal() {\n    this.closeModal.emit();\n  }\n}\n",
            "styleUrl": "./bmb-calendar-template-event.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<dialog open class=\"bmb_calendar-event-modal\">\n  @if (!!event) {\n    <bmb-student-activity-card\n      [startDate]=\"getDateFromString(event().event.start)\"\n      [endDate]=\"getDateFromString(event().event.end)\"\n      [title]=\"event().event.title\"\n      [detail]=\"event().event.detail\"\n      [type]=\"event().event.type\"\n      [modalTitle]=\"event().event.modalTitle\"\n      [status]=\"event().event.status\"\n      (closeModal)=\"handleCloseModal()\"\n    />\n  }\n</dialog>\n"
        },
        {
            "name": "BmbCalendarTemplateEventListComponent",
            "id": "component-BmbCalendarTemplateEventListComponent-fa3a014395b8abee34091979e6aef26c66d80e1c2122ea6191e029edfadb8da2709768fafb0d036afd7faf632fe6baaf96df3d12b3c3d296362b70727db3e009",
            "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-event-list/bmb-calendar-template-event-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-calendar-template-event-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-calendar-template-event-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "events",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "IBmbCalendarEvent[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSelectEvent",
                    "defaultValue": "new EventEmitter<IBmbCalendarEventClick>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter<IBmbCalendarEventClick>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "datesWithEvents",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [
                {
                    "name": "handleEventSelection",
                    "args": [
                        {
                            "name": "newEvent",
                            "type": "IBmbCalendarEventClick",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newEvent",
                            "type": "IBmbCalendarEventClick",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "populateDateWithEvents",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbCalendarScheduleCardsComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCardComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLayoutDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbLayoutItemDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { IBmbCalendarEvent, IBmbCalendarEventClick } from '../../types';\nimport { BmbCalendarScheduleCardsComponent } from '../bmb-calendar-schedule-cards/bmb-calendar-schedule-cards.component';\nimport { DateTime } from 'luxon';\nimport { BmbLayoutDirective } from '../../../../directives/bmb-layout/bmb-layout.directive';\nimport { BmbLayoutItemDirective } from '../../../../directives/bmb-layout/bmb-layout-item.directive';\nimport { BmbCardComponent } from '../../../bmb-card/bmb-card.component';\n\n@Component({\n  selector: 'bmb-calendar-template-event-list',\n  standalone: true,\n  imports: [\n    BmbCalendarScheduleCardsComponent,\n    BmbCardComponent,\n    BmbLayoutDirective,\n    BmbLayoutItemDirective,\n  ],\n  templateUrl: './bmb-calendar-template-event-list.component.html',\n  styleUrl: './bmb-calendar-template-event-list.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarTemplateEventListComponent {\n  @Input() events: IBmbCalendarEvent[] = [];\n\n  @Output() onSelectEvent: EventEmitter<IBmbCalendarEventClick> =\n    new EventEmitter<IBmbCalendarEventClick>();\n\n  datesWithEvents = {};\n\n  handleEventSelection(newEvent: IBmbCalendarEventClick) {\n    this.onSelectEvent.emit(newEvent);\n  }\n\n  populateDateWithEvents() {\n    const days = this.events.reduce((acc: any, cur: IBmbCalendarEvent) => {\n      const date = DateTime.fromISO(cur.start).toFormat('dd/MM/yyyy');\n      const events = acc[date] ? [...acc[date], cur] : [cur];\n\n      return { ...acc, [date]: events };\n    }, {});\n    const nameDays = Object.keys(days).map((day) => {\n      return {\n        name: day,\n        events: days[day],\n      };\n    });\n    return nameDays;\n  }\n}\n",
            "styleUrl": "./bmb-calendar-template-event-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ul class=\"bmb-calendar-template-event-list\">\n  @for (day of populateDateWithEvents(); track $index) {\n    <li class=\"bmb-calendar-template-event-list-item\">\n      <bmb-card>\n        <ng-template #header>\n          <h3>{{ day.name }}</h3>\n        </ng-template>\n        <div>\n          @for (event of day.events; track $index) {\n            <bmb-calendar-schedule-cards\n              [event]=\"event\"\n              (onSelectEvent)=\"handleEventSelection($event)\"\n              [isPositionAbsolute]=\"false\"\n            ></bmb-calendar-schedule-cards>\n          }\n        </div>\n      </bmb-card>\n    </li>\n  }\n</ul>\n"
        },
        {
            "name": "BmbCalendarTemplateMobileComponent",
            "id": "component-BmbCalendarTemplateMobileComponent-29f722cf8c1c3fdcba75405f158e5d5b8f8265cbe26b0b1fd3eee105272d73cba888c6c6b9cdee1a59eff0a803d2b92ecc437cc1c7a6104168ff825b2b90f0f3",
            "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-mobile/bmb-calendar-template-mobile.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-calendar-template-mobile",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-calendar-template-mobile.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "events",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "IBmbCalendarEvent[]",
                    "decorators": []
                },
                {
                    "name": "isListShowing",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "lang",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "now",
                    "defaultValue": "DateTime.now()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "DateTime",
                    "decorators": []
                },
                {
                    "name": "weekDays",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "DateTime[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCurrentDateChange",
                    "defaultValue": "new EventEmitter<DateTime>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "EventEmitter<DateTime>"
                },
                {
                    "name": "onViewTypeChange",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dayNames",
                    "defaultValue": "orderDayNames(this.defaultDayOrder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "defaultDayOrder",
                    "defaultValue": "Info.weekdays('narrow', { locale: this.lang })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "isCalendarOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "month",
                    "defaultValue": "this.monthsNames[this.now.month + 1]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "monthsNames",
                    "defaultValue": "Info.months('long', { locale: this.lang })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "year",
                    "defaultValue": "this.now.year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                }
            ],
            "methodsClass": [
                {
                    "name": "findEventsForToday",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getWeeksAndDays",
                    "args": [],
                    "optional": false,
                    "returnType": "DateTime[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getYears",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleDayChange",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleExpand",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleMonthChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleViewTypeChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleYearChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isNow",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isSelectedDay",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbCalendarScheduleCardsComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLayoutDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbLayoutItemDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbCalendarTemplateSelectComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { DateTime } from 'luxon';\nimport { eventsInDate, dayName, weeksAndDays } from '../../utils';\nimport { CommonModule } from '@angular/common';\nimport { BmbCalendarScheduleCardsComponent } from '../bmb-calendar-schedule-cards/bmb-calendar-schedule-cards.component';\nimport { IBmbCalendarEvent } from '../../types';\nimport { BmbLayoutDirective } from '../../../../directives/bmb-layout/bmb-layout.directive';\nimport { BmbLayoutItemDirective } from '../../../../directives/bmb-layout/bmb-layout-item.directive';\nimport { BmbButtonDirective } from '../../../../directives/button.directive';\nimport { Info } from 'luxon';\nimport { BmbCalendarTemplateSelectComponent } from '../bmb-calendar-template-select/bmb-calendar-template-select.component';\nimport { orderDayNames } from '../../utils';\n\n@Component({\n  selector: 'bmb-calendar-template-mobile',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbCalendarScheduleCardsComponent,\n    BmbLayoutDirective,\n    BmbLayoutItemDirective,\n    BmbButtonDirective,\n    BmbCalendarTemplateSelectComponent,\n  ],\n  templateUrl: './bmb-calendar-template-mobile.component.html',\n  styleUrl: './bmb-calendar-template-mobile.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarTemplateMobileComponent {\n  @Input() weekDays: DateTime[] = [];\n  @Input() now: DateTime = DateTime.now();\n  @Input() lang: string = '';\n  @Input() events: IBmbCalendarEvent[] = [];\n  @Input() isListShowing: boolean = false;\n\n  @Output() onCurrentDateChange: EventEmitter<DateTime> =\n    new EventEmitter<DateTime>();\n  @Output() onViewTypeChange: EventEmitter<void> = new EventEmitter<void>();\n\n  monthsNames = Info.months('long', { locale: this.lang });\n  month = this.monthsNames[this.now.month + 1];\n  year = this.now.year;\n  isCalendarOpen = false;\n  defaultDayOrder = Info.weekdays('narrow', { locale: this.lang });\n  dayNames = orderDayNames(this.defaultDayOrder);\n\n  handleExpand() {\n    this.isCalendarOpen = !this.isCalendarOpen;\n  }\n\n  getYears() {\n    const yearsList = new Array(21).fill(0);\n    const currentYear = this.now.year;\n    const yearsFinal = yearsList.map((_, index) => {\n      return (currentYear + (-10 + index)).toString();\n    });\n    return yearsFinal;\n  }\n\n  handleMonthChange(value: string) {\n    this.month = value;\n    const newDate = DateTime.fromObject({\n      day: 1,\n      month: this.monthsNames.indexOf(value) + 1,\n      year: this.now.year,\n    });\n    this.onCurrentDateChange.emit(newDate);\n  }\n\n  handleYearChange(value: string) {\n    this.year = Number(value);\n    const newDate = DateTime.fromObject({\n      day: 1,\n      month: this.now.month,\n      year: Number(value),\n    });\n    this.onCurrentDateChange.emit(newDate);\n  }\n\n  isSelectedDay(date: DateTime): boolean {\n    return date.hasSame(this.now, 'day');\n  }\n\n  getWeeksAndDays(): DateTime[] {\n    const firstDayOfMonth = DateTime.fromObject({\n      day: 1,\n      month: this.now.month,\n      year: this.now.year,\n    });\n    return weeksAndDays(firstDayOfMonth);\n  }\n\n  handleDayChange(date: DateTime): void {\n    this.onCurrentDateChange.emit(date);\n    this.month = this.monthsNames[date.month - 1];\n    this.year = date.year;\n    this.isCalendarOpen = false;\n  }\n\n  isNow(date: DateTime): boolean {\n    const diff = date.diffNow('day').days;\n    return diff < 0 && diff > -1;\n  }\n\n  handleViewTypeChange() {\n    this.onViewTypeChange.emit();\n  }\n\n  findEventsForToday(date: DateTime) {\n    const todayHasEvents = this.events.some((day) => {\n      return date.hasSame(DateTime.fromISO(day.start), 'day');\n    });\n\n    return todayHasEvents;\n  }\n}\n",
            "styleUrl": "./bmb-calendar-template-mobile.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb_calendar-month-mobile bmb_padding-m\">\n  <nav\n    class=\"bmb_calendar-month-mobile-nav\"\n    bmbLayout\n    margin=\"none\"\n    [dinamycCols]=\"true\"\n  >\n    <li bmbLayoutItem [colGrow]=\"1\" [isDinamycItem]=\"true\">\n      <div bmbLayout margin=\"none\" justify=\"center\">\n        <li bmbLayoutItem [colSm]=\"2\">\n          <bmb-calendar-template-select\n            [value]=\"month\"\n            (onValueChange)=\"handleMonthChange($event)\"\n            [options]=\"monthsNames\"\n          />\n        </li>\n        <li bmbLayoutItem [colSm]=\"2\">\n          <bmb-calendar-template-select\n            [value]=\"year.toString()\"\n            (onValueChange)=\"handleYearChange($event)\"\n            [options]=\"getYears()\"\n          />\n        </li>\n      </div>\n    </li>\n    <li [style]=\"{ 'text-align': 'right' }\">\n      <button\n        class=\"bmb_calendar-month-mobile-nav-button\"\n        (click)=\"handleViewTypeChange()\"\n        appearance=\"secondary-filled\"\n        bmbButton\n        icon=\"calendar_month\"\n      ></button>\n    </li>\n  </nav>\n  @if (!isListShowing) {\n    <ul class=\"bmb_calendar-month-mobile-calendar\">\n      @for (day of dayNames; track $index) {\n        <li class=\"bmb_calendar-month-mobile-calendar-header\">\n          {{ day }}\n        </li>\n      }\n      @if (!isCalendarOpen) {\n        @for (date of weekDays; track $index) {\n          <li class=\"bmb_calendar-month-mobile-calendar-item\">\n            <button\n              class=\"bmb_calendar-month-mobile-calendar-button\"\n              (click)=\"handleDayChange(date)\"\n              bmbButton\n              appearance=\"secondary-filled\"\n              [disabled]=\"isSelectedDay(date)\"\n            >\n              {{ date.day }}\n            </button>\n            @if (findEventsForToday(date)) {\n              <span\n                class=\"bmb_calendar-month-mobile-calendar-item-indicator\"\n              ></span>\n            }\n          </li>\n        }\n      } @else {\n        @for (date of getWeeksAndDays(); track $index) {\n          <li class=\"bmb_calendar-month-mobile-calendar-item\">\n            <button\n              class=\"bmb_calendar-month-mobile-calendar-button\"\n              (click)=\"handleDayChange(date)\"\n              bmbButton\n              appearance=\"secondary-filled\"\n              [disabled]=\"isSelectedDay(date)\"\n            >\n              {{ date.day }}\n            </button>\n            @if (findEventsForToday(date)) {\n              <span\n                class=\"bmb_calendar-month-mobile-calendar-item-indicator\"\n              ></span>\n            }\n          </li>\n        }\n      }\n    </ul>\n    <div\n      class=\"bmb_calendar-month-mobile-expander\"\n      [ngClass]=\"{\n        'bmb_calendar-month-mobile-expander-active': isCalendarOpen,\n      }\"\n    >\n      <button\n        (click)=\"handleExpand()\"\n        bmbButton\n        appearance=\"secondary-filled\"\n        icon=\"keyboard_arrow_down\"\n      ></button>\n    </div>\n  }\n</div>\n"
        },
        {
            "name": "BmbCalendarTemplateMonthComponent",
            "id": "component-BmbCalendarTemplateMonthComponent-6da9513a76fd30f04886e67f0d080a3135bee4a549f03c4a751714e1d3ca327f562343f8bd4f7f090525edec056f8f7bca8040ae7b7ad8dad9ab5a5ef01e0106",
            "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-month/bmb-calendar-template-month.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-calendar-template-month",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-calendar-template-month.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "events",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "IBmbCalendarEvent[]",
                    "decorators": []
                },
                {
                    "name": "hourFormat",
                    "defaultValue": "'12'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "IBmbCalendarHourFormat",
                    "decorators": []
                },
                {
                    "name": "lang",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "now",
                    "defaultValue": "DateTime.now()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "DateTime",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSelectEvent",
                    "defaultValue": "new EventEmitter<IBmbCalendarEventClick>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter<IBmbCalendarEventClick>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getDayName",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getWeeksAndDays",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DateTime[]",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleEventSelection",
                    "args": [
                        {
                            "name": "newEvent",
                            "type": "IBmbCalendarEventClick",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newEvent",
                            "type": "IBmbCalendarEventClick",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isNow",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "renderEvents",
                    "args": [
                        {
                            "name": "events",
                            "type": "IBmbCalendarRenderEvents",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "events",
                            "type": "IBmbCalendarRenderEvents",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbCalendarHourViewComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCalendarScheduleCardsComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { BmbCalendarHourViewComponent } from '../bmb-calendar-hour-view/bmb-calendar-hour-view.component';\nimport {\n  IBmbCalendarHourFormat,\n  IBmbCalendarEvent,\n  IBmbCalendarEventClick,\n  IBmbCalendarRenderEvents,\n} from '../../types';\nimport { DateTime } from 'luxon';\nimport { eventsInDate, dayName, weeksAndDays } from '../../utils';\nimport { CommonModule } from '@angular/common';\nimport { BmbCalendarScheduleCardsComponent } from '../bmb-calendar-schedule-cards/bmb-calendar-schedule-cards.component';\n\n@Component({\n  selector: 'bmb-calendar-template-month',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbCalendarHourViewComponent,\n    BmbCalendarScheduleCardsComponent,\n  ],\n  templateUrl: './bmb-calendar-template-month.component.html',\n  styleUrl: './bmb-calendar-template-month.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarTemplateMonthComponent {\n  @Input() hourFormat: IBmbCalendarHourFormat = '12';\n  @Input() now: DateTime = DateTime.now();\n  @Input() lang: string = '';\n  @Input() events: IBmbCalendarEvent[] = [];\n\n  @Output() onSelectEvent: EventEmitter<IBmbCalendarEventClick> =\n    new EventEmitter<IBmbCalendarEventClick>();\n\n  getWeeksAndDays(date: DateTime): DateTime[] {\n    return weeksAndDays(date);\n  }\n\n  getDayName(date: DateTime, lang: string) {\n    return dayName(date, lang);\n  }\n\n  isNow(date: DateTime): boolean {\n    const diff = date.diffNow('day').days;\n    return diff < 0 && diff > -1;\n  }\n\n  handleEventSelection(newEvent: IBmbCalendarEventClick) {\n    this.onSelectEvent.emit(newEvent);\n  }\n\n  renderEvents(events: IBmbCalendarRenderEvents): any[] {\n    return eventsInDate(events);\n  }\n}\n",
            "styleUrl": "./bmb-calendar-template-month.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb_calendar-month-view\">\n  @for (day of getWeeksAndDays(now); track $index) {\n    <div\n      class=\"bmb_calendar-month-view-day\"\n      [ngClass]=\"{ 'bmb_calendar-col-today': isNow(day) }\"\n    >\n      <span class=\"bmb_calendar-month-view-day-legend\">\n        <span class=\"bmb_calendar-month-view-day-name\">{{\n          getDayName(day, lang)\n        }}</span>\n        {{ day.month }}/{{ day.day }}\n      </span>\n      @for (event of renderEvents({ date: day, events }); track $index) {\n        <bmb-calendar-schedule-cards\n          [event]=\"event\"\n          (onSelectEvent)=\"handleEventSelection($event)\"\n          [isPositionAbsolute]=\"false\"\n          [extendedContent]=\"false\"\n          >Event</bmb-calendar-schedule-cards\n        >\n      }\n    </div>\n  }\n</div>\n"
        },
        {
            "name": "BmbCalendarTemplateSelectComponent",
            "id": "component-BmbCalendarTemplateSelectComponent-bdce1bf01fd9e3ba0c0d58d807cebf66819ba5d37ff98c906f3b9131199a331fc79471573dc2f0822444e36180ac222409baaafc04c73eb0fca6a0a8b451eb6e",
            "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-select/bmb-calendar-template-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-calendar-template-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-calendar-template-select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onValueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "childNodes",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "isMenuExpanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "clickOutside",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "enableDropDown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isOptionSelected",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"\" | \"bmb-calendar-template-select-menu-selected\"",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                },
                {
                    "name": "ClickOutsideDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbButtonDirective } from '../../../../directives/button.directive';\nimport { CommonModule } from '@angular/common';\nimport { ClickOutsideDirective } from '../../../../directives/utils/clickoutside.directive';\n\n@Component({\n  selector: 'bmb-calendar-template-select',\n  standalone: true,\n  imports: [CommonModule, BmbButtonDirective, ClickOutsideDirective],\n  templateUrl: './bmb-calendar-template-select.component.html',\n  styleUrl: './bmb-calendar-template-select.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarTemplateSelectComponent {\n  @Input() options: string[] = [];\n  @Input() value: string = '';\n\n  @Output() onValueChange: EventEmitter<string> = new EventEmitter<string>();\n\n  isMenuExpanded = false;\n  childNodes: any = null;\n\n  handleClick(value: string) {\n    this.onValueChange.emit(value);\n    this.isMenuExpanded = false;\n  }\n\n  enableDropDown() {\n    this.isMenuExpanded = true;\n  }\n\n  isOptionSelected(item: string) {\n    if (this.value === item)\n      return 'bmb-calendar-template-select-menu-selected';\n\n    return '';\n  }\n\n  clickOutside(): void {\n    this.isMenuExpanded = false;\n  }\n}\n",
            "styleUrl": "./bmb-calendar-template-select.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section\n  class=\"bmb-calendar-template-select\"\n  clickOutside\n  (clickOutside)=\"clickOutside()\"\n>\n  <button\n    bmbButton\n    appearance=\"secondary-filled\"\n    icon=\"keyboard_arrow_down\"\n    (click)=\"enableDropDown()\"\n  >\n    {{ value }}\n  </button>\n  <ul\n    class=\"bmb-calendar-template-select-menu\"\n    [ngClass]=\"{ 'bmb-calendar-template-select-menu-active': isMenuExpanded }\"\n  >\n    @for (item of options; track $index) {\n      <li>\n        <button [ngClass]=\"isOptionSelected(item)\" (click)=\"handleClick(item)\">\n          {{ item }}\n        </button>\n      </li>\n    }\n  </ul>\n</section>\n"
        },
        {
            "name": "BmbCalendarTemplateWeekComponent",
            "id": "component-BmbCalendarTemplateWeekComponent-d23a7eb3802735e45aecebab5a83a19bc8f7bfc582cc28ad3bfe85bc85f16d6ec36cf7fc46f68c62f3ca3e706ed1cf14b0aed45d7cee779cce478d40ba4b8b24",
            "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-week/bmb-calendar-template-week.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-calendar-template-week",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-calendar-template-week.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "events",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "IBmbCalendarEvent[]",
                    "decorators": []
                },
                {
                    "name": "hourFormat",
                    "defaultValue": "'12'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "IBmbCalendarHourFormat",
                    "decorators": []
                },
                {
                    "name": "lang",
                    "defaultValue": "'es-MX'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "now",
                    "defaultValue": "DateTime.now()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "DateTime",
                    "decorators": []
                },
                {
                    "name": "weekDays",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSelectEvent",
                    "defaultValue": "new EventEmitter<IBmbCalendarEventClick>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "EventEmitter<IBmbCalendarEventClick>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dayNames",
                    "defaultValue": "orderDayNames(this.defaultDayOrder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "defaultDayOrder",
                    "defaultValue": "Info.weekdays('short', { locale: this.lang })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "rows",
                    "defaultValue": "new Array(25).fill(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methodsClass": [
                {
                    "name": "handleEventSelection",
                    "args": [
                        {
                            "name": "newEvent",
                            "type": "IBmbCalendarEventClick",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newEvent",
                            "type": "IBmbCalendarEventClick",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isNow",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "renderEvents",
                    "args": [
                        {
                            "name": "events",
                            "type": "IBmbCalendarRenderEvents",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "events",
                            "type": "IBmbCalendarRenderEvents",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbCalendarHourViewComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCalendarScheduleCardsComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Info, DateTime } from 'luxon';\nimport {\n  IBmbCalendarHourFormat,\n  IBmbCalendarEvent,\n  IBmbCalendarEventClick,\n  IBmbCalendarRenderEvents,\n} from '../../types';\nimport { BmbCalendarHourViewComponent } from '../bmb-calendar-hour-view/bmb-calendar-hour-view.component';\nimport { orderDayNames, eventsInDate } from '../../utils';\nimport { BmbCalendarScheduleCardsComponent } from '../bmb-calendar-schedule-cards/bmb-calendar-schedule-cards.component';\n\n@Component({\n  selector: 'bmb-calendar-template-week',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbCalendarHourViewComponent,\n    BmbCalendarScheduleCardsComponent,\n  ],\n  templateUrl: './bmb-calendar-template-week.component.html',\n  styleUrl: './bmb-calendar-template-week.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarTemplateWeekComponent {\n  @Input() weekDays: any[] = [];\n  @Input() lang: string = 'es-MX';\n  @Input() hourFormat: IBmbCalendarHourFormat = '12';\n  @Input() now: DateTime = DateTime.now();\n  @Input() events: IBmbCalendarEvent[] = [];\n\n  @Output() onSelectEvent: EventEmitter<IBmbCalendarEventClick> =\n    new EventEmitter<IBmbCalendarEventClick>();\n\n  defaultDayOrder = Info.weekdays('short', { locale: this.lang });\n\n  dayNames = orderDayNames(this.defaultDayOrder);\n\n  rows = new Array(25).fill(0);\n\n  isNow(date: DateTime): boolean {\n    const diff = date?.diffNow('day')?.days;\n    return diff < 0 && diff > -1;\n  }\n\n  renderEvents(events: IBmbCalendarRenderEvents): any[] {\n    return eventsInDate(events);\n  }\n\n  handleEventSelection(newEvent: IBmbCalendarEventClick) {\n    this.onSelectEvent.emit(newEvent);\n  }\n}\n",
            "styleUrl": "./bmb-calendar-template-week.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb_calendar-week-view\">\n  <bmb-calendar-hour-view [hourFormat]=\"hourFormat\" />\n  @for (day of dayNames; track $index) {\n    <section\n      class=\"bmb_calendar-col\"\n      [ngClass]=\"{ 'bmb_calendar-col-today': isNow(weekDays[$index]) }\"\n    >\n      <header class=\"bmb_calendar-detail-header\">\n        <h2>{{ day }}</h2>\n        <span>{{ weekDays[$index].month }}/{{ weekDays[$index].day }}</span>\n      </header>\n      <div class=\"bmb_calendar-body\">\n        @for (row of rows; track $index) {\n          <div class=\"bmb_calendar-row-body\"></div>\n        }\n        @for (\n          event of renderEvents({ date: weekDays[$index], events });\n          track $index\n        ) {\n          <bmb-calendar-schedule-cards\n            [event]=\"event\"\n            (onSelectEvent)=\"handleEventSelection($event)\"\n            >Event</bmb-calendar-schedule-cards\n          >\n        }\n      </div>\n    </section>\n  }\n</div>\n"
        },
        {
            "name": "BmbCardComponent",
            "id": "component-BmbCardComponent-764d4a320f68e8e502948a5ac232e952b688be25b5af1dc39aea7ab4725d1412313418d1c14ef9d6f11a3910c1220e0d338cb7836b8158b2df4552144bea3dbb",
            "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "borderRadius",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "SizeNames | SizeNames[]",
                    "decorators": []
                },
                {
                    "name": "margin",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "SizeNames | SizeNames[]",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'normal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "IBmbCardType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getStyles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SizeNames } from '../../types';\n\nconst calculateSize = (pixels: string[]): string => {\n  return pixels.map((size) => `var(--bmb-radius-${size})`).join(' ');\n};\n\nexport type IBmbCardType =\n  | 'primary'\n  | 'secondary'\n  | 'succes'\n  | 'info'\n  | 'warning'\n  | 'error'\n  | 'normal';\n\n@Component({\n  selector: 'bmb-card',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card.component.html',\n  styleUrl: './bmb-card.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardComponent {\n  @Input() borderRadius: SizeNames | SizeNames[] = 'm';\n  @Input() margin: SizeNames | SizeNames[] = 'm';\n  @Input() type: IBmbCardType = 'normal';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.borderRadius === 'string')\n      classNames.push(`bmb_border-radius-${this.borderRadius}`);\n    if (typeof this.margin === 'string')\n      classNames.push(`bmb_margin-${this.margin}`);\n    classNames.push(`bmb_card-type-${this.type}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.borderRadius !== 'string')\n      styles['border-radius'] = calculateSize(this.borderRadius);\n    if (typeof this.margin !== 'string')\n      styles.margin = calculateSize(this.margin);\n\n    return styles;\n  }\n}\n\n@Component({\n  selector: 'bmb-card-header',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardHeaderComponent {\n  @Input() padding: SizeNames | SizeNames[] = 'm';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.padding === 'string')\n      classNames.push(`bmb_padding-${this.padding}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.padding !== 'string')\n      styles['padding'] = calculateSize(this.padding);\n\n    return styles;\n  }\n}\n\n@Component({\n  selector: 'bmb-card-footer',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card-footer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardFooterComponent {\n  @Input() padding: SizeNames | SizeNames[] = 'm';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.padding === 'string')\n      classNames.push(`bmb_padding-${this.padding}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.padding !== 'string')\n      styles['padding'] = calculateSize(this.padding);\n\n    return styles;\n  }\n}\n\n@Component({\n  selector: 'bmb-card-content',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card-content.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardContentComponent {\n  @Input() padding: SizeNames | SizeNames[] = 'm';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.padding === 'string')\n      classNames.push(`bmb_padding-${this.padding}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.padding !== 'string')\n      styles['padding'] = calculateSize(this.padding);\n\n    return styles;\n  }\n}\n",
            "styleUrl": "./bmb-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"bmb_card\" [ngClass]=\"getClasses()\" [ngStyle]=\"getStyles()\">\n  <ng-content></ng-content>\n</section>\n"
        },
        {
            "name": "BmbCardContentComponent",
            "id": "component-BmbCardContentComponent-764d4a320f68e8e502948a5ac232e952b688be25b5af1dc39aea7ab4725d1412313418d1c14ef9d6f11a3910c1220e0d338cb7836b8158b2df4552144bea3dbb",
            "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-card-content",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-card-content.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "padding",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 124,
                    "type": "SizeNames | SizeNames[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getStyles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SizeNames } from '../../types';\n\nconst calculateSize = (pixels: string[]): string => {\n  return pixels.map((size) => `var(--bmb-radius-${size})`).join(' ');\n};\n\nexport type IBmbCardType =\n  | 'primary'\n  | 'secondary'\n  | 'succes'\n  | 'info'\n  | 'warning'\n  | 'error'\n  | 'normal';\n\n@Component({\n  selector: 'bmb-card',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card.component.html',\n  styleUrl: './bmb-card.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardComponent {\n  @Input() borderRadius: SizeNames | SizeNames[] = 'm';\n  @Input() margin: SizeNames | SizeNames[] = 'm';\n  @Input() type: IBmbCardType = 'normal';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.borderRadius === 'string')\n      classNames.push(`bmb_border-radius-${this.borderRadius}`);\n    if (typeof this.margin === 'string')\n      classNames.push(`bmb_margin-${this.margin}`);\n    classNames.push(`bmb_card-type-${this.type}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.borderRadius !== 'string')\n      styles['border-radius'] = calculateSize(this.borderRadius);\n    if (typeof this.margin !== 'string')\n      styles.margin = calculateSize(this.margin);\n\n    return styles;\n  }\n}\n\n@Component({\n  selector: 'bmb-card-header',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardHeaderComponent {\n  @Input() padding: SizeNames | SizeNames[] = 'm';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.padding === 'string')\n      classNames.push(`bmb_padding-${this.padding}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.padding !== 'string')\n      styles['padding'] = calculateSize(this.padding);\n\n    return styles;\n  }\n}\n\n@Component({\n  selector: 'bmb-card-footer',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card-footer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardFooterComponent {\n  @Input() padding: SizeNames | SizeNames[] = 'm';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.padding === 'string')\n      classNames.push(`bmb_padding-${this.padding}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.padding !== 'string')\n      styles['padding'] = calculateSize(this.padding);\n\n    return styles;\n  }\n}\n\n@Component({\n  selector: 'bmb-card-content',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card-content.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardContentComponent {\n  @Input() padding: SizeNames | SizeNames[] = 'm';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.padding === 'string')\n      classNames.push(`bmb_padding-${this.padding}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.padding !== 'string')\n      styles['padding'] = calculateSize(this.padding);\n\n    return styles;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"bmb_card-content\" [ngClass]=\"getClasses()\">\n  <ng-content></ng-content>\n</section>\n"
        },
        {
            "name": "BmbCardFooterComponent",
            "id": "component-BmbCardFooterComponent-764d4a320f68e8e502948a5ac232e952b688be25b5af1dc39aea7ab4725d1412313418d1c14ef9d6f11a3910c1220e0d338cb7836b8158b2df4552144bea3dbb",
            "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-card-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-card-footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "padding",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 96,
                    "type": "SizeNames | SizeNames[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getStyles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SizeNames } from '../../types';\n\nconst calculateSize = (pixels: string[]): string => {\n  return pixels.map((size) => `var(--bmb-radius-${size})`).join(' ');\n};\n\nexport type IBmbCardType =\n  | 'primary'\n  | 'secondary'\n  | 'succes'\n  | 'info'\n  | 'warning'\n  | 'error'\n  | 'normal';\n\n@Component({\n  selector: 'bmb-card',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card.component.html',\n  styleUrl: './bmb-card.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardComponent {\n  @Input() borderRadius: SizeNames | SizeNames[] = 'm';\n  @Input() margin: SizeNames | SizeNames[] = 'm';\n  @Input() type: IBmbCardType = 'normal';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.borderRadius === 'string')\n      classNames.push(`bmb_border-radius-${this.borderRadius}`);\n    if (typeof this.margin === 'string')\n      classNames.push(`bmb_margin-${this.margin}`);\n    classNames.push(`bmb_card-type-${this.type}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.borderRadius !== 'string')\n      styles['border-radius'] = calculateSize(this.borderRadius);\n    if (typeof this.margin !== 'string')\n      styles.margin = calculateSize(this.margin);\n\n    return styles;\n  }\n}\n\n@Component({\n  selector: 'bmb-card-header',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardHeaderComponent {\n  @Input() padding: SizeNames | SizeNames[] = 'm';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.padding === 'string')\n      classNames.push(`bmb_padding-${this.padding}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.padding !== 'string')\n      styles['padding'] = calculateSize(this.padding);\n\n    return styles;\n  }\n}\n\n@Component({\n  selector: 'bmb-card-footer',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card-footer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardFooterComponent {\n  @Input() padding: SizeNames | SizeNames[] = 'm';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.padding === 'string')\n      classNames.push(`bmb_padding-${this.padding}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.padding !== 'string')\n      styles['padding'] = calculateSize(this.padding);\n\n    return styles;\n  }\n}\n\n@Component({\n  selector: 'bmb-card-content',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card-content.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardContentComponent {\n  @Input() padding: SizeNames | SizeNames[] = 'm';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.padding === 'string')\n      classNames.push(`bmb_padding-${this.padding}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.padding !== 'string')\n      styles['padding'] = calculateSize(this.padding);\n\n    return styles;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<footer class=\"bmb_card-footer\" [ngClass]=\"getClasses()\">\n  <ng-content></ng-content>\n</footer>\n"
        },
        {
            "name": "BmbCardHeaderComponent",
            "id": "component-BmbCardHeaderComponent-764d4a320f68e8e502948a5ac232e952b688be25b5af1dc39aea7ab4725d1412313418d1c14ef9d6f11a3910c1220e0d338cb7836b8158b2df4552144bea3dbb",
            "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-card-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-card-header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "padding",
                    "defaultValue": "'m'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "SizeNames | SizeNames[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getStyles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SizeNames } from '../../types';\n\nconst calculateSize = (pixels: string[]): string => {\n  return pixels.map((size) => `var(--bmb-radius-${size})`).join(' ');\n};\n\nexport type IBmbCardType =\n  | 'primary'\n  | 'secondary'\n  | 'succes'\n  | 'info'\n  | 'warning'\n  | 'error'\n  | 'normal';\n\n@Component({\n  selector: 'bmb-card',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card.component.html',\n  styleUrl: './bmb-card.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardComponent {\n  @Input() borderRadius: SizeNames | SizeNames[] = 'm';\n  @Input() margin: SizeNames | SizeNames[] = 'm';\n  @Input() type: IBmbCardType = 'normal';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.borderRadius === 'string')\n      classNames.push(`bmb_border-radius-${this.borderRadius}`);\n    if (typeof this.margin === 'string')\n      classNames.push(`bmb_margin-${this.margin}`);\n    classNames.push(`bmb_card-type-${this.type}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.borderRadius !== 'string')\n      styles['border-radius'] = calculateSize(this.borderRadius);\n    if (typeof this.margin !== 'string')\n      styles.margin = calculateSize(this.margin);\n\n    return styles;\n  }\n}\n\n@Component({\n  selector: 'bmb-card-header',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardHeaderComponent {\n  @Input() padding: SizeNames | SizeNames[] = 'm';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.padding === 'string')\n      classNames.push(`bmb_padding-${this.padding}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.padding !== 'string')\n      styles['padding'] = calculateSize(this.padding);\n\n    return styles;\n  }\n}\n\n@Component({\n  selector: 'bmb-card-footer',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card-footer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardFooterComponent {\n  @Input() padding: SizeNames | SizeNames[] = 'm';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.padding === 'string')\n      classNames.push(`bmb_padding-${this.padding}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.padding !== 'string')\n      styles['padding'] = calculateSize(this.padding);\n\n    return styles;\n  }\n}\n\n@Component({\n  selector: 'bmb-card-content',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card-content.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardContentComponent {\n  @Input() padding: SizeNames | SizeNames[] = 'm';\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.padding === 'string')\n      classNames.push(`bmb_padding-${this.padding}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.padding !== 'string')\n      styles['padding'] = calculateSize(this.padding);\n\n    return styles;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<header class=\"bmb_card-header\" [ngClass]=\"getClasses()\">\n  <ng-content></ng-content>\n</header>\n"
        },
        {
            "name": "BmbChatBarComponent",
            "id": "component-BmbChatBarComponent-568f3317938d8bae7bfdb259e6bedc0777bf036f5c338e65f4ca5aaa22618fff56ba8a44ca5bf861459ab6af54ee52e08524e16bb18c7e5863a198f94246150d",
            "file": "projects/ds-ng/src/lib/components/bmb-chat-bar/bmb-chat-bar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-chat-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-chat-bar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "currentBot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "required": false
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "required": false
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "onSendMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "botList",
                    "defaultValue": "input<IBotType[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "control",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "currentBot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "required": false
                },
                {
                    "name": "dBotList",
                    "defaultValue": "computed(() => this.botList() ?? defaultBotList)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "defaultPlaceholder",
                    "defaultValue": "computed(\n    () => this.placeholder() ?? '¿Qué deseas encontrar hoy?',\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "isDialogOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "required": false
                },
                {
                    "name": "onSendMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "required": false
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "handleChangeBot",
                    "args": [
                        {
                            "name": "bot",
                            "type": "IBotType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "bot",
                            "type": "IBotType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleSend",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  input,\n  model,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { IBotType } from './types';\nimport { defaultBotList } from './bot_list';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nexport { defaultBotList } from './bot_list';\nexport { IBotType } from './types';\n\n@Component({\n  selector: 'bmb-chat-bar',\n  standalone: true,\n  imports: [BmbIconComponent, ReactiveFormsModule, CommonModule],\n  templateUrl: './bmb-chat-bar.component.html',\n  styleUrl: './bmb-chat-bar.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbChatBarComponent {\n  placeholder = input<string>();\n  botList = input<IBotType[]>();\n\n  currentBot = model<IBotType>();\n  isLoading = model<boolean>();\n\n  onSendMessage = output<string>();\n\n  control = new FormControl();\n  isDialogOpen: boolean = false;\n  defaultPlaceholder = computed(\n    () => this.placeholder() ?? '¿Qué deseas encontrar hoy?',\n  );\n  dBotList = computed(() => this.botList() ?? defaultBotList);\n\n  ngOnInit(): void {\n    this.currentBot.update(\n      (\n        bot: IBotType = {\n          name: 'TecGPT',\n          icon: '/assets/images/bot-icons/bot.png',\n        },\n      ): IBotType => bot,\n    );\n  }\n\n  handleSend() {\n    this.onSendMessage.emit(this.control.value);\n    this.isLoading.update((value) => !value);\n    this.control.reset();\n  }\n\n  handleChangeBot(bot: IBotType) {\n    this.isDialogOpen = false;\n    this.currentBot.set(bot);\n  }\n\n  handleDialog() {\n    this.isDialogOpen = !this.isDialogOpen;\n  }\n}\n",
            "styleUrl": "./bmb-chat-bar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"bmb_chat-bar\">\n  <div class=\"bmb_chat-bar-container\">\n    <button class=\"bmb_chat-bar-bot\" (click)=\"handleDialog()\">\n      <figure class=\"bmb_chat-bar-bot-picture\">\n        <img\n          class=\"bmb_chat-bar-bot-picture-image\"\n          [src]=\"currentBot()?.icon\"\n          [alt]=\"currentBot()?.name\"\n        />\n      </figure>\n    </button>\n    <input\n      id=\"bmbChatBarBot\"\n      name=\"bmbChatBarBot\"\n      class=\"bmb_chat-bar-input\"\n      type=\"text\"\n      [placeholder]=\"defaultPlaceholder()\"\n      [formControl]=\"control\"\n    />\n    <button\n      (click)=\"handleSend()\"\n      class=\"bmb_chat-bar-send\"\n      [disabled]=\"!control.value || isLoading()\"\n    >\n      <bmb-icon\n        [ngClass]=\"{ 'bmb_chat-bar-send-animated': isLoading() }\"\n        [icon]=\"isLoading() ? 'progress_activity' : 'send'\"\n      />\n    </button>\n  </div>\n  <div\n    class=\"bmb_chat-bar-dialog\"\n    [ngClass]=\"{ 'bmb_chat-bar-dialog-active': isDialogOpen }\"\n  >\n    <ul class=\"bmb_chat-bar-dialog-list\">\n      @if (isDialogOpen) {\n        @for (bot of dBotList(); track $index) {\n          <li class=\"bmb_chat-bar-dialog-option\">\n            <button\n              (click)=\"handleChangeBot(bot)\"\n              class=\"bmb_chat-bar-dialog-button\"\n            >\n              <img\n                class=\"bmb_chat-bar-dialog-image\"\n                [src]=\"bot.icon\"\n                [alt]=\"bot.name\"\n              />\n            </button>\n          </li>\n        }\n      }\n    </ul>\n  </div>\n</section>\n"
        },
        {
            "name": "BmbCheckboxComponent",
            "id": "component-BmbCheckboxComponent-9560ee90693508ae9d051a6040000185ff25a4c5b175345e6861b3a4ae011b4f6d6704768aded56e3cf23a11da8ab1638feac45bec5ae18338053d67df44609d",
            "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-checkbox",
            "styleUrls": [
                "./bmb-checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "ariaDescribedby",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "ariaLabelledby",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelPosition",
                    "defaultValue": "'after'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "change",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter<Event>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-checkbox',\n  templateUrl: './bmb-checkbox.component.html',\n  styleUrls: ['./bmb-checkbox.component.scss'],\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCheckboxComponent {\n  @Input() id: string = '';\n  @Input() checked: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() indeterminate: boolean = false;\n  @Input() required: boolean = false;\n  @Input() value: string = '';\n  @Input() name: string = '';\n  @Input() label: string = '';\n  @Input() labelPosition: 'before' | 'after' = 'after';\n  @Input() ariaDescribedby: string = '';\n  @Input() ariaLabel: string = '';\n  @Input() ariaLabelledby: string = '';\n\n  @Output() change: EventEmitter<Event> = new EventEmitter<Event>();\n\n  handleChange(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    this.checked = target.checked;\n    this.change.emit(event);\n    event.stopPropagation();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      if (this.indeterminate) {\n        this.indeterminate = false;\n        this.checked = true;\n      } else {\n        this.checked = !this.checked;\n      }\n\n      event.preventDefault();\n      this.change.emit(event);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/mixins\" as mixins;\n@use \"../../../assets/styles/base/rem\" as rem;\n\n.bmb_checkbox {\n  align-items: center;\n  display: flex;\n  gap: rem.rem_calc(8);\n  position: relative;\n  width: fit-content;\n\n  input[type=\"checkbox\"] {\n    cursor: pointer;\n    height: rem.rem_calc(42);\n    margin: 0;\n    opacity: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    z-index: 1;\n\n    &:hover {\n      + .bmb_checkbox-box {\n        background-color: RGBA(var(--color-blue-primary), 0.1);\n      }\n    }\n\n    &:focus {\n      + .bmb_checkbox-box {\n        background-color: RGBA(var(--color-blue-primary), 0.2);\n      }\n    }\n\n    &:checked {\n      + .bmb_checkbox-box {\n        .bmb_checkbox-mark {\n          background-color: RGBA(var(--color-blue-primary));\n          border-color: RGBA(var(--color-blue-primary));\n\n          &::after {\n            border: solid RGBA(var(--color-white-primary));\n            border-width: rem.rem_calc(0 2 2 0);\n            display: block;\n            height: rem.rem_calc(10);\n            left: rem.rem_calc(4);\n            transform: rotate(45deg);\n            width: rem.rem_calc(4);\n          }\n        }\n      }\n    }\n\n    &:indeterminate {\n      + .bmb_checkbox-box {\n        .bmb_checkbox-mark {\n          background-color: RGBA(var(--color-blue-primary));\n          border-color: RGBA(var(--color-blue-primary));\n\n          &::after {\n            background-color: RGBA(var(--color-white-primary));\n            bottom: 0;\n            display: block;\n            height: rem.rem_calc(2);\n            left: 0;\n            margin: auto;\n            right: 0;\n            top: 0;\n            width: rem.rem_calc(10);\n          }\n        }\n      }\n    }\n\n    &:disabled {\n      cursor: not-allowed;\n\n      + .bmb_checkbox-box {\n        .bmb_checkbox-mark {\n          opacity: 0.5;\n        }\n      }\n      &:hover {\n        + .bmb_checkbox-box {\n          background-color: transparent;\n        }\n      }\n    }\n  }\n\n  &-required {\n    .bmb_checkbox-mark {\n      border-color: RGBA(var(--color-mitec-red));\n    }\n  }\n\n  &-box {\n    align-items: center;\n    border-radius: 100%;\n    display: flex;\n    height: rem.rem_calc(42);\n    justify-content: center;\n    width: rem.rem_calc(42);\n  }\n\n  &-mark {\n    background-color: transparent;\n    border: rem.rem_calc(2) solid RGBA(var(--color-charade-700));\n    border-radius: rem.rem_calc(4);\n    display: inline-block;\n    height: rem.rem_calc(18);\n    position: relative;\n    width: rem.rem_calc(18);\n\n    &::after {\n      content: \"\";\n      display: none;\n      position: absolute;\n    }\n  }\n\n  &-label {\n    color: RGBA(var(--color-charade-950));\n    flex: 1;\n    overflow: hidden;\n    padding-right: rem.rem_calc(10);\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    @include fonts.font(4, medium);\n  }\n\n  &-before {\n    .bmb_checkbox-label {\n      order: 1;\n    }\n    .bmb_checkbox-box {\n      order: 2;\n    }\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_checkbox {\n    input[type=\"checkbox\"] {\n      &:hover {\n        + .bmb_checkbox-box {\n          background-color: RGBA(var(--color-green-light), 0.1);\n        }\n      }\n\n      &:focus {\n        + .bmb_checkbox-box {\n          background-color: RGBA(var(--color-green-light), 0.2);\n        }\n      }\n\n      &:checked {\n        + .bmb_checkbox-box {\n          .bmb_checkbox-mark {\n            background-color: RGBA(var(--color-green-light));\n            border-color: RGBA(var(--color-green-light));\n          }\n        }\n      }\n\n      &:indeterminate {\n        + .bmb_checkbox-box {\n          .bmb_checkbox-mark {\n            background-color: RGBA(var(--color-green-light));\n            border-color: RGBA(var(--color-green-light));\n          }\n        }\n      }\n    }\n\n    &-mark {\n      border-color: RGBA(var(--color-charade-200));\n    }\n\n    &-label {\n      color: RGBA(var(--color-charade-50));\n    }\n  }\n}\n",
                    "styleUrl": "./bmb-checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<label\n  [attr.for]=\"id\"\n  class=\"bmb_checkbox\"\n  [class.bmb_checkbox-before]=\"labelPosition === 'before'\"\n  [class.bmb_checkbox-after]=\"labelPosition === 'after'\"\n  [class.bmb_checkbox-required]=\"required\"\n>\n  <input\n    type=\"checkbox\"\n    [id]=\"id\"\n    [attr.aria-describedby]=\"ariaDescribedby\"\n    [attr.aria-label]=\"ariaLabel\"\n    [attr.aria-labelledby]=\"ariaLabelledby\"\n    [attr.name]=\"name\"\n    [attr.value]=\"value\"\n    [checked]=\"checked\"\n    [disabled]=\"disabled\"\n    [required]=\"required\"\n    [indeterminate]=\"indeterminate\"\n    (change)=\"handleChange($event)\"\n    (keydown)=\"handleKeyDown($event)\"\n  />\n  <div class=\"bmb_checkbox-box\">\n    <span class=\"bmb_checkbox-mark\"></span>\n  </div>\n  @if (label) {\n    <span class=\"bmb_checkbox-label\">{{ label }}</span>\n  }\n</label>\n"
        },
        {
            "name": "BmbChevronTitleSelectorComponent",
            "id": "component-BmbChevronTitleSelectorComponent-f3617c916a69eb59c896d6f14b5d5dbcf987aa5e180113aa5e9a53855ccc7c6e975bc68384b1716d4ef4b64ec70463165acfba506dcba1cb4aa1c7e625cff845",
            "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-chevron-title-selector",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-chevron-title-selector.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "leadingIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": true
                },
                {
                    "name": "trailingIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "onLeadingClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": false
                },
                {
                    "name": "onTrailingClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "leadingIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "leftIcon",
                    "defaultValue": "computed(() => this.leadingIcon() ?? 'chevron_left')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "onLeadingClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": false
                },
                {
                    "name": "onTrailingClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": false
                },
                {
                    "name": "rightIcon",
                    "defaultValue": "computed(() => this.trailingIcon() ?? 'chevron_right')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": true
                },
                {
                    "name": "trailingIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "handleLeadingClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleTrailingClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  input,\n  output,\n  computed,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-chevron-title-selector',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  styleUrl: './bmb-chevron-title-selector.component.scss',\n  templateUrl: './bmb-chevron-title-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbChevronTitleSelectorComponent {\n  title = input.required<string>();\n  leadingIcon = input<string>();\n  trailingIcon = input<string>();\n\n  onLeadingClick = output();\n  onTrailingClick = output();\n\n  leftIcon = computed(() => this.leadingIcon() ?? 'chevron_left');\n  rightIcon = computed(() => this.trailingIcon() ?? 'chevron_right');\n\n  handleLeadingClick(event: any): void {\n    this.onLeadingClick.emit(event);\n  }\n\n  handleTrailingClick(event: any): void {\n    this.onTrailingClick.emit(event);\n  }\n}\n",
            "styleUrl": "./bmb-chevron-title-selector.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb_chevron\">\n  <button\n    class=\"bmb_chevron-button\"\n    *ngIf=\"leftIcon()\"\n    (click)=\"handleLeadingClick($event)\"\n  >\n    <bmb-icon [icon]=\"leftIcon()\" class=\"bmb_chevron-icon\" />\n  </button>\n\n  <span class=\"bmb_chevron-title\">{{ title() }}</span>\n  <button\n    class=\"bmb_chevron-button\"\n    *ngIf=\"rightIcon()\"\n    (click)=\"handleTrailingClick($event)\"\n  >\n    <bmb-icon [icon]=\"rightIcon()\" class=\"bmb_chevron-icon\" />\n  </button>\n</div>\n"
        },
        {
            "name": "BmbContainerButtonComponent",
            "id": "component-BmbContainerButtonComponent-9073f5e889168a371d75ac7497ffddf7c97e5e831d3ee28c7a2ffb9a3c56c6a538cc75ff1113c1f4f50b9ffa0870a6e3137dd2b88865e68267b0060ec2721bc9",
            "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-container-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-container-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "setButtonTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "required": false
                },
                {
                    "name": "square",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "onButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "iconLeft",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "iconRight",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "link",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "onButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "required": false
                },
                {
                    "name": "score",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "setButtonTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "required": false
                },
                {
                    "name": "square",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "required": false
                },
                {
                    "name": "subtitle",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "target",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "title",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [
                {
                    "name": "getScore",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCardComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCardContentComponent",
                    "type": "component"
                },
                {
                    "name": "BmbGradeValueComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLayoutDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbLayoutItemDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  input,\n  output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport {\n  BmbCardComponent,\n  BmbCardContentComponent,\n} from '../bmb-card/bmb-card.component';\nimport { BmbGradeValueComponent } from '../bmb-grade-value/bmb-grade-value.component';\nimport { BmbLayoutItemDirective } from '../../directives/bmb-layout/bmb-layout-item.directive';\nimport { BmbLayoutDirective } from '../../directives/bmb-layout/bmb-layout.directive';\n\n@Component({\n  selector: 'bmb-container-button',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbCardComponent,\n    BmbCardContentComponent,\n    BmbGradeValueComponent,\n    BmbLayoutDirective,\n    BmbLayoutItemDirective,\n  ],\n  styleUrl: './bmb-container-button.component.scss',\n  templateUrl: './bmb-container-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbContainerButtonComponent {\n  title = input<string>('');\n  score = input<string>('');\n  square = input<boolean>();\n  target = input<string>('');\n  link = input<string>('');\n  subtitle = input<string>('');\n  iconLeft = input<string>('');\n  iconRight = input<string>('');\n  setButtonTemplate = input<boolean>();\n\n  onButton = output();\n\n  getScore(): number {\n    return Number(this.score());\n  }\n\n  handleClick(event: any): void {\n    this.onButton.emit(event);\n  }\n}\n",
            "styleUrl": "./bmb-container-button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-template #commonContent>\n  <bmb-card>\n    <bmb-card-content padding=\"l\">\n      <section bmbLayout [dinamycCols]=\"true\" margin=\"none\" alignItems=\"center\">\n        <bmb-icon\n          bmbLayoutItem\n          class=\"bmb_container-button-left\"\n          [icon]=\"iconLeft()\"\n          *ngIf=\"iconLeft() && !score()\"\n        />\n        <bmb-grade-value\n          bmbLayoutItem\n          type=\"main-grade\"\n          [score]=\"getScore()\"\n          *ngIf=\"score() && !square()\"\n        />\n        <section bmbLayoutItem>\n          <span class=\"bmb_container-button-title\">{{ title() }}</span>\n          <span\n            class=\"bmb_container-button-subtitle\"\n            *ngIf=\"subtitle() && !square()\"\n          >\n            {{ subtitle() }}\n          </span>\n        </section>\n        <bmb-icon\n          class=\"bmb_container-button-right\"\n          [icon]=\"iconRight()\"\n          *ngIf=\"iconRight() && !square()\"\n        />\n      </section>\n    </bmb-card-content>\n  </bmb-card>\n</ng-template>\n\n<button\n  class=\"bmb_container-button\"\n  *ngIf=\"setButtonTemplate()\"\n  (click)=\"handleClick($event)\"\n>\n  <ng-container *ngTemplateOutlet=\"commonContent\" />\n</button>\n\n<a\n  class=\"bmb_container-button\"\n  *ngIf=\"!setButtonTemplate()\"\n  [href]=\"link()\"\n  [target]=\"target()\"\n>\n  <ng-container *ngTemplateOutlet=\"commonContent\" />\n</a>\n"
        },
        {
            "name": "BmbContainerComponent",
            "id": "component-BmbContainerComponent-ca343c26adbfe0ab2f27895239507f94e442104da20ed2a84499080e49ccc31f1c3aeb79a70f7537293b6a22c1dabd131e3e758da5781fce8aa525d167885686",
            "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-container.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isHidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "defaultValue": "input<IBmbAppearanceType>('primary-container')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "isHidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  input,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport type IBmbAppearanceType =\n  | 'primary-container'\n  | 'primary-home'\n  | 'primary-header'\n  | 'secondary-container'\n  | 'contrast-box-container'\n  | 'button-container';\n\n@Component({\n  selector: 'bmb-container',\n  standalone: true,\n  imports: [CommonModule],\n  styleUrl: './bmb-container.component.scss',\n  templateUrl: './bmb-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbContainerComponent {\n  appearance = input<IBmbAppearanceType>('primary-container');\n  isHidden = input<boolean>(false);\n\n  getClasses(): string[] {\n    const className = 'bmb_container';\n    const classes: string[] = [className];\n\n    if (this.isHidden()) return [className + '-hidden'];\n\n    if (this.appearance()) {\n      classes.push(className + '-' + this.appearance());\n    }\n\n    return classes;\n  }\n}\n",
            "styleUrl": "./bmb-container.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div [ngClass]=\"getClasses()\">\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "BmbDatepickerComponent",
            "id": "component-BmbDatepickerComponent-d4cbd36655d8eb6fd84bd7ed55fa36842640fd6e7402b759c092e6bb3b2bf3424770f38073d750e6decab8323f431db53eaba304c092f8846b24bc12d38be5e2",
            "file": "projects/ds-ng/src/lib/components/bmb-datepicker/bmb-datepicker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-datepicker",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-datepicker.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "'normal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "control",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "FormControl",
                    "decorators": []
                },
                {
                    "name": "dateFormat",
                    "defaultValue": "'dd/MM/yyyy'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'calendar_month'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inline",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "invalidFormaterrorMessage",
                    "defaultValue": "'Formato invalido'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isClearable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isRequired",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "requiredFieldErrorMessage",
                    "defaultValue": "'Campo requerido'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "stepYearPicker",
                    "defaultValue": "12",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultDate",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "isWindowOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "now",
                    "defaultValue": "DateTime.now()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methodsClass": [
                {
                    "name": "clearValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "clickOutside",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "customValidatorDate",
                    "args": [],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getErrorMessage",
                    "args": [
                        {
                            "name": "errors",
                            "type": "ValidationErrors | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "ValidationErrors | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFouseEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleValueChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleWindowOpen",
                    "args": [
                        {
                            "name": "event",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "BmbInputComponent",
                    "type": "component"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "BmbDatepickerModalComponent",
                    "type": "component"
                },
                {
                    "name": "ClickOutsideDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  FormsModule,\n  FormControl,\n  ValidatorFn,\n  AbstractControl,\n  ReactiveFormsModule,\n  ValidationErrors,\n} from '@angular/forms';\nimport { DateTime } from 'luxon';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbInputComponent } from '../bmb-input/bmb-input.component';\nimport { BmbDatepickerModalComponent } from './bmb-datepicker-modal/bmb-datepicker-modal.component';\nimport { ClickOutsideDirective } from '../../directives/utils/clickoutside.directive';\n\n@Component({\n  selector: 'bmb-datepicker',\n  standalone: true,\n  imports: [\n    BmbIconComponent,\n    FormsModule,\n    BmbInputComponent,\n    ReactiveFormsModule,\n    BmbDatepickerModalComponent,\n    ClickOutsideDirective,\n  ],\n  templateUrl: './bmb-datepicker.component.html',\n  styleUrl: './bmb-datepicker.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbDatepickerComponent implements OnInit {\n  @Input() label: string = '';\n  @Input() placeholder: string = '';\n  @Input() icon: string = 'calendar_month';\n  @Input() invalidFormaterrorMessage: string = 'Formato invalido';\n  @Input() requiredFieldErrorMessage: string = 'Campo requerido';\n  @Input() appearance: string = 'normal';\n  @Input() disabled: boolean = false;\n  @Input() isRequired: boolean = false;\n  @Input() isClearable: boolean = false;\n  @Input() control: FormControl = new FormControl();\n  @Input() dateFormat: string = 'dd/MM/yyyy';\n  @Input() inline: boolean = false;\n  @Input() stepYearPicker: number = 12;\n  @Input() name: string = '';\n\n  now = DateTime.now();\n\n  defaultDate = new Date();\n  isWindowOpen = false;\n\n  clearValue() {\n    this.control.reset();\n  }\n\n  ngOnInit() {\n    this.control.addValidators(this.customValidatorDate());\n    this.control.updateValueAndValidity();\n  }\n\n  customValidatorDate(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const { value } = control;\n      if (!value) return null;\n\n      const isValidDate = DateTime.fromFormat(\n        control.value,\n        this.dateFormat,\n      ).isValid;\n\n      return !isValidDate ? { validationDate: true } : null;\n    };\n  }\n\n  getErrorMessage(errors: ValidationErrors | null): string {\n    if (errors?.['validationDate']) return this.invalidFormaterrorMessage;\n    if (errors?.['required']) return this.requiredFieldErrorMessage;\n    return '';\n  }\n\n  handleFouseEvent(event: boolean) {\n    if (event) {\n      this.isWindowOpen = event;\n    }\n  }\n\n  handleWindowOpen(event: boolean) {\n    this.isWindowOpen = event;\n  }\n\n  handleValueChange(event: string) {\n    this.control.setValue(event);\n    this.isWindowOpen = false;\n  }\n\n  clickOutside(): void {\n    this.isWindowOpen = false;\n  }\n}\n",
            "styleUrl": "./bmb-datepicker.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"bmb_datepicker\" clickOutside (clickOutside)=\"clickOutside()\">\n  <section class=\"bmb-datepicker-container\">\n    <bmb-input\n      [placeholder]=\"placeholder\"\n      [label]=\"label\"\n      [icon]=\"icon\"\n      [isRequired]=\"isRequired\"\n      [disabled]=\"disabled\"\n      [appearance]=\"appearance\"\n      [control]=\"control\"\n      [isRequired]=\"isRequired\"\n      (isFocus)=\"handleFouseEvent($event)\"\n      [helperMessage]=\"dateFormat\"\n      [errorMessage]=\"getErrorMessage(control.errors)\"\n      [name]=\"name\"\n    />\n    @if (isClearable) {\n      <button class=\"bmb_datepicker-clear\" (click)=\"clearValue()\">\n        <bmb-icon icon=\"close\" />\n      </button>\n    }\n    @if (isWindowOpen) {\n      <bmb-datepicker-modal\n        [now]=\"now\"\n        [isWindowOpen]=\"isWindowOpen\"\n        (closeWindow)=\"handleWindowOpen($event)\"\n        (onValueChange)=\"handleValueChange($event)\"\n        [value]=\"control.value\"\n        [dateFormat]=\"dateFormat\"\n        [stepYearPicker]=\"stepYearPicker\"\n      />\n    }\n  </section>\n</div>\n"
        },
        {
            "name": "BmbDatepickerModalComponent",
            "id": "component-BmbDatepickerModalComponent-175386eb87328118abfe6e39b516b2d2204d5b73ce15e8fb66b7c00e97741db454263b084115dbf7e25265135ef1b7ce51422a5c3e203b9f6d8fccfd1fa017cf",
            "file": "projects/ds-ng/src/lib/components/bmb-datepicker/bmb-datepicker-modal/bmb-datepicker-modal.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-datepicker-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-datepicker-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "dateFormat",
                    "defaultValue": "'dd/MM/yyyy'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isWindowOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "lang",
                    "defaultValue": "'es'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "now",
                    "defaultValue": "DateTime.now()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "DateTime",
                    "decorators": []
                },
                {
                    "name": "stepYearPicker",
                    "defaultValue": "12",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "closeWindow",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "onValueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dayNames",
                    "defaultValue": "orderDayNames(this.defaultDayOrder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "defaultDayOrder",
                    "defaultValue": "Info.weekdays('narrow', { locale: this.lang })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "month",
                    "defaultValue": "this.monthsNames[(this.selectedMonth || this.now.month) - 1]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "monthsNames",
                    "defaultValue": "Info.months('long', { locale: this.lang })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "selectedDate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DateTime | null",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "selectedMonth",
                    "defaultValue": "this.now.month",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "selectedYear",
                    "defaultValue": "this.now.year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "view",
                    "defaultValue": "'calendar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "year",
                    "defaultValue": "this.now.year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "methodsClass": [
                {
                    "name": "getWeeksAndDays",
                    "args": [],
                    "optional": false,
                    "returnType": "DateTime[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getYears",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleChangeView",
                    "args": [
                        {
                            "name": "view",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "view",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleDayChange",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleMonthChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleYearChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isSelectedDay",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbLayoutDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbLayoutItemDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbLayoutDirective } from '../../../directives/bmb-layout/bmb-layout.directive';\nimport { BmbLayoutItemDirective } from '../../../directives/bmb-layout/bmb-layout-item.directive';\nimport { DateTime, Info } from 'luxon';\nimport { orderDayNames, weeksAndDays } from '../../bmb-calendar/utils';\nimport { BmbButtonDirective } from '../../../directives/button.directive';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-datepicker-modal',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbLayoutDirective,\n    BmbLayoutItemDirective,\n    BmbButtonDirective,\n  ],\n  templateUrl: './bmb-datepicker-modal.component.html',\n  styleUrl: './bmb-datepicker-modal.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbDatepickerModalComponent implements OnInit {\n  @Input() isWindowOpen: boolean = false;\n  @Input() now: DateTime = DateTime.now();\n  @Input() lang: string = 'es';\n  @Input() value?: string;\n  @Input() dateFormat: string = 'dd/MM/yyyy';\n  @Input() stepYearPicker: number = 12;\n\n  @Output() closeWindow: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() onValueChange: EventEmitter<string> = new EventEmitter<string>();\n\n  selectedMonth = this.now.month;\n  monthsNames = Info.months('long', { locale: this.lang });\n  month = this.monthsNames[(this.selectedMonth || this.now.month) - 1];\n  year = this.now.year;\n  defaultDayOrder = Info.weekdays('narrow', { locale: this.lang });\n  dayNames = orderDayNames(this.defaultDayOrder);\n  selectedYear = this.now.year;\n  view = 'calendar';\n  selectedDate: DateTime | null = null;\n\n  handleMonthChange(event: number) {\n    this.selectedMonth = event + 1;\n    this.month = this.monthsNames[event];\n    this.view = 'calendar';\n  }\n\n  handleYearChange(event: any) {\n    this.selectedYear = event;\n    this.view = 'calendar';\n  }\n\n  getYears() {\n    const yearsList = new Array(this.stepYearPicker).fill(0);\n    const currentYear = this.selectedYear;\n    const yearsFinal = yearsList.map((_, index) => {\n      return (currentYear - (this.stepYearPicker / 2 - 1) + index).toString();\n    });\n    return yearsFinal;\n  }\n\n  handleDayChange(date: DateTime): void {\n    const newValue = date.toFormat(this.dateFormat);\n    this.onValueChange.emit(newValue);\n  }\n\n  getWeeksAndDays(): DateTime[] {\n    const firstDayOfMonth = DateTime.fromObject({\n      day: 1,\n      month: this.selectedMonth ?? this.now.month,\n      year: this.selectedYear ?? this.now.year,\n    });\n    return weeksAndDays(firstDayOfMonth);\n  }\n\n  isSelectedDay(date: DateTime): string {\n    if (this.selectedDate && date.hasSame(this.selectedDate, 'day'))\n      return 'bmb_datepicker-modal-calendar-item-button-selected';\n    return '';\n  }\n\n  handleChangeView(view: string) {\n    this.view = view;\n  }\n\n  ngOnInit() {\n    this.selectedYear = this.now.year;\n    this.selectedMonth = this.now.month;\n    if (this.value) {\n      this.selectedDate = DateTime.fromFormat(this?.value, this.dateFormat);\n    }\n  }\n}\n",
            "styleUrl": "./bmb-datepicker-modal.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"bmb_datepicker-modal\">\n  <nav\n    class=\"bmb_datepicker-modal-nav\"\n    bmbLayout\n    margin=\"none\"\n    [dinamycCols]=\"true\"\n    justify=\"center\"\n  >\n    <li bmbLayoutItem>\n      <button\n        class=\"bmb_datepicker-modal-calendar-button\"\n        (click)=\"handleChangeView('month')\"\n        bmbButton\n        appearance=\"secondary-outlined\"\n        icon=\"keyboard_arrow_down\"\n      >\n        {{ month }}\n      </button>\n    </li>\n    <li bmbLayoutItem>\n      <button\n        class=\"bmb_datepicker-modal-calendar-button\"\n        (click)=\"handleChangeView('year')\"\n        bmbButton\n        appearance=\"secondary-outlined\"\n        icon=\"keyboard_arrow_down\"\n      >\n        {{ selectedYear }}\n      </button>\n    </li>\n  </nav>\n  @switch (view) {\n    @case (\"calendar\") {\n      <ul class=\"bmb_datepicker-modal-calendar\">\n        @for (day of dayNames; track $index) {\n          <li class=\"bmb_datepicker-modal-calendar-header\">\n            {{ day }}\n          </li>\n        }\n        @for (date of getWeeksAndDays(); track $index) {\n          <li class=\"bmb_datepicker-modal-calendar-item\">\n            <button\n              class=\"bmb_datepicker-modal-calendar-item-button\"\n              [ngClass]=\"isSelectedDay(date)\"\n              (click)=\"handleDayChange(date)\"\n              bmbButton\n              appearance=\"secondary-filled\"\n            >\n              {{ date.day }}\n            </button>\n          </li>\n        }\n      </ul>\n    }\n    @case (\"month\") {\n      <ul class=\"bmb_datepicker-modal-list\">\n        @for (month of monthsNames; track $index) {\n          <li\n            class=\"bmb_datepicker-modal-list-item bmb_datepicker-modal-list-item-month\"\n          >\n            <button\n              class=\"bmb_datepicker-modal-calendar-item-button bmb_datepicker-modal-calendar-item-button-full modal-persist\"\n              bmbButton\n              appearance=\"secondary-filled\"\n              (click)=\"handleMonthChange($index)\"\n            >\n              {{ month }}\n            </button>\n          </li>\n        }\n      </ul>\n    }\n    @case (\"year\") {\n      <ul class=\"bmb_datepicker-modal-list\">\n        @for (year of getYears(); track $index) {\n          <li class=\"bmb_datepicker-modal-list-item\">\n            <button\n              class=\"bmb_datepicker-modal-calendar-item-button bmb_datepicker-modal-calendar-item-button-full modal-persist\"\n              bmbButton\n              appearance=\"secondary-filled\"\n              (click)=\"handleYearChange(year)\"\n            >\n              {{ year }}\n            </button>\n          </li>\n        }\n      </ul>\n    }\n  }\n</div>\n"
        },
        {
            "name": "BmbDividerComponent",
            "id": "component-BmbDividerComponent-c01b5cdc7f09a37bd606ee023ef3bbf2215642f932d456b2a9473097b66705b6c7057115fec3144a2da5330861f7beebf0ff811103b0f64b401fd20eff1adb56",
            "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-divider",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-divider.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'bmb-divider',\n  styleUrl: './bmb-divider.component.scss',\n  templateUrl: './bmb-divider.component.html',\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbDividerComponent {\n  @Input() type: string = '';\n\n  constructor() {}\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_divider'];\n\n    if (this.type) {\n      classes.push('bmb_divider-' + this.type);\n    }\n\n    return classes;\n  }\n}\n",
            "styleUrl": "./bmb-divider.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "extends": [],
            "templateData": "<div class=\"bmb_divider\" [ngClass]=\"getClasses()\"></div>\n"
        },
        {
            "name": "BmbDotPaginatorComponent",
            "id": "component-BmbDotPaginatorComponent-f2c3d13fcf4fd6183ec16ed094945329f06423ca7483317bd35b40b174de58d51ac8b2c617a6cf24a3f7aca7974b78604de4aff3d3f914fbfd2720c5feb49d40",
            "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-dot-paginator",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-dot-paginator.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeDotIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "targets",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "Target[]",
                    "decorators": []
                },
                {
                    "name": "totalDots",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onDotPress",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getDotsArray",
                    "args": [],
                    "optional": false,
                    "returnType": "number[]",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDotClicked",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\n@Component({\n  selector: 'bmb-dot-paginator',\n  standalone: true,\n  styleUrl: './bmb-dot-paginator.component.scss',\n  imports: [CommonModule],\n  templateUrl: './bmb-dot-paginator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbDotPaginatorComponent {\n  @Input() activeDotIndex?: number = 0;\n  @Input() totalDots?: number = 0;\n  @Input() targets: Target[] = [];\n  @Input() appearance: string = '';\n  @Output() onDotPress: EventEmitter<number> = new EventEmitter<number>();\n\n  getDotsArray(): number[] {\n    return new Array(this.totalDots ?? 0).fill(0).map((_, i) => i);\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_dot_paginator'];\n\n    if (this.appearance) {\n      classes.push('bmb_dot_paginator-' + this.appearance);\n    }\n\n    return classes;\n  }\n\n  onDotClicked(index: number): void {\n    this.activeDotIndex = index;\n    this.onDotPress.emit(index);\n  }\n}\n",
            "styleUrl": "./bmb-dot-paginator.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ol [ngClass]=\"getClasses()\">\n  <li\n    *ngFor=\"let i of getDotsArray()\"\n    [attr.data-bs-target]=\"targets && targets[i] ? targets[i].target : ''\"\n    [attr.data-bs-slide-to]=\"i\"\n    [ngClass]=\"{ dot: true, active: activeDotIndex === i }\"\n    (click)=\"onDotClicked(i)\"\n  ></li>\n</ol>\n"
        },
        {
            "name": "BmbDropdownComponent",
            "id": "component-BmbDropdownComponent-a0a3fdc1f4ad1b436ed432ab09352c9042af9474bf014680b1b0d5bf6778902041a6aa557646a5ae68406e1e943fc9d1d77ee81db73a03190178343db2809721",
            "file": "projects/ds-ng/src/lib/components/bmb-dropdown/bmb-dropdown.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => BmbDropdownComponent), multi: true,\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => BmbDropdownComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "bmb-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-dropdown.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "FormControl | undefined",
                    "decorators": []
                },
                {
                    "name": "helperText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "\"default\" | \"autocomplete\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onValueChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "childNodes",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filterControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "filteredData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "filterField",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef | null",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'filterDropdown'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgModel | undefined",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "inputWrapper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'inputWrapper', {read: ElementRef, static: false}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "isFocus",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "multipleOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "onChangeFn",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 190,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onTouchedFn",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 192,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "openSelect",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 103
                },
                {
                    "name": "selectedIndexOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "selectedOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "uid",
                    "defaultValue": "Date.now().toString(36) + (Math.floor(Math.random() * 90) + 10)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 102
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteTag",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleItemClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onParentClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onTouched",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 206,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "openDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 194,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLoaderComponent",
                    "type": "component"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "BmbTagComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  NgModel,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbLoaderComponent } from '../bmb-loader/bmb-loader.component';\nimport { BmbTagComponent } from '../bmb-tags/bmb-tags.component';\n\n@Component({\n  selector: 'bmb-dropdown',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbLoaderComponent,\n    ReactiveFormsModule,\n    BmbTagComponent,\n  ],\n  templateUrl: './bmb-dropdown.component.html',\n  styleUrl: './bmb-dropdown.component.scss',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => BmbDropdownComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => BmbDropdownComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbDropdownComponent\n  implements AfterViewInit, ControlValueAccessor, OnChanges, OnInit\n{\n  @Input() required?: boolean;\n  @Input() showIcon?: boolean = false;\n  @Input() placeholder?: string = '';\n  @Input() icon?: string = '';\n  @Input() options?: string[] = [];\n  @Input() helperText?: string = '';\n  @Input() formControl?: FormControl | undefined;\n  @Input() disabled?: boolean = false;\n  @Input() label?: string;\n  @Input() type?: 'default' | 'autocomplete' = 'default';\n\n  @Output() onValueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @ViewChild('inputWrapper', { read: ElementRef, static: false })\n  inputWrapper: ElementRef | undefined;\n\n  @ViewChild('filterDropdown') filterField: ElementRef | null = null;\n\n  @ViewChild('input', { static: false })\n  input: NgModel | undefined;\n\n  private childNodes: any = null;\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent) {\n    if (!this.childNodes?.contains(event.target)) {\n      this.openSelect = false;\n      this.isFocus = this.isFocus == false ? false : true;\n    }\n  }\n\n  isFocus: boolean = false;\n  selectedIndexOption?: number;\n  selectedOption?: any;\n\n  multipleOptions?: string[] = [];\n\n  uid: string = Date.now().toString(36) + (Math.floor(Math.random() * 90) + 10);\n  filterControl = new FormControl();\n  filteredData: string[] = [];\n\n  value: string = '';\n  openSelect: boolean = false;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit(): void {\n    if (this.formControl === undefined) {\n      this.formControl = new FormControl();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.childNodes = this.elementRef.nativeElement;\n    if (this.disabled && this.formControl) {\n      this.formControl.disable();\n    } else if (this.disabled && !this.formControl) {\n      this.input?.disabled;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.formControl && changes?.['disabled'] !== undefined) {\n      if (this.formControl.disabled !== changes?.['disabled']?.currentValue) {\n        changes?.['disabled']?.currentValue\n          ? this.formControl.disable()\n          : this.formControl.enable();\n      }\n    }\n  }\n\n  handleItemClick(event: string, index: any): void {\n    if (this.type == 'autocomplete') {\n      let found = this.multipleOptions?.find((element) => element == event);\n      if (found === undefined) {\n        this.multipleOptions?.push(event);\n        this.onValueChange.emit(this.multipleOptions);\n        if (this.formControl) {\n          this.formControl.setValue(this.multipleOptions);\n        }\n      }\n    } else {\n      this.onValueChange.emit(event);\n      this.selectedIndexOption = index;\n      this.selectedOption = event;\n      if (this.formControl) {\n        this.formControl.setValue(event);\n      }\n    }\n\n    this.isFocus = !this.isFocus;\n    this.openSelect = false;\n  }\n\n  openDialog() {\n    this.openSelect = !this.openSelect;\n    this.isFocus = !this.isFocus;\n  }\n\n  onParentClick() {\n    if (this.openSelect) {\n      this.isFocus = !this.isFocus;\n    }\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    if (\n      ['Enter', ' ', 'ArrowDown', 'Down', 'ArrowUp', 'Up'].indexOf(event.key) >\n      -1\n    ) {\n      if (!this.openSelect) {\n        this.openDialog();\n      }\n\n      if (!this.options!.length) {\n        event.preventDefault();\n        return;\n      }\n    }\n  }\n\n  deleteTag(index: number) {\n    this.multipleOptions?.splice(index, 1);\n    this.onValueChange.emit(this.multipleOptions);\n    if (this.formControl) {\n      this.formControl.setValue(this.multipleOptions);\n    }\n  }\n\n  public onChangeFn = (_: any) => {};\n\n  public onTouchedFn = () => {};\n\n  public registerOnChange(fn: any): void {\n    this.onChangeFn = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onTouchedFn = fn;\n  }\n\n  public writeValue(obj: any): void {\n    this.value = obj;\n  }\n\n  public onTouched() {\n    this.onTouchedFn();\n  }\n\n  public onChange() {\n    this.onChangeFn(this.value);\n  }\n}\n",
            "styleUrl": "./bmb-dropdown.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 103,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit",
                "ControlValueAccessor",
                "OnChanges",
                "OnInit"
            ],
            "templateData": "<section class=\"bmb_dropdown\">\n  <div class=\"bmb_dropdown-wrapper\">\n    <div class=\"bmb_dropdown-label\">\n      @if (label) {\n        <label class=\"bmb_dropdown-label-text\"\n          >{{ this.label }}\n          @if (required) {\n            <span class=\"bmb_dropdown-label-asterisk\"> *</span>\n          }\n        </label>\n      }\n    </div>\n    <div\n      class=\"bmb_dropdown-input-wrapper\"\n      onkeypress=\"\"\n      #inputWrapper\n      [ngClass]=\"{ 'bmb_dropdown-focus': isFocus }\"\n    >\n      @if (showIcon) {\n        <label class=\"bmb_dropdown-label-icon\" [for]=\"'dropdown-'\">\n          <bmb-icon [icon]=\"icon!\" />\n        </label>\n      }\n      @if (type == \"default\") {\n        <input\n          class=\"bmb_dropdown-field-input\"\n          type=\"text\"\n          readonly\n          [id]=\"'bmb-dropdown' + uid\"\n          [name]=\"'bmb-dropdown' + uid\"\n          [formControl]=\"formControl!\"\n          [placeholder]=\"placeholder\"\n          (keydown)=\"onKeyDown($event)\"\n          (click)=\"openDialog()\"\n        />\n      } @else if (type == \"autocomplete\") {\n        <div\n          class=\"bmb_dropdown-autocomplete\"\n          (click)=\"openDialog()\"\n          onkeypress=\"\"\n        >\n          @for (options of multipleOptions; track $index) {\n            <div class=\"bmb_dropdown-autocomplete-tag\">\n              <span class=\"bmb_dropdown-autocomplete-tag-text\">{{\n                options\n              }}</span>\n              <button\n                class=\"bmb_dropdown-autocomplete-tag-btn\"\n                (click)=\"deleteTag($index)\"\n              >\n                <bmb-icon [icon]=\"'close'\" />\n              </button>\n            </div>\n          }\n        </div>\n      }\n\n      <button\n        class=\"bmb_dropdown-field-open\"\n        [disabled]=\"disabled\"\n        bmbButton\n        (click)=\"openDialog()\"\n      >\n        <bmb-icon icon=\"keyboard_arrow_down\" />\n      </button>\n    </div>\n    @if (helperText !== undefined) {\n      <div class=\"bmb_dropdown-helper\">\n        <span class=\"bmb_dropdown-helper-text\">\n          {{ helperText }}\n        </span>\n      </div>\n    }\n  </div>\n  <dialog\n    class=\"bmb_dropdown-dialog\"\n    [ngClass]=\"{ 'bmb_dropdown-dialog-open': this.openSelect }\"\n  >\n    @if (false) {\n      <bmb-loader />\n    } @else {\n      <ul class=\"bmb_dropdown-dialog-list\">\n        @for (item of options; track $index) {\n          <li class=\"bmb_dropdown-dialog-list-item\">\n            <button\n              class=\"bmb_dropdown-dialog-list-item-button\"\n              [ngClass]=\"{ 'bmb-hover': $index == this.selectedIndexOption }\"\n              [ngClass]=\"{ 'bmb-hover': this.multipleOptions?.includes(item) }\"\n              (click)=\"handleItemClick(item, $index)\"\n            >\n              <bmb-icon\n                class=\"bmb_dropdown-dialog-list-item-button-icon\"\n                [icon]=\"icon!\"\n              />\n              {{ item }}\n            </button>\n          </li>\n        }\n      </ul>\n    }\n  </dialog>\n</section>\n"
        },
        {
            "name": "BmbFabComponent",
            "id": "component-BmbFabComponent-57243527fc4bd8af250fb5da7a54b163164e87a709a24528197a25e583b508d43ad0235673bff4e9bd5298756d357ce0acce220b2378902104bafee37e8ecbcf",
            "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-fab",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-fab.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "mitec",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "FabSize",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "FabType",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "fabClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "closeIcon",
                    "defaultValue": "'close'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "fabStyle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFabClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "setStyles",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { FabSize, FabType } from './bmb-fab-.interface';\n\n@Component({\n  selector: 'bmb-fab',\n  styleUrl: './bmb-fab.component.scss',\n  templateUrl: './bmb-fab.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbFabComponent {\n  @Input() icon = '';\n  @Input() text?: string | null = '';\n  @Input() size?: FabSize;\n  @Input() type?: FabType;\n  @Input() mitec?: boolean = false;\n\n  @Output() fabClick = new EventEmitter<void>();\n\n  active: boolean = false;\n  closeIcon = 'close';\n  fabStyle = '';\n\n  @HostListener('click') onFabClick() {\n    if (this.type == 'normal') {\n      this.active = !this.active;\n    }\n    this.fabClick.emit();\n  }\n\n  ngOnInit() {\n    this.fabStyle = this.setStyles();\n  }\n\n  setStyles() {\n    let style = !this.mitec ? 'bmb_fab' : 'bmb_fab-mitec';\n\n    if (this.size == 'small') {\n      style = `${style}-small`;\n    } else {\n      style = `${style}-large`;\n    }\n\n    if (this.type === 'extended' && !this.mitec) {\n      style = `${style}-extended`;\n    } else {\n      style = `${style}-normal`;\n    }\n    return style;\n  }\n}\n",
            "styleUrl": "./bmb-fab.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"bmb_fab\">\n  @if (!mitec) {\n    <button [ngClass]=\"this.fabStyle\" type=\"button\">\n      @if (type == \"extended\") {\n        <span>{{ text }}</span>\n      }\n      <bmb-icon *ngIf=\"!active\" icon=\"{{ icon }}\" />\n      <bmb-icon *ngIf=\"type == 'normal' && active\" icon=\"close\" />\n    </button>\n  } @else {\n    <section class=\"bmb_fab-mitec\">\n      <button [ngClass]=\"this.fabStyle\" type=\"button\">\n        <bmb-icon icon=\"{{ icon }}\" />\n      </button>\n      @if (text) {\n        <span class=\"bmb_fab-mitec-text\">{{ text }}</span>\n      }\n    </section>\n  }\n</section>\n"
        },
        {
            "name": "BmbFocusElementComponent",
            "id": "component-BmbFocusElementComponent-d8f03a34ad06b55c0e20884eb908e7597f7e8f60ff9fd65e71a6a9d2eb172031400d8b48531151db82cc8094747ca86e1efc2c6a32f3db1d97e39d794a6e9cb6",
            "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-focus-element",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-focus-element.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isNormal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "number",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "icon",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "isNormal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "number",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "getCircleClass",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  input,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-focus-element',\n  styleUrl: './bmb-focus-element.component.scss',\n  templateUrl: './bmb-focus-element.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbFocusElementComponent {\n  icon = input<string>('');\n  number = input<number>(0);\n  title = input<string>('');\n  isNormal = input<boolean>();\n\n  getCircleClass(): string {\n    if (this.isNormal()) return 'bmb_focus_element-circle_normal';\n    return 'bmb_focus_element-circle_focused';\n  }\n}\n",
            "styleUrl": "./bmb-focus-element.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb_focus_element\">\n  <div [ngClass]=\"getCircleClass()\">\n    @if (icon() && !number()) {\n      <bmb-icon class=\"bmb_focus_element-icon\" icon=\"{{ icon() }}\" />\n    }\n    @if (number() && !icon()) {\n      <span class=\"bmb_focus_element-number\">{{ number() }}</span>\n    }\n  </div>\n  @if (title()) {\n    <p class=\"bmb_focus_element-title\">{{ title() }}</p>\n  }\n</div>\n"
        },
        {
            "name": "BmbFrequentAppsSelectorComponent",
            "id": "component-BmbFrequentAppsSelectorComponent-dc7cb488efdf285b047e42bd3b09c7159b150ccd70c1ccea4e94c70bc7117365d78fac141d9220f22359e7dfe519e4bbbc4127628000ae2123d70baf84e3ce9c",
            "file": "projects/ds-ng/src/lib/components/bmb-frequent-apps-selector/bmb-frequent-apps-selector.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-frequent-apps-selector",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-frequent-apps-selector.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apps",
                    "defaultValue": "input<IBmbApp[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "layout",
                    "defaultValue": "input<IBmbInteractiveIconType>('regular')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "title",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "getClassesFAC",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbContainerComponent",
                    "type": "component"
                },
                {
                    "name": "BmbInteractiveIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  input,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbContainerComponent } from '../bmb-container/bmb-container.component';\nimport {\n  BmbInteractiveIconComponent,\n  IBmbInteractiveIconType,\n} from '../bmb-interactive-icon/bmb-interactive-icon.component';\nimport { IBmbApp } from '../../types';\n\n@Component({\n  selector: 'bmb-frequent-apps-selector',\n  styleUrl: './bmb-frequent-apps-selector.component.scss',\n  templateUrl: './bmb-frequent-apps-selector.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbContainerComponent, BmbInteractiveIconComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbFrequentAppsSelectorComponent {\n  title = input<string>('');\n  apps = input<IBmbApp[]>([]);\n  layout = input<IBmbInteractiveIconType>('regular');\n\n  getClassesFAC(): string[] {\n    return [\n      'bmb_frequent_apps-container',\n      `bmb_frequent_apps-container-${this.layout()}`,\n    ];\n  }\n}\n",
            "styleUrl": "./bmb-frequent-apps-selector.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<bmb-container [appearance]=\"'primary-home'\" class=\"bmb_frequent_apps\">\n  <p class=\"bmb_frequent_apps-title\">{{ title() }}</p>\n  <div #container [ngClass]=\"getClassesFAC()\">\n    @for (app of apps(); track $index) {\n      <bmb-interactive-icon\n        [icon]=\"app.icon\"\n        [title]=\"app.title\"\n        [link]=\"app.link ?? '#'\"\n        [target]=\"app.target ?? '_self'\"\n        [appearance]=\"app.appearance\"\n        [layout]=\"layout()\"\n      />\n    }\n  </div>\n</bmb-container>\n"
        },
        {
            "name": "BmbGradesComponent",
            "id": "component-BmbGradesComponent-df46a8f9e7402f616ef099a362c167bb98227c91b233061d7e7311eb3fa1d20a4424b3d00b2c8834fcdda2fc15a42b47061f969484e27124b0b69d50006ed4eb",
            "file": "projects/ds-ng/src/lib/components/bmb-grades/bmb-grades.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-grades",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-grades.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "closeGrades",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "closeGrades",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "required": false
                },
                {
                    "name": "detailContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": true,
                    "description": "",
                    "line": 58,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'detailContent', {read: TemplateRef}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "gradeIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "grades",
                    "defaultValue": "input.required<IBmbGrades[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "modalContent",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any> | null",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "partials",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IBmbPartial[]",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "periodIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "showPrincipalDetail",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "methodsClass": [
                {
                    "name": "getAccreditedClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCalendarIcon",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getDetailScore",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDetailSubtitle",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDetailTitle",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getElements",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getGradesTitle",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPeriodAverage",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getServiceHours",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTitle",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleDetails",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleLeftGradesClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleLeftPeriodClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleRightGradesClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleRightPeriodClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModalComponent",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbHeaderMobileComponent",
                    "type": "component"
                },
                {
                    "name": "BmbChevronTitleSelectorComponent",
                    "type": "component"
                },
                {
                    "name": "BmbContainerComponent",
                    "type": "component"
                },
                {
                    "name": "BmbContainerButtonComponent",
                    "type": "component"
                },
                {
                    "name": "BmbModalComponent",
                    "type": "component"
                },
                {
                    "name": "BmbDividerComponent",
                    "type": "component"
                },
                {
                    "name": "BmbFocusElementComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLayoutDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbLayoutItemDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbGradeValueComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  output,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbHeaderMobileComponent } from '../bmb-header-mobile/bmb-header-mobile.component';\nimport { BmbChevronTitleSelectorComponent } from '../bmb-chevron-title-selector/bmb-chevron-title-selector.component';\nimport { BmbContainerButtonComponent } from '../bmb-container-button/bmb-container-button.component';\nimport { BmbDividerComponent } from '../bmb-divider/bmb-divider.component';\nimport { BmbModalComponent } from '../bmb-modal/bmb-modal.component';\nimport { ModalDataConfig } from '../bmb-modal/bmb-modal.interface';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BmbFocusElementComponent } from '../bmb-focus-element/bmb-focus-element.component';\nimport { BmbLayoutItemDirective } from '../../directives/bmb-layout/bmb-layout-item.directive';\nimport { BmbLayoutDirective } from '../../directives/bmb-layout/bmb-layout.directive';\nimport { BmbContainerComponent } from '../bmb-container/bmb-container.component';\nimport { IBmbGrades, IBmbPartial } from './types';\nimport { CommonModule } from '@angular/common';\nimport { BmbGradeValueComponent } from '../bmb-grade-value/bmb-grade-value.component';\n\n@Component({\n  selector: 'bmb-grades',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbHeaderMobileComponent,\n    BmbChevronTitleSelectorComponent,\n    BmbContainerComponent,\n    BmbContainerButtonComponent,\n    BmbModalComponent,\n    BmbDividerComponent,\n    BmbFocusElementComponent,\n    BmbLayoutDirective,\n    BmbLayoutItemDirective,\n    BmbGradeValueComponent,\n  ],\n  templateUrl: './bmb-grades.component.html',\n  styleUrl: './bmb-grades.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbGradesComponent {\n  grades = input.required<IBmbGrades[]>();\n\n  closeGrades = output();\n\n  showPrincipalDetail: boolean = false;\n  partials!: IBmbPartial[];\n  gradeIndex: number = 0;\n  periodIndex: number = 0;\n  modalContent: TemplateRef<any> | null = null;\n\n  @ViewChild('detailContent', { read: TemplateRef })\n  detailContent?: TemplateRef<any>;\n\n  ngAfterViewInit(): void {\n    if (this.detailContent) {\n      this.modalContent = this.detailContent;\n    }\n  }\n\n  constructor(private matDialog: MatDialog) {}\n\n  openModalComponent(element: any): void {\n    this.partials = element.partials;\n    const data: ModalDataConfig = {\n      title: element.detail.title,\n      subtitle: element.detail.subtitle,\n      content: this.modalContent,\n      size: 'large',\n      type: 'informative',\n      alertStyle: 'event',\n    };\n    this.matDialog.open(BmbModalComponent, { data });\n  }\n\n  getGradesTitle(): string {\n    return this.grades()[this.gradeIndex].title;\n  }\n\n  getTitle(): string {\n    const period = this.grades()[this.gradeIndex].periods[this.periodIndex];\n    if (this.showPrincipalDetail) return period.detail.title;\n    return this.grades()[this.gradeIndex].subtitle;\n  }\n\n  getCalendarIcon(): string {\n    if (this.showPrincipalDetail) return 'calendar_month';\n    return 'calendar_today';\n  }\n\n  getAccreditedClasses(): number {\n    const period = this.grades()[this.gradeIndex].periods[this.periodIndex];\n    if (this.showPrincipalDetail) return period.accreditedClasses;\n    return 0;\n  }\n\n  getPeriodAverage(): number {\n    const period = this.grades()[this.gradeIndex].periods[this.periodIndex];\n    if (this.showPrincipalDetail) return period.periodAverage;\n    return 0;\n  }\n\n  getServiceHours(): number {\n    const period = this.grades()[this.gradeIndex].periods[this.periodIndex];\n    if (this.showPrincipalDetail) return period.serviceHours;\n    return 0;\n  }\n\n  getDetailTitle(element: any): string {\n    return element.detail.title;\n  }\n\n  getDetailSubtitle(element: any): string {\n    return element.detail.subtitle;\n  }\n\n  getDetailScore(element: any): string {\n    return element.detail.score;\n  }\n\n  getElements(): any {\n    const periods = this.grades()[this.gradeIndex].periods;\n    if (this.showPrincipalDetail) return periods[this.periodIndex].classes;\n    return periods;\n  }\n\n  handleLeftGradesClick(event: any): void {\n    this.closeGrades.emit(event);\n  }\n\n  handleRightGradesClick(): void {\n    this.showPrincipalDetail = false;\n  }\n\n  handleLeftPeriodClick(): void {\n    if (this.showPrincipalDetail) {\n      if (this.periodIndex) {\n        this.periodIndex = this.periodIndex - 1;\n      }\n      return;\n    }\n\n    if (this.gradeIndex) {\n      this.gradeIndex = this.gradeIndex - 1;\n    }\n  }\n\n  handleRightPeriodClick(): void {\n    if (this.showPrincipalDetail) {\n      if (\n        this.periodIndex + 1 <\n        this.grades()[this.gradeIndex].periods.length\n      ) {\n        this.periodIndex = this.periodIndex + 1;\n      }\n      return;\n    }\n\n    if (this.gradeIndex + 1 < this.grades().length) {\n      this.gradeIndex = this.gradeIndex + 1;\n    }\n  }\n\n  handleDetails(element: any): void {\n    if (this.showPrincipalDetail) {\n      this.openModalComponent(element);\n      return;\n    }\n\n    if (!this.showPrincipalDetail) {\n      this.showPrincipalDetail = true;\n      this.periodIndex = this.grades()[this.gradeIndex].periods.findIndex(\n        (period) => period.detail.title === element.detail.title,\n      );\n    }\n  }\n}\n",
            "styleUrl": "./bmb-grades.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 64,
                "jsdoctags": [
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<ng-template #detailContent>\n  <section *ngFor=\"let partial of partials\">\n    <section bmbLayout margin=\"none\" justify=\"spaceAround\">\n      <span class=\"bmb_grades-title\" bmbLayoutItem [colSm]=\"8\">{{\n        partial.title\n      }}</span>\n      <bmb-grade-value\n        [score]=\"partial.score\"\n        type=\"partial-grade\"\n        bmbLayoutItem\n        [colSm]=\"4\"\n      />\n    </section>\n    <bmb-divider [type]=\"'simple'\" />\n  </section>\n</ng-template>\n\n<section class=\"bmb_grades\">\n  <bmb-header-mobile\n    [text]=\"getGradesTitle()\"\n    iconLeft=\"close\"\n    [iconRight]=\"getCalendarIcon()\"\n    (onIconLeftClick)=\"handleLeftGradesClick($event)\"\n    (onIconRightClick)=\"handleRightGradesClick()\"\n  >\n    <bmb-chevron-title-selector\n      [title]=\"getTitle()\"\n      (onLeadingClick)=\"handleLeftPeriodClick()\"\n      (onTrailingClick)=\"handleRightPeriodClick()\"\n    ></bmb-chevron-title-selector>\n    <bmb-container [isHidden]=\"!showPrincipalDetail\">\n      <section bmbLayout margin=\"none\" justify=\"spaceAround\">\n        <section bmbLayoutItem [colSm]=\"4\">\n          <bmb-focus-element\n            [number]=\"getAccreditedClasses()\"\n            title=\"Materias Acreditadas\"\n            [isNormal]=\"true\"\n          />\n        </section>\n        <section bmbLayoutItem [colSm]=\"4\">\n          <bmb-focus-element\n            [number]=\"getPeriodAverage()\"\n            title=\"Promedio Semestre\"\n          />\n        </section>\n        <section bmbLayoutItem [colSm]=\"4\">\n          <bmb-focus-element\n            [number]=\"getServiceHours()\"\n            title=\"Horas Servicio\"\n            [isNormal]=\"true\"\n          />\n        </section>\n      </section>\n    </bmb-container>\n  </bmb-header-mobile>\n  <ng-container *ngFor=\"let element of getElements()\">\n    <bmb-container-button\n      [title]=\"getDetailTitle(element)\"\n      [subtitle]=\"getDetailSubtitle(element)\"\n      [score]=\"getDetailScore(element)\"\n      iconLeft=\"chevron_left\"\n      iconRight=\"chevron_right\"\n      [setButtonTemplate]=\"true\"\n      (onButton)=\"handleDetails(element)\"\n    />\n  </ng-container>\n</section>\n"
        },
        {
            "name": "BmbGradeValueComponent",
            "id": "component-BmbGradeValueComponent-9508e3bae395c3777d12f691b65cf157f2f9e38c5202bcd11deaa46d61860c490f387b3c41b0db169a9fe0d354cb2012186981206d62710294cc68c37c35bcc8",
            "file": "projects/ds-ng/src/lib/components/bmb-grade-value/bmb-grade-value.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-grade-value",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-grade-value.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "score",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number | undefined",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'main-grade'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"main-grade\" | \"partial-grade\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\n\n@Component({\n  selector: 'bmb-grade-value',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-grade-value.component.html',\n  styleUrl: './bmb-grade-value.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbGradeValueComponent {\n  @Input() type: 'main-grade' | 'partial-grade' = 'main-grade';\n  @Input() score: number | undefined = 0;\n}\n",
            "styleUrl": "./bmb-grade-value.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb-grade-value\">\n  @if (type === \"main-grade\") {\n    <svg\n      class=\"bmb_grade-value-main\"\n      fill=\"#ffffff\"\n      version=\"1.1\"\n      id=\"Capa_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      height=\"58px\"\n      width=\"50px\"\n      transform=\"rotate(90)\"\n      viewBox=\"0 0 485.688 485.688\"\n      xml:space=\"preserve\"\n    >\n      <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\n      <g\n        id=\"SVGRepo_tracerCarrier\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      ></g>\n      <g id=\"SVGRepo_iconCarrier\">\n        <g>\n          <g>\n            <path\n              d=\"M364.269,453.155H121.416L0,242.844L121.416,32.533h242.853l121.419,210.312L364.269,453.155z M131.905,434.997h221.878 l110.939-192.152L353.783,50.691H131.905L20.966,242.844L131.905,434.997z\"\n            ></path>\n            <text\n              alignment-baseline=\"baseline\"\n              [attr.text-anchor]=\"'middle'\"\n              transform=\"rotate(270,240,240)\"\n            >\n              <tspan\n                class=\"bmb_grade-value-main-score\"\n                [attr.x]=\"250\"\n                [attr.y]=\"300\"\n              >\n                {{ score }}\n              </tspan>\n            </text>\n          </g>\n        </g>\n      </g>\n    </svg>\n  } @else {\n    <div class=\"bmb_grade-value-partial\">\n      <span class=\"bmb_grade-value-partial-score\">\n        {{ score }}\n      </span>\n    </div>\n  }\n</div>\n"
        },
        {
            "name": "BmbHeaderMobileComponent",
            "id": "component-BmbHeaderMobileComponent-463f4f1d5e24a712f56666a4fc0c8e5539c1c4bb9ace8b37408b58784079808b1b8419044760e22a72d7ae63ba10969a08cf16727d567bb84eed38113018680c",
            "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-header-mobile",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-header-mobile.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "onIconLeftClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "required": false
                },
                {
                    "name": "onIconRight2Click",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "required": false
                },
                {
                    "name": "onIconRightClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "altLogo",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "iconLeft",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "iconRight",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "iconRight2",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "logo",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "logoLink",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "logoTarget",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "onIconLeftClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "required": false
                },
                {
                    "name": "onIconRight2Click",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "required": false
                },
                {
                    "name": "onIconRightClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "required": false
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": true
                },
                {
                    "name": "userAltImage",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "userImage",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "userLink",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "userTarget",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methodsClass": [
                {
                    "name": "handleIconLeftClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleIconRight2Click",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleIconRightClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLogoComponent",
                    "type": "component"
                },
                {
                    "name": "BmbContainerComponent",
                    "type": "component"
                },
                {
                    "name": "BmbUserImageComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  input,\n  output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbContainerComponent } from '../bmb-container/bmb-container.component';\nimport { BmbLogoComponent } from '../bmb-logo/bmb-logo.component';\nimport { BmbUserImageComponent } from '../bmb-user-image/bmb-user-image.component';\n@Component({\n  selector: 'bmb-header-mobile',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbLogoComponent,\n    BmbContainerComponent,\n    BmbUserImageComponent,\n  ],\n  styleUrl: './bmb-header-mobile.component.scss',\n  templateUrl: './bmb-header-mobile.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbHeaderMobileComponent {\n  text = input.required<string>();\n\n  userImage = input<string>('');\n  userAltImage = input<string>('');\n  userLink = input<string>('');\n  userTarget = input<string>('');\n\n  logo = input<string>('');\n  altLogo = input<string>('');\n  logoLink = input<string>('');\n  logoTarget = input<string>('');\n\n  iconLeft = input<string>('');\n  iconRight = input<string>('');\n  iconRight2 = input<string>('');\n\n  // Event handlers\n  onIconLeftClick = output();\n  onIconRightClick = output();\n  onIconRight2Click = output();\n\n  handleIconLeftClick(event: any): void {\n    this.onIconLeftClick.emit(event);\n  }\n\n  handleIconRightClick(event: any): void {\n    this.onIconRightClick.emit(event);\n  }\n\n  handleIconRight2Click(event: any): void {\n    this.onIconRight2Click.emit(event);\n  }\n}\n",
            "styleUrl": "./bmb-header-mobile.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb_header_mobile\">\n  <bmb-container\n    appearance=\"primary-header\"\n    class=\"bmb_header_mobile-container\"\n  >\n    <div class=\"bmb_header_mobile-left\">\n      <bmb-logo\n        size=\"small\"\n        [image]=\"logo()\"\n        [altImage]=\"altLogo()\"\n        [link]=\"logoLink()\"\n        [target]=\"logoTarget()\"\n        *ngIf=\"logo() && !iconLeft()\"\n      />\n      <button *ngIf=\"iconLeft()\" (click)=\"handleIconLeftClick($event)\">\n        <bmb-icon [icon]=\"iconLeft()\" />\n      </button>\n    </div>\n    <span class=\"bmb_header_mobile-text\">{{ text() }}</span>\n    <div class=\"bmb_header_mobile-right\">\n      <button\n        *ngIf=\"iconRight() && !userImage()\"\n        (click)=\"handleIconRightClick($event)\"\n      >\n        <bmb-icon [icon]=\"iconRight()\" />\n      </button>\n      <button\n        *ngIf=\"iconRight2() && !userImage()\"\n        (click)=\"handleIconRight2Click($event)\"\n      >\n        <bmb-icon [icon]=\"iconRight2()\" />\n      </button>\n      <bmb-user-image\n        size=\"mobile-small\"\n        [image]=\"userImage()\"\n        [altImage]=\"userAltImage()\"\n        [link]=\"userLink()\"\n        [target]=\"userTarget()\"\n        *ngIf=\"userImage()\"\n      />\n    </div>\n    <section class=\"bmb_header_mobile-content\">\n      <ng-content />\n    </section>\n  </bmb-container>\n</div>\n"
        },
        {
            "name": "BmbHomeCardChatComponent",
            "id": "component-BmbHomeCardChatComponent-1766419be4ef77caedfa7e480a55a53754533e84a7639359b7ee3ad1b14b89ce663a53fc62a1f0af7a28d2ea0a2b758ea72d83fb7bc14baebf137096daf244c7",
            "file": "projects/ds-ng/src/lib/components/bmb-home-card-chat/bmb-home-card-chat.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-home-card-chat",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-home-card-chat.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "currentBot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "required": false
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "required": false
                },
                {
                    "name": "isMobile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "required": false
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "onBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "required": false
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "required": false
                },
                {
                    "name": "onSendMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "botList",
                    "defaultValue": "input<IBotType[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "currentBot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "required": false
                },
                {
                    "name": "icon",
                    "defaultValue": "input<string>('smart_toy')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "required": false
                },
                {
                    "name": "isMobile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "required": false
                },
                {
                    "name": "onBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "required": false
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "required": false
                },
                {
                    "name": "onSendMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "required": false
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                },
                {
                    "name": "subtitle",
                    "defaultValue": "input<string>('Chat')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "title",
                    "defaultValue": "input<string>('Asistente TecBot')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "handleBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleSend",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbHomeCardComponent",
                    "type": "component"
                },
                {
                    "name": "BmbChatBarComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  model,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbHomeCardComponent } from '../bmb-home-card/bmb-home-card.component';\nimport {\n  BmbChatBarComponent,\n  IBotType,\n} from '../bmb-chat-bar/bmb-chat-bar.component';\n\n@Component({\n  selector: 'bmb-home-card-chat',\n  standalone: true,\n  imports: [BmbHomeCardComponent, BmbChatBarComponent],\n  templateUrl: './bmb-home-card-chat.component.html',\n  styleUrl: './bmb-home-card-chat.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbHomeCardChatComponent {\n  title = input<string>('Asistente TecBot');\n  subtitle = input<string>('Chat');\n  icon = input<string>('smart_toy');\n  isMobile = input<boolean>();\n  placeholder = input<string>();\n  botList = input<IBotType[]>();\n\n  currentBot = model<IBotType>();\n  isLoading = model<boolean>();\n\n  onClose = output();\n  onBack = output();\n  onSendMessage = output<string>();\n\n  handleClose(): void {\n    this.onClose.emit();\n  }\n\n  handleBack(): void {\n    this.onBack.emit();\n  }\n\n  handleSend(message: string): void {\n    this.onSendMessage.emit(message);\n  }\n}\n",
            "styleUrl": "./bmb-home-card-chat.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section>\n  <bmb-home-card\n    [title]=\"title()\"\n    [subtitle]=\"subtitle()\"\n    [icon]=\"icon()\"\n    [isMobile]=\"isMobile()\"\n    (onClose)=\"handleClose()\"\n    (onBack)=\"handleBack()\"\n  >\n    <div>\n      <ng-content />\n    </div>\n    <bmb-chat-bar\n      [placeholder]=\"placeholder()\"\n      [botList]=\"botList()\"\n      [(currentBot)]=\"currentBot\"\n      [(isLoading)]=\"isLoading\"\n      (onSendMessage)=\"handleSend($event)\"\n    ></bmb-chat-bar>\n  </bmb-home-card>\n</section>\n"
        },
        {
            "name": "BmbHomeCardComponent",
            "id": "component-BmbHomeCardComponent-b1df4fd494ba8ac8618405408bf6cfb2fde0e4e796c3364aec1db49c1f73a5d708935b0ee38a376f7d9371e45e74fb59c2cceb4ae08c45ccf614bd6f73cac9c6",
            "file": "projects/ds-ng/src/lib/components/bmb-home-card/bmb-home-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-home-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-home-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": false
                },
                {
                    "name": "isMobile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "onBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": false
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": false
                },
                {
                    "name": "isMobile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "onBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": false
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "required": true
                }
            ],
            "methodsClass": [
                {
                    "name": "handleBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbHomeCardHeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbHomeCardHeaderComponent } from './bmb-home-card-header/bmb-home-card-header.component';\n\n@Component({\n  selector: 'bmb-home-card',\n  standalone: true,\n  imports: [BmbHomeCardHeaderComponent],\n  templateUrl: './bmb-home-card.component.html',\n  styleUrl: './bmb-home-card.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbHomeCardComponent {\n  title = input.required<string>();\n  subtitle = input<string>();\n  icon = input<string>();\n  isMobile = input<boolean>();\n\n  onClose = output();\n  onBack = output();\n\n  handleClose(): void {\n    this.onClose.emit();\n  }\n\n  handleBack(): void {\n    this.onBack.emit();\n  }\n}\n",
            "styleUrl": "./bmb-home-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"bmb_home-card\">\n  <bmb-home-card-header\n    [title]=\"title()\"\n    [subtitle]=\"subtitle()\"\n    [icon]=\"icon()\"\n    [isMobile]=\"isMobile()\"\n    (onClose)=\"handleClose()\"\n    (onBack)=\"handleBack()\"\n  />\n  <div class=\"bmb_home-card-container\">\n    <ng-content />\n  </div>\n</section>\n"
        },
        {
            "name": "BmbHomeCardHeaderComponent",
            "id": "component-BmbHomeCardHeaderComponent-cee3029bf7f67813d8843fb4bcfe44dd541f450390ea62e294d3f6ff658938fa48e560710d8c4d05c1980e191c4b3fa1b248f5c946f40137951c020c4a342558",
            "file": "projects/ds-ng/src/lib/components/bmb-home-card/bmb-home-card-header/bmb-home-card-header.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-home-card-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-home-card-header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "isMobile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "onBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": false
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "isMobile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false
                },
                {
                    "name": "onBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": false
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": false
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "required": true
                }
            ],
            "methodsClass": [
                {
                    "name": "getBehaviorIconName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getIconName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleExpandChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbIconComponent } from '../../bmb-icon/bmb-icon.component';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-home-card-header',\n  standalone: true,\n  imports: [BmbIconComponent, CommonModule],\n  templateUrl: './bmb-home-card-header.component.html',\n  styleUrl: './bmb-home-card-header.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbHomeCardHeaderComponent {\n  title = input.required<string>();\n  subtitle = input<string>();\n  icon = input<string>();\n  isMobile = input<boolean>();\n\n  onClose = output();\n  onBack = output();\n\n  isExpanded: boolean = false;\n\n  getIconName(): string {\n    return this.icon() || '';\n  }\n\n  getBehaviorIconName(): string {\n    if (this.isMobile()) return 'close';\n    if (this.isExpanded) return 'close_fullscreen';\n\n    return 'fit_screen';\n  }\n\n  handleExpandChange(): void {\n    if (this.isMobile()) this.onClose.emit();\n    else this.isExpanded = !this.isExpanded;\n  }\n\n  handleBack(): void {\n    this.onBack.emit();\n  }\n}\n",
            "styleUrl": "./bmb-home-card-header.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<header class=\"bmb_home-card-header\">\n  @if (isExpanded) {\n    <button class=\"bmb_home-card-header-button_back\" (click)=\"handleBack()\">\n      <bmb-icon icon=\"chevron_left\" />\n    </button>\n  }\n  @if (icon() && !isMobile()) {\n    <bmb-icon class=\"bmb_home-card-header-icon\" [icon]=\"getIconName()\" />\n  }\n  <div class=\"bmb_home-card-header-align_title\">\n    <h1 class=\"bmb_home-card-header-title\">{{ title() }}</h1>\n    @if (isExpanded) {\n      <h2 class=\"bmb_home-card-header-subTitle\">{{ subtitle() }}</h2>\n    }\n  </div>\n  <button\n    class=\"bmb_home-card-header-button\"\n    [ngClass]=\"{ 'bmb_home-card-header-button-mobile': isMobile }\"\n    (click)=\"handleExpandChange()\"\n  >\n    <bmb-icon [icon]=\"getBehaviorIconName()\" />\n  </button>\n</header>\n"
        },
        {
            "name": "BmbHomeSectionComponent",
            "id": "component-BmbHomeSectionComponent-f7e6b27d1fd4d675ac417ed36601e533485d366a7b5270682da06c97d3a783dbc64ce51026aa00356bdd4cb05675f7ca8edf6524b265be9620f7e8f86d649229",
            "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-home-section",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-home-section.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "link",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "target",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbContainerComponent",
                    "type": "component"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbContainerComponent } from '../bmb-container/bmb-container.component';\n\n@Component({\n  selector: 'bmb-home-section',\n  standalone: true,\n  imports: [CommonModule, BmbContainerComponent, BmbIconComponent],\n  styleUrl: './bmb-home-section.component.scss',\n  templateUrl: './bmb-home-section.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbHomeSectionComponent {\n  @Input() title: string = '';\n  @Input() icon: string = '';\n  @Input() target: string = '';\n  @Input() link: string = '';\n\n  constructor() {}\n}\n",
            "styleUrl": "./bmb-home-section.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "extends": [],
            "templateData": "<div class=\"bmb_home_section\">\n  <bmb-container appearance=\"primary-home\">\n    <div class=\"bmb_home_section-header\">\n      <span class=\"bmb_home_section-title\">{{ title }}</span>\n      <a class=\"bmb_home_section-link\" [href]=\"link\" [target]=\"target\">\n        <bmb-icon [icon]=\"icon\" class=\"bmb_home_section-icon\" />\n      </a>\n    </div>\n    <ng-content></ng-content>\n  </bmb-container>\n</div>\n"
        },
        {
            "name": "BmbIconComponent",
            "id": "component-BmbIconComponent-b51f7a7ec9582e29454788cdbcb11d7dd2d073f67b0990c38e6e62436d0060121683e5a44b251a29fc4b969c27a63d126f6b29746bfdb6bc017f1a96f7437099",
            "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-icon.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "'face'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "materialIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'bmb-icon',\n  standalone: true,\n  templateUrl: './bmb-icon.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbIconComponent {\n  @Input() icon: string = 'face';\n  @Input() materialIcon: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@if (materialIcon) {\n  <i class=\"material-icons\">{{ icon }}</i>\n} @else {\n  <i class=\"material-symbols-outlined\">{{ icon }}</i>\n}\n"
        },
        {
            "name": "BmbInnerHeaderComponent",
            "id": "component-BmbInnerHeaderComponent-5c13b223ac492604be4bed76c6c6413e893247e269f1e3ce01c58b81ddf1d0d9f4a933e279d277c133ecbe51170fd6a2944d16a19306e7650ea65c5dd74cb589",
            "file": "projects/ds-ng/src/lib/components/bmb-inner-header/bmb-inner-header.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-inner-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-inner-header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onHandleBack",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "onValueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "showSearch",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "methodsClass": [
                {
                    "name": "handleBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleValueChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbSearchInputComponent",
                    "type": "component"
                },
                {
                    "name": "BmbTabsComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbSearchInputComponent } from '../bmb-search-input/bmb-search-input.component';\nimport { BmbTabsComponent } from '../bmb-tabs/bmb-tabs.component';\n\ninterface NavItem {\n  title: string;\n  id: string;\n  badge?: number;\n  isActive?: boolean;\n}\n\ninterface IBmbTab {\n  title: string;\n  id: number;\n  badge?: number;\n  isActive?: boolean;\n}\n\n@Component({\n  selector: 'bmb-inner-header',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbSearchInputComponent,\n    BmbTabsComponent,\n  ],\n  styleUrl: './bmb-inner-header.component.scss',\n  templateUrl: './bmb-inner-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbInnerHeaderComponent {\n  @Input() title: string = '';\n  @Input() isLoading: boolean = false;\n  @Input() data: string[] = [];\n  @Output() onHandleBack: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onValueChange: EventEmitter<string> = new EventEmitter<string>();\n\n  showSearch: boolean = false;\n\n  handleBack() {\n    this.onHandleBack.emit();\n  }\n\n  handleSearch() {\n    this.showSearch = !this.showSearch;\n  }\n\n  handleValueChange(event: string): void {\n    this.onValueChange.emit(event);\n  }\n}\n",
            "styleUrl": "./bmb-inner-header.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<header class=\"bmb_inner_header\">\n  <div class=\"bmb_inner_header-container\">\n    <ng-container *ngIf=\"!showSearch\">\n      <button class=\"bmb_inner_header-button\" (click)=\"handleBack()\">\n        <bmb-icon icon=\"arrow_back\" class=\"bmb_inner_header-icon\" />\n      </button>\n      <span class=\"bmb_inner_header-title\">{{ title }}</span>\n      <button class=\"bmb_inner_header-button\" (click)=\"handleSearch()\">\n        <bmb-icon icon=\"search\" class=\"bmb_inner_header-icon\" />\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"showSearch\">\n      <bmb-search-input\n        class=\"bmb_inner_header-search\"\n        [isLoading]=\"isLoading\"\n        [data]=\"data\"\n        (onValueChange)=\"handleValueChange($event)\"\n        (onClearField)=\"handleSearch()\"\n      ></bmb-search-input>\n    </ng-container>\n  </div>\n  <section class=\"bmb_inner_header-content\">\n    <ng-content></ng-content>\n  </section>\n</header>\n"
        },
        {
            "name": "BmbInputComponent",
            "id": "component-BmbInputComponent-5d895b21fdfa9d19b696156ee6441d9990d14b0548ece63e1aad3b1a59f2611586fb048cdc5c2fb8b7aba1c7fae431a3ba462ca853c1fbfecd0ae653293dbbb2",
            "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-input",
            "styleUrls": [
                "./bmb-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "'normal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "control",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "FormControl",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "helperMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isRequired",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pattern",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "spellcheck",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "IBbmInputType",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "isBlur",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "isFocus",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateErrorState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  OnInit,\n  ChangeDetectorRef,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\nexport type IBbmInputType = 'text' | 'password';\n\n@Component({\n  selector: 'bmb-input',\n  styleUrls: ['./bmb-input.component.scss'],\n  templateUrl: './bmb-input.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent, ReactiveFormsModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbInputComponent implements OnInit {\n  @Input() label: string = '';\n  @Input() type: IBbmInputType = 'text';\n  @Input() placeholder: string = '';\n  @Input() icon: string = '';\n  @Input() errorMessage: string = '';\n  @Input() helperMessage: string = '';\n  @Input() appearance: string = 'normal';\n  @Input() disabled: boolean = false;\n  @Input() isRequired: boolean = false;\n  @Input() showError: boolean = false;\n  @Input() control: FormControl = new FormControl();\n  @Input() name: string = '';\n  @Input() spellcheck: boolean = false;\n  @Input() maxlength!: number;\n  @Input() minlength!: number;\n  @Input() pattern!: string;\n  @Input() size!: number;\n\n  @Output() isFocus: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() isBlur: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    if (!this.control) {\n      this.control = new FormControl();\n    }\n\n    if (this.isRequired) {\n      this.control.addValidators(Validators.required);\n    }\n\n    this.control.updateValueAndValidity();\n\n    this.control.valueChanges.subscribe(() => {\n      this.updateErrorState();\n      this.cdr.markForCheck();\n    });\n  }\n\n  private updateErrorState(): void {\n    this.showError =\n      this.isRequired &&\n      this.control.invalid &&\n      (this.control.touched || this.control.dirty);\n  }\n\n  onFocus() {\n    this.isFocus.emit(true);\n  }\n\n  onBlur() {\n    this.isFocus.emit(false);\n    this.isBlur.emit(true);\n  }\n\n  get inputClasses(): { [key: string]: boolean } {\n    return {\n      ['bmb_field-input-' + this.appearance]: true,\n      'bmb_field-input-error': this.shouldShowError,\n      disabled: this.disabled,\n    };\n  }\n\n  get shouldShowError(): boolean {\n    return this.showError;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/mixins\" as mixins;\n@use \"../../../assets/styles/base/rem\" as rem;\n\n@mixin input($type: main) {\n  @include mixins.resetElement();\n  @include fonts.font(4, regular);\n  appearance: none;\n  height: rem.rem_calc(48);\n  width: 100%;\n\n  &:focus,\n  &:focus:hover,\n  &:disabled:focus {\n    @include mixins.focusElement();\n  }\n\n  @if $type == simple {\n    background-color: transparent;\n    border: 0;\n    border-bottom: rem.rem_calc(1) solid RGBA(var(--color-charade-950));\n    color: RGBA(var(--color-charade-700));\n\n    &:focus {\n      border-bottom: rem.rem_calc(2) solid RGBA(var(--color-blue-primary));\n      border-color: RGBA(var(--color-blue-primary));\n      color: RGBA(var(--color-mariner-700));\n      outline: none;\n    }\n\n    &::placeholder {\n      color: RGBA(var(--color-charade-300));\n    }\n\n    &.bmb_field-input-error {\n      border-bottom-color: RGBA(var(--color-red-primary));\n    }\n  } @else if $type == normal {\n    background-color: RGBA(var(--color-charade-50));\n    border: rem.rem_calc(1) solid RGBA(var(--color-charade-500));\n    border-radius: rem.rem_calc(8);\n    color: RGBA(var(--color-charade-950));\n    padding: var(--bmb-spacing-s);\n\n    &:focus {\n      border: rem.rem_calc(2) solid RGBA(var(--color-mariner-700));\n      outline: none;\n    }\n\n    &::placeholder {\n      color: RGBA(var(--color-charade-300));\n    }\n\n    &.bmb_field-input-error {\n      border-color: RGBA(var(--color-red-primary)) !important;\n    }\n  }\n}\n\n.bmb_field {\n  &-label {\n    color: RGBA(var(--color-charade-950));\n    display: flex;\n    margin: rem.rem_calc(2 2 4 8);\n    @include fonts.font(3, regular);\n\n    &-required {\n      color: RGBA(var(--color-red-light));\n    }\n  }\n\n  &-wrapper {\n    align-items: center;\n    display: flex;\n    position: relative;\n    width: 100%;\n  }\n\n  &-error {\n    @include fonts.font(3, regular);\n    color: RGBA(var(--color-red-light));\n    margin: rem.rem_calc(8);\n  }\n\n  &-icon {\n    color: RGBA(var(--color-charade-500));\n    font-size: rem.rem_calc(24);\n    left: rem.rem_calc(8);\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n\n    ~ .bmb_field-input {\n      padding-left: rem.rem_calc(35);\n    }\n  }\n\n  &-helper {\n    @include fonts.font(3, regular);\n    color: RGBA(var(--color-charade-950));\n    margin: rem.rem_calc(8);\n  }\n\n  &-input {\n    margin: 0;\n\n    &-normal {\n      @include input(normal);\n    }\n\n    &-simple {\n      @include input(simple);\n    }\n\n    &-main {\n      @include input(main);\n    }\n\n    &.disabled {\n      pointer-events: none;\n      opacity: 0.8;\n    }\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_field {\n    &-label {\n      color: RGBA(var(--color-charade-50));\n    }\n\n    &-input-normal {\n      background-color: RGBA(var(--color-charade-950));\n      color: RGBA(var(--color-charade-200));\n\n      &:hover {\n        border-color: RGBA(var(--color-charade-500));\n      }\n\n      &:focus {\n        border-color: RGBA(var(--color-charade-50));\n        color: RGBA(var(--color-charade-50));\n      }\n    }\n\n    &-icon {\n      color: RGBA(var(--color-charade-50));\n    }\n\n    &-helper {\n      color: RGBA(var(--color-charade-300));\n    }\n\n    &-input-simple {\n      border-bottom: rem.rem_calc(1) solid RGBA(var(--color-charade-700));\n      color: RGBA(var(--color-charade-200));\n\n      &:hover {\n        border-color: RGBA(var(--color-charade-700));\n      }\n\n      &:focus {\n        border-bottom: rem.rem_calc(2) solid RGBA(var(--color-charade-50));\n        color: RGBA(var(--color-charade-50));\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./bmb-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "inputClasses": {
                    "name": "inputClasses",
                    "getSignature": {
                        "name": "inputClasses",
                        "type": "literal type",
                        "returnType": "literal type",
                        "line": 83
                    }
                },
                "shouldShowError": {
                    "name": "shouldShowError",
                    "getSignature": {
                        "name": "shouldShowError",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 91
                    }
                }
            },
            "templateData": "<div class=\"bmb_field\" [ngClass]=\"{ disabled: disabled }\">\n  <label [for]=\"name\" class=\"bmb_field-label\" *ngIf=\"label\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"bmb_field-label-required\">*</small>\n  </label>\n  <div class=\"bmb_field-wrapper\">\n    <bmb-icon\n      *ngIf=\"icon\"\n      [icon]=\"icon\"\n      class=\"bmb_field-icon\"\n      [ngClass]=\"'bmb_field-icon-' + appearance\"\n    ></bmb-icon>\n    <input\n      [type]=\"type\"\n      class=\"bmb_field-input\"\n      [ngClass]=\"inputClasses\"\n      [required]=\"isRequired\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder ? placeholder : ''\"\n      [formControl]=\"control\"\n      (focus)=\"onFocus()\"\n      (blur)=\"onBlur()\"\n      [name]=\"name\"\n      [id]=\"name\"\n      [spellcheck]=\"spellcheck\"\n      [maxlength]=\"maxlength\"\n      [minlength]=\"minlength\"\n      [pattern]=\"pattern\"\n    />\n  </div>\n  <p class=\"bmb_field-helper\" *ngIf=\"helperMessage && !shouldShowError\">\n    {{ helperMessage }}\n  </p>\n  <p class=\"bmb_field-error\" *ngIf=\"errorMessage && shouldShowError\">\n    {{ errorMessage }}\n  </p>\n</div>\n"
        },
        {
            "name": "BmbInputPhoneNumberComponent",
            "id": "component-BmbInputPhoneNumberComponent-6552463481f726d392012628df156c7d5482700161cd58c56607133e2c52495e2f783a16f7f940e9a174dc551ed2045ac8e65333891a1eb12cc6932625a595bb",
            "file": "projects/ds-ng/src/lib/components/bmb-input-phone-number/bmb-input-phone-number.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-input-phone-number",
            "styleUrls": [
                "./bmb-input-phone-number.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-input-phone-number.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "FormControl",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isRequired",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateErrorState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "NgxMatIntlTelInputComponent",
                    "type": "component"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  OnInit,\n  ChangeDetectorRef,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {\n  FormControl,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { NgxMatIntlTelInputComponent } from 'ngx-mat-intl-tel-input';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-input-phone-number',\n  templateUrl: './bmb-input-phone-number.component.html',\n  styleUrls: ['./bmb-input-phone-number.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxMatIntlTelInputComponent,\n    BmbIconComponent,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbInputPhoneNumberComponent implements OnInit {\n  @Input() control!: FormControl;\n  @Input() disabled: boolean = false;\n  @Input() showError: boolean = false;\n  @Input() errorMessage: string = '';\n  @Input() isRequired: boolean = false;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    if (!this.control) {\n      this.control = new FormControl();\n    }\n\n    if (this.isRequired) {\n      this.control.setValidators(Validators.required);\n    } else {\n      this.control.clearValidators();\n    }\n    this.control.updateValueAndValidity();\n\n    this.control.valueChanges.subscribe(() => {\n      this.updateErrorState();\n      this.cdr.markForCheck();\n    });\n  }\n\n  private updateErrorState(): void {\n    this.showError =\n      this.isRequired &&\n      this.control.invalid &&\n      (this.control.touched || this.control.dirty);\n  }\n\n  get shouldShowError(): boolean {\n    return this.showError;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/mixins\" as mixins;\n@use \"../../../assets/styles/base/rem\" as rem;\n\n.bmb_input_number {\n  position: relative;\n\n  &-disabled {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n\n  &-error {\n    @include fonts.font(3, regular);\n    color: RGBA(var(--color-red-light));\n    margin: rem.rem_calc(8);\n  }\n\n  .ngx-mat-tel-input-container {\n    display: flex;\n    height: rem.rem_calc(48);\n    position: relative;\n    width: rem.rem_calc(342);\n\n    .country-selector {\n      align-items: center;\n      background-color: RGBA(var(--color-charade-50));\n      background-image: none;\n      border: rem.rem_calc(1) solid RGBA(var(--color-charade-300));\n      border-radius: rem.rem_calc(8 0 0 8);\n      color: RGBA(var(--color-charade-950));\n      display: flex;\n      height: 100%;\n      justify-content: flex-start;\n      line-height: rem.rem_calc(14);\n      opacity: 1;\n      padding: rem.rem_calc(0 0 0 10);\n      position: relative;\n      width: rem.rem_calc(80);\n      @include fonts.font(4, medium);\n\n      &::after {\n        @include mixins.materialIcons();\n        color: RGBA(var(--color-charade-950));\n        content: \"expand_more\";\n        font-size: rem.rem_calc(28);\n        position: absolute;\n        right: rem.rem_calc(6);\n      }\n\n      .mdc-button__label {\n        .country-selector-flag {\n          display: none;\n        }\n      }\n\n      &[aria-expanded=\"true\"] {\n        border-color: RGBA(var(--color-mariner-700));\n\n        &::after {\n          transform: rotate(180deg);\n        }\n\n        ~ .mat-mdc-input-element {\n          border-color: RGBA(var(--color-mariner-700));\n        }\n      }\n\n      &:disabled {\n        color: RGBA(var(--color-charade-700));\n\n        &::after {\n          color: RGBA(var(--color-charade-700));\n        }\n      }\n    }\n\n    .mat-mdc-input-element {\n      background-color: RGBA(var(--color-charade-50));\n      border: rem.rem_calc(1) solid RGBA(var(--color-charade-300));\n      border-left: 0;\n      border-radius: rem.rem_calc(0 8 8 0);\n      color: RGBA(var(--color-charade-950));\n      padding: rem.rem_calc(0 8);\n      position: relative;\n      @include fonts.font(4, medium);\n    }\n  }\n}\n\n.ngx-mat-tel-input-mat-menu-panel {\n  box-shadow: rem.rem_calc(0 0 8 0) RGBA(var(--color-black-primary), 0.25);\n  height: rem.rem_calc(200);\n\n  .mat-mdc-menu-content {\n    background-color: RGBA(var(--color-charade-50));\n    padding: 0;\n  }\n\n  .country-list-button {\n    &:not([disabled]):hover,\n    &:not([disabled]):focus {\n      background-color: RGBA(var(--color-charade-100));\n    }\n\n    .icon-wrapper {\n      display: none;\n    }\n  }\n\n  .mat-divider {\n    border-color: RGBA(var(--color-charade-950));\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_input_number {\n    .ngx-mat-tel-input-container {\n      .country-selector {\n        background-color: var(--color-black-tint);\n        border-color: RGBA(var(--color-charade-300));\n        color: RGBA(var(--color-charade-50));\n\n        &::after {\n          color: RGBA(var(--color-charade-50));\n        }\n\n        &[aria-expanded=\"true\"] {\n          border-color: RGBA(var(--color-charade-50));\n\n          ~ .mat-mdc-input-element {\n            border-color: RGBA(var(--color-charade-50));\n          }\n        }\n\n        &:disabled {\n          color: RGBA(var(--color-charade-200));\n\n          &::after {\n            color: RGBA(var(--color-charade-200));\n          }\n        }\n      }\n\n      .mat-mdc-input-element {\n        background-color: var(--color-black-tint);\n        border-color: RGBA(var(--color-charade-300));\n        color: RGBA(var(--color-charade-50));\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./bmb-input-phone-number.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "shouldShowError": {
                    "name": "shouldShowError",
                    "getSignature": {
                        "name": "shouldShowError",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 68
                    }
                }
            },
            "templateData": "<div\n  class=\"bmb_input_number\"\n  [ngClass]=\"{ 'bmb_input_number-disabled': disabled }\"\n>\n  <ngx-mat-intl-tel-input\n    [formControl]=\"control\"\n    [preferredCountries]=\"['mx']\"\n    [enablePlaceholder]=\"false\"\n    [enableSearch]=\"false\"\n    [disabled]=\"disabled\"\n  ></ngx-mat-intl-tel-input>\n  <p class=\"bmb_input_number-error\" *ngIf=\"shouldShowError\">\n    {{ errorMessage }}\n  </p>\n</div>\n"
        },
        {
            "name": "BmbInteractiveIconComponent",
            "id": "component-BmbInteractiveIconComponent-d4f1051e7797b43bdb5f596c80c7b7deb3677d7fd6a1a03481116b8d9d83f12e7547636d048e874bd37e85b07e25a26f1fc91113c769bf9763f16a4de88cbfd8",
            "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-interactive-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-interactive-icon.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "horizontal",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "required": false
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "required": false
                },
                {
                    "name": "setButtonTemplate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "required": false
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "appearance",
                    "defaultValue": "input<IBmbInteractiveIconAppearance>('red')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "buttonClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "required": false
                },
                {
                    "name": "description",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "horizontal",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "required": false
                },
                {
                    "name": "icon",
                    "defaultValue": "input<string>('face')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "layout",
                    "defaultValue": "input<IBmbInteractiveIconType>('regular')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "required": false
                },
                {
                    "name": "setButtonTemplate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "required": false
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isExternalLink",
                    "args": [
                        {
                            "name": "link",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "link",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isImage",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  input,\n  output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\nexport type IBmbInteractiveIconAppearance =\n  | 'red'\n  | 'blue'\n  | 'green'\n  | 'yellow'\n  | 'purple';\n\nexport type IBmbInteractiveIconType = 'regular' | 'button' | 'app_drawer';\n\n@Component({\n  selector: 'bmb-interactive-icon',\n  styleUrl: './bmb-interactive-icon.component.scss',\n  templateUrl: './bmb-interactive-icon.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent, RouterModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbInteractiveIconComponent {\n  appearance = input<IBmbInteractiveIconAppearance>('red');\n  title = input<string>();\n  description = input<string>('');\n  icon = input<string>('face');\n  horizontal = input<boolean>(false);\n  target = input<string>();\n  link = input<string>();\n  layout = input<IBmbInteractiveIconType>('regular');\n  setButtonTemplate = input<boolean>(false);\n\n  buttonClick = output<void>();\n\n  getClasses(): string[] {\n    const classes: string[] = [\n      'bmb_interactive_icon',\n      `bmb_interactive_icon-${this.layout()}`,\n    ];\n\n    if (this.setButtonTemplate())\n      classes.push('bmb_interactive_icon-button-template');\n\n    if (this.appearance())\n      classes.push(`bmb_interactive_icon-${this.appearance()}`);\n\n    return classes;\n  }\n\n  isExternalLink(link: string | undefined): boolean {\n    if (!link) return false;\n\n    return (\n      link.startsWith('http://') ||\n      link.startsWith('https://') ||\n      link.startsWith('#')\n    );\n  }\n\n  isImage(url: string): boolean {\n    const regx = /\\.|\\//gm;\n    return regx.test(url);\n  }\n\n  handleClick(): void {\n    this.buttonClick.emit();\n  }\n}\n",
            "styleUrl": "./bmb-interactive-icon.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-template #commonContent>\n  @if (isImage(icon())) {\n    <figure class=\"bmb_interactive_icon-box\">\n      <img [src]=\"icon()\" [alt]=\"title()\" class=\"bmb_interactive_icon-image\" />\n    </figure>\n  } @else {\n    <span class=\"bmb_interactive_icon-box\">\n      <bmb-icon class=\"bmb_interactive_icon-icon\" [icon]=\"icon()\"></bmb-icon>\n    </span>\n  }\n  <span class=\"bmb_interactive_icon-text\">\n    <span class=\"bmb_interactive_icon-title\" *ngIf=\"title\">{{ title() }}</span>\n    <span\n      class=\"bmb_interactive_icon-description\"\n      *ngIf=\"description() && horizontal()\"\n    >\n      {{ description() }}\n    </span>\n  </span>\n</ng-template>\n\n@if (setButtonTemplate()) {\n  <button\n    [ngClass]=\"getClasses()\"\n    [class.bmb_interactive_icon-horizontal]=\"horizontal()\"\n    (click)=\"handleClick()\"\n  >\n    <ng-container *ngTemplateOutlet=\"commonContent\" />\n  </button>\n} @else if (isExternalLink(link())) {\n  <a\n    [ngClass]=\"getClasses()\"\n    [class.bmb_interactive_icon-horizontal]=\"horizontal()\"\n    [href]=\"link()\"\n    [target]=\"target() || '_blank'\"\n    rel=\"noopener noreferrer\"\n  >\n    <ng-container *ngTemplateOutlet=\"commonContent\" />\n  </a>\n} @else {\n  <a\n    [ngClass]=\"getClasses()\"\n    [class.bmb_interactive_icon-horizontal]=\"horizontal()\"\n    [routerLink]=\"link()\"\n    routerLinkActive=\"active-link\"\n    [routerLinkActiveOptions]=\"{ exact: true }\"\n  >\n    <ng-container *ngTemplateOutlet=\"commonContent\" />\n  </a>\n}\n"
        },
        {
            "name": "BmbLegendComponent",
            "id": "component-BmbLegendComponent-5631d295b0433146b2615196afe1ca7aad0c45bbbe417456c39edff959caf952ddcf562cd6aad7561807c9720cf4b3a02cd7ace05f8c4a6dd48896e4e3745203",
            "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-legend",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-legend.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "indicatorAppearance",
                    "defaultValue": "'normal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "IBmbLegendVariations",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport type IBmbLegendVariations =\n  | 'normal'\n  | 'strong'\n  | 'success'\n  | 'info'\n  | 'warning'\n  | 'error'\n  | 'brand';\n\n@Component({\n  selector: 'bmb-legend',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-legend.component.html',\n  styleUrl: './bmb-legend.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbLegendComponent {\n  @Input() label: string = '';\n  @Input() value: string = '';\n  @Input() indicatorAppearance: IBmbLegendVariations = 'normal';\n}\n",
            "styleUrl": "./bmb-legend.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb_legend\">\n  <span class=\"bmb_legend-indicator\">\n    <span\n      [class]=\"'bmb_legend-bullet bmb_legend-bullet-' + indicatorAppearance\"\n    ></span>\n  </span>\n  <h3 class=\"bmb_legend-label\">{{ label }}</h3>\n  <span class=\"bmb_legend-value\">{{ value }}</span>\n</div>\n"
        },
        {
            "name": "BmbLoaderComponent",
            "id": "component-BmbLoaderComponent-09a86da204346834d09305b61473e1f59a948d9b34f6f8cf47f63388a847c4ac5d476882d47bbae3a43d1f531b565dbb3d82cb70fcbe780e6582e91e95d9e5d8",
            "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-loader",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-loader.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "buttonPrimary",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "buttonSecondary",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "errorState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isVisible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "overlay",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onButtonPrimary",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "onButtonSecondary",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "cleanupBody",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "handleButtonPrimary",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleButtonSecondary",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateBodyClass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  OnInit,\n  OnDestroy,\n  Renderer2,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbButtonDirective } from '../../directives/button.directive';\n\n@Component({\n  selector: 'bmb-loader',\n  styleUrl: './bmb-loader.component.scss',\n  templateUrl: './bmb-loader.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent, BmbButtonDirective],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbLoaderComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() title: string = '';\n  @Input() subtitle: string = '';\n  @Input() overlay: boolean = false;\n  @Input() isVisible: boolean = true;\n  @Input() errorState: boolean = false;\n  @Input() actions: boolean = false;\n  @Input() buttonPrimary: string = '';\n  @Input() buttonSecondary: string = '';\n\n  @Output() onButtonPrimary: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onButtonSecondary: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(\n    private renderer: Renderer2,\n    private elRef: ElementRef,\n  ) {}\n\n  ngOnInit() {\n    this.updateBodyClass();\n  }\n\n  ngOnChanges() {\n    this.updateBodyClass();\n  }\n\n  ngOnDestroy() {\n    this.cleanupBody();\n  }\n\n  private updateBodyClass() {\n    if (this.isVisible) {\n      document.body.appendChild(this.elRef.nativeElement);\n\n      if (this.overlay && !this.errorState) {\n        this.renderer.addClass(document.body, 'bmb_loader-body-overlay');\n      }\n    } else {\n      this.cleanupBody();\n    }\n  }\n\n  private cleanupBody() {\n    if (document.body.contains(this.elRef.nativeElement)) {\n      this.renderer.removeChild(document.body, this.elRef.nativeElement);\n    }\n    this.renderer.removeClass(document.body, 'bmb_loader-body-overlay');\n  }\n\n  handleButtonPrimary() {\n    this.onButtonPrimary.emit();\n  }\n\n  handleButtonSecondary() {\n    this.onButtonSecondary.emit();\n  }\n}\n",
            "styleUrl": "./bmb-loader.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy",
                "OnChanges"
            ],
            "templateData": "@if (overlay && !errorState) {\n  <div class=\"bmb_loader-overlay\"></div>\n}\n<div\n  class=\"bmb_loader\"\n  [ngClass]=\"{\n    'bmb_loader-modal': overlay && !errorState,\n    'bmb_loader-error': errorState,\n  }\"\n>\n  @if (!errorState) {\n    <div class=\"bmb_loader-loading\">\n      <bmb-icon icon=\"progress_activity\" class=\"bmb_loader-icon\" />\n    </div>\n  }\n  @if (errorState) {\n    <div class=\"bmb_loader-error-icon\">\n      <bmb-icon icon=\"wifi_off\" class=\"bmb_loader-icon\" />\n    </div>\n  }\n  @if (title) {\n    <div class=\"bmb_loader-title\">{{ title }}</div>\n  }\n  @if (subtitle) {\n    <div class=\"bmb_loader-subtitle\">{{ subtitle }}</div>\n  }\n\n  @if (errorState && actions) {\n    <div class=\"bmb_loader-error-actions\">\n      <button\n        bmbButton\n        appearance=\"primary\"\n        size=\"large\"\n        (click)=\"handleButtonPrimary()\"\n      >\n        {{ buttonPrimary }}\n      </button>\n      <button\n        bmbButton\n        appearance=\"secondary-outlined\"\n        size=\"large\"\n        (click)=\"handleButtonSecondary()\"\n      >\n        {{ buttonSecondary }}\n      </button>\n    </div>\n  }\n</div>\n"
        },
        {
            "name": "BmbLoginOnboardingComponent",
            "id": "component-BmbLoginOnboardingComponent-a8e7968eb7616b2b8f8401fa1d2f3b98d00886239443cd0e66e8c5f13497c8d5f5d8b3096e32ab8ca91a8fb3e1f04d6eeaadd41c45c1efe35adc73ac5eb46a56",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-login-onboarding",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-login-onboarding.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "_handleRequet",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getActivePage",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getIsLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleContinuePage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbLoginOnboardingLoginComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLoginOnboardingStepperComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLoginOnboardingLogoutComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLoginOnboardingLoggedComponent",
                    "type": "component"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbLoginOnboardingLoginComponent } from './bmb-login-onboarding-login/bmb-login-onboarding-login.component';\nimport { BmbLoginOnboardingStepperComponent } from './bmb-login-onboarding-stepper/bmb-login-onboarding-stepper.component';\nimport { BmbLoginOnboardingService } from './bmb-login-onboarding.service';\nimport { BmbLoginOnboardingLogoutComponent } from './bmb-login-onboarding-logout/bmb-login-onboarding-logout.component';\nimport { BmbLoginOnboardingLoggedComponent } from './bmb-login-onboarding-logged/bmb-login-onboarding-logged.component';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-login-onboarding',\n  standalone: true,\n  imports: [\n    BmbLoginOnboardingLoginComponent,\n    BmbLoginOnboardingStepperComponent,\n    BmbLoginOnboardingLogoutComponent,\n    BmbLoginOnboardingLoggedComponent,\n    BmbIconComponent,\n  ],\n  templateUrl: './bmb-login-onboarding.component.html',\n  styleUrl: './bmb-login-onboarding.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbLoginOnboardingComponent {\n  handleRequet = output<any>();\n\n  constructor(private loginOnboardingService: BmbLoginOnboardingService) {}\n\n  getIsLoading(): boolean {\n    return this.loginOnboardingService.getIsLoading();\n  }\n\n  getActivePage(): number {\n    return this.loginOnboardingService.getActivePage();\n  }\n\n  _handleRequet(event: unknown): void {\n    this.handleRequet.emit(event);\n  }\n\n  handleContinuePage(): void {\n    this.loginOnboardingService.setActivePage(\n      this.loginOnboardingService.getActivePage() + 1,\n    );\n  }\n}\n",
            "styleUrl": "./bmb-login-onboarding.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section class=\"bmb_login-onboarding\">\n  @switch (getActivePage()) {\n    @case (0) {\n      <bmb-login-onboarding-login (handleContinuePage)=\"handleContinuePage()\" />\n    }\n    @case (1) {\n      <bmb-login-onboarding-stepper\n        (handleRequet)=\"_handleRequet($event)\"\n        (handleContinuePage)=\"handleContinuePage()\"\n      >\n        <ng-content />\n      </bmb-login-onboarding-stepper>\n    }\n    @case (2) {\n      <bmb-login-onboarding-logout\n        (handleRequet)=\"_handleRequet($event)\"\n        (handleContinuePage)=\"handleContinuePage()\"\n      />\n    }\n    @case (3) {\n      <bmb-login-onboarding-logged (handleRequet)=\"_handleRequet($event)\" />\n    }\n    @default {\n      <p>Invalid page</p>\n    }\n  }\n  @if (getIsLoading()) {\n    <section class=\"bmb_login-onboarding-loader\">\n      <div class=\"bmb_loader-loading\">\n        <bmb-icon icon=\"progress_activity\" class=\"bmb_loader-icon\" />\n      </div>\n    </section>\n  }\n</section>\n"
        },
        {
            "name": "BmbLoginOnboardingLoggedComponent",
            "id": "component-BmbLoginOnboardingLoggedComponent-d70f52bad3d93136981f1570f8c00a60df0d07a0d0c5801bb57b32a53572a35c8c23edb8de4c82ea83379305531e03684036f298d65d5950cb9570fcc32b51c2",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-logged/bmb-login-onboarding-logged.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-login-onboarding-logged",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-login-onboarding-logged.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": false
                },
                {
                    "name": "mitecImage",
                    "defaultValue": "'../assets/images/logos-mitec/logo_mitec-vertical.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "tecLogoImage",
                    "defaultValue": "'../assets/images/tec-logo.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "_handleContinue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUserInfo",
                    "args": [],
                    "optional": false,
                    "returnType": "IBmbUserInfo",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbUserSummaryComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbButtonDirective } from '../../../directives/button.directive';\nimport { BmbUserSummaryComponent } from '../../bmb-user-summary/bmb-user-summary.component';\nimport { BmbLoginOnboardingService } from '../bmb-login-onboarding.service';\nimport { IBmbUserInfo } from '../types';\n\n@Component({\n  selector: 'bmb-login-onboarding-logged',\n  standalone: true,\n  imports: [BmbButtonDirective, BmbUserSummaryComponent],\n  templateUrl: './bmb-login-onboarding-logged.component.html',\n  styleUrl: './bmb-login-onboarding-logged.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbLoginOnboardingLoggedComponent {\n  handleRequet = output<any>();\n\n  tecLogoImage: string = '../assets/images/tec-logo.svg';\n  mitecImage: string = '../assets/images/logos-mitec/logo_mitec-vertical.svg';\n\n  constructor(private loginOnboardingService: BmbLoginOnboardingService) {}\n\n  getUserInfo(): IBmbUserInfo {\n    return this.loginOnboardingService.userInfo();\n  }\n\n  _handleContinue(): void {\n    this.loginOnboardingService.setIsLoading(true);\n    this.handleRequet.emit({\n      action: 'init',\n      callback: () => {\n        this.loginOnboardingService.setIsLoading(false);\n      },\n    });\n  }\n}\n",
            "styleUrl": "./bmb-login-onboarding-logged.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section class=\"bmb_login-onboarding-logged\">\n  <section class=\"bmb_login-onboarding-logged-tec_logo\">\n    <img alt=\"Tecnológico de Monterrey\" [src]=\"tecLogoImage\" />\n  </section>\n  <section class=\"bmb_login-onboarding-logged-mitec_logo\">\n    <img alt=\"mitec\" [src]=\"mitecImage\" />\n  </section>\n  <section class=\"bmb_login-onboarding-logged-content\">\n    <bmb-user-summary\n      [image]=\"getUserInfo().profilePicture\"\n      [name]=\"getUserInfo().fullName\"\n      [id]=\"getUserInfo().id\"\n    />\n    <p>Ingresar con otra cuenta</p>\n  </section>\n  <section>\n    <button bmbButton size=\"large\" (click)=\"_handleContinue()\">Ingresar</button>\n  </section>\n</section>\n"
        },
        {
            "name": "BmbLoginOnboardingLoginComponent",
            "id": "component-BmbLoginOnboardingLoginComponent-6981e3154340bafb2dac0b2097f14e631768ce761b612887d16277ce41fca04abef0a33a3374c8c673d571917dc03f5bb36321e83f73b75d991a7109ea22c5d7",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-login/bmb-login-onboarding-login.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-login-onboarding-login",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-login-onboarding-login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "handleContinuePage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "handleContinuePage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "required": false
                },
                {
                    "name": "mitecImage",
                    "defaultValue": "'../assets/images/logos-mitec/logo_mitec-vertical.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "tecLogoImage",
                    "defaultValue": "'../assets/images/tec-logo.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "_handleContinuePage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbButtonDirective } from '../../../directives/button.directive';\n\n@Component({\n  selector: 'bmb-login-onboarding-login',\n  standalone: true,\n  imports: [BmbButtonDirective],\n  templateUrl: './bmb-login-onboarding-login.component.html',\n  styleUrl: './bmb-login-onboarding-login.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbLoginOnboardingLoginComponent {\n  handleContinuePage = output();\n\n  tecLogoImage: string = '../assets/images/tec-logo.svg';\n  mitecImage: string = '../assets/images/logos-mitec/logo_mitec-vertical.svg';\n\n  _handleContinuePage(): void {\n    this.handleContinuePage.emit();\n  }\n}\n",
            "styleUrl": "./bmb-login-onboarding-login.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"bmb_login-onboarding-login\">\n  <section class=\"bmb_login-onboarding-login-tec_logo\">\n    <img alt=\"Tecnológico de Monterrey\" [src]=\"tecLogoImage\" />\n  </section>\n  <section class=\"bmb_login-onboarding-login-mitec_logo\">\n    <img alt=\"mitec\" [src]=\"mitecImage\" />\n  </section>\n  <section class=\"bmb_login-onboarding-login-content\">\n    <button\n      class=\"bmb_login-onboarding-login-content-button\"\n      bmbButton\n      size=\"large\"\n      (click)=\"_handleContinuePage()\"\n    >\n      Iniciar registro\n    </button>\n    <p>\n      Este proceso de registro se realizará una única vez\n      <br />\n      Tu inicio de sesión siempre será con tus datos biométricos\n    </p>\n  </section>\n</section>\n"
        },
        {
            "name": "BmbLoginOnboardingLogoutComponent",
            "id": "component-BmbLoginOnboardingLogoutComponent-63b3f3d0240b824f7a67d0350088022e818a155bbf2709875ae4e85c0decedb7a0b8cc1a2d597b93ffb753b7161d61c1a28d2bb378facc222887bdf0b86f0bab",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-logout/bmb-login-onboarding-logout.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-login-onboarding-logout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-login-onboarding-logout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "handleContinuePage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": false
                },
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "checkCircleImage",
                    "defaultValue": "'../assets/images/placeholders/check-circle.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "handleContinuePage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": false
                },
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "_handleContinuePage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbButtonDirective } from '../../../directives/button.directive';\nimport { BmbLoginOnboardingService } from '../bmb-login-onboarding.service';\nimport { IBmbUserInfo } from '../types';\n\n@Component({\n  selector: 'bmb-login-onboarding-logout',\n  standalone: true,\n  imports: [BmbButtonDirective],\n  templateUrl: './bmb-login-onboarding-logout.component.html',\n  styleUrl: './bmb-login-onboarding-logout.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbLoginOnboardingLogoutComponent {\n  handleRequet = output<any>();\n  handleContinuePage = output();\n\n  checkCircleImage: string = '../assets/images/placeholders/check-circle.svg';\n\n  constructor(private loginOnboardingService: BmbLoginOnboardingService) {}\n\n  _handleContinuePage(): void {\n    this.loginOnboardingService.setIsLoading(true);\n    this.handleRequet.emit({\n      data: this.loginOnboardingService.getUserInfo()['id'],\n      action: 'getUserInfo',\n      callback: (result: IBmbUserInfo) => {\n        if (result) {\n          this.loginOnboardingService.setUserInfo(result);\n          this.loginOnboardingService.setIsLoading(false);\n          this.handleContinuePage.emit();\n        }\n      },\n    });\n  }\n}\n",
            "styleUrl": "./bmb-login-onboarding-logout.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section class=\"bmb_login-onboarding-logout\">\n  <section class=\"bmb_login-onboarding-logout-content\">\n    <h1 class=\"bmb_login-onboarding-logout-content-title\">\n      ¡Se ha completado tu registro!\n    </h1>\n    <img\n      class=\"bmb_login-onboarding-logout-content-img\"\n      alt=\"Check circle\"\n      [src]=\"checkCircleImage\"\n    />\n  </section>\n  <section>\n    <button bmbButton size=\"large\" (click)=\"_handleContinuePage()\">\n      Finalizar\n    </button>\n  </section>\n</section>\n"
        },
        {
            "name": "BmbLoginOnboardingStepperComponent",
            "id": "component-BmbLoginOnboardingStepperComponent-3148ba7a8c6d21d3ebc9eddad6cf35443871abb2b6e7b5a29bc02d36bfeb99d6e615ea337541d82e21ae8f47887b3c03feaff101e328c0bf2e5643d9f71c6eab",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-stepper/bmb-login-onboarding-stepper.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-login-onboarding-stepper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-login-onboarding-stepper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "handleContinuePage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "required": false
                },
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "handleContinuePage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "required": false
                },
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "_handleContinuePage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "_handleRequet",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getActiveStep",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTotalSteps",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleContinueStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbStepProgressBarComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLoginOnboardingStepperStepOneComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLoginOnboardingStepperStepTwoComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLoginOnboardingStepperStepThreeComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLoginOnboardingStepperStepFourComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbStepProgressBarComponent } from '../../bmb-step-progress-bar/bmb-step-progress-bar.component';\nimport { BmbLoginOnboardingStepperStepOneComponent } from './bmb-login-onboarding-stepper-steps/bmb-login-onboarding-stepper-step-one.component';\nimport { BmbLoginOnboardingStepperStepTwoComponent } from './bmb-login-onboarding-stepper-steps/bmb-login-onboarding-stepper-step-two.component';\nimport { BmbLoginOnboardingStepperStepThreeComponent } from './bmb-login-onboarding-stepper-steps/bmb-login-onboarding-stepper-step-three.component';\nimport { BmbLoginOnboardingStepperStepFourComponent } from './bmb-login-onboarding-stepper-steps/bmb-login-onboarding-stepper-step-four.component';\nimport { BmbLoginOnboardingService } from '../bmb-login-onboarding.service';\n\n@Component({\n  selector: 'bmb-login-onboarding-stepper',\n  standalone: true,\n  imports: [\n    BmbStepProgressBarComponent,\n    BmbLoginOnboardingStepperStepOneComponent,\n    BmbLoginOnboardingStepperStepTwoComponent,\n    BmbLoginOnboardingStepperStepThreeComponent,\n    BmbLoginOnboardingStepperStepFourComponent,\n  ],\n  templateUrl: './bmb-login-onboarding-stepper.component.html',\n  styleUrl: './bmb-login-onboarding-stepper.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbLoginOnboardingStepperComponent {\n  handleContinuePage = output();\n  handleRequet = output<any>();\n\n  constructor(private loginOnboardingService: BmbLoginOnboardingService) {\n    this.loginOnboardingService.setTotalSteps(4);\n  }\n\n  getTotalSteps(): number {\n    return this.loginOnboardingService.getTotalSteps();\n  }\n\n  getActiveStep(): number {\n    return this.loginOnboardingService.getActiveStep();\n  }\n\n  _handleContinuePage(): void {\n    this.handleContinuePage.emit();\n  }\n\n  _handleRequet(event: unknown): void {\n    this.handleRequet.emit(event);\n  }\n\n  handleContinueStep(): void {\n    this.loginOnboardingService.setActiveStep(\n      this.loginOnboardingService.getActiveStep() + 1,\n    );\n  }\n}\n",
            "styleUrl": "./bmb-login-onboarding-stepper.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section class=\"bmb_login-onboarding-stepper\">\n  <bmb-step-progress-bar\n    [activeStep]=\"getActiveStep()\"\n    [totalSteps]=\"getTotalSteps()\"\n    [freeze]=\"true\"\n    size=\"normal\"\n    type=\"horizontal\"\n  />\n  <section class=\"bmb_login-onboarding-stepper-content\">\n    @switch (getActiveStep()) {\n      @case (0) {\n        <bmb-login-onboarding-stepper-step-one\n          (handleRequet)=\"_handleRequet($event)\"\n          (handleContinueStep)=\"handleContinueStep()\"\n        />\n      }\n      @case (1) {\n        <bmb-login-onboarding-stepper-step-two\n          (handleRequet)=\"_handleRequet($event)\"\n          (handleContinueStep)=\"handleContinueStep()\"\n        />\n      }\n      @case (2) {\n        <bmb-login-onboarding-stepper-step-three\n          (handleRequet)=\"_handleRequet($event)\"\n          (handleContinueStep)=\"handleContinueStep()\"\n        >\n          <ng-content />\n        </bmb-login-onboarding-stepper-step-three>\n      }\n      @case (3) {\n        <bmb-login-onboarding-stepper-step-four\n          (handleRequet)=\"_handleRequet($event)\"\n          (handleContinuePage)=\"_handleContinuePage()\"\n        />\n      }\n      @default {\n        <p>Invalid step</p>\n      }\n    }\n  </section>\n</section>\n"
        },
        {
            "name": "BmbLoginOnboardingStepperStepComponent",
            "id": "component-BmbLoginOnboardingStepperStepComponent-b52be4b0b73f98ace810ed75671d6611767252a21087b248dc1c8d1a31b192e53f15d6c3554d35bcd9ce0d904438519d020970ac1d15fd99ed7bc2a0dfb2f720",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-stepper/bmb-login-onboarding-stepper-steps/bmb-login-onboarding-stepper-step.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-login-onboarding-stepper-step",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-login-onboarding-stepper-step.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "cancelBackLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": true
                },
                {
                    "name": "continueLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": true
                },
                {
                    "name": "isContinueDisable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false
                },
                {
                    "name": "sublabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "handleContinue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "cancelBackLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": true
                },
                {
                    "name": "continueLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": true
                },
                {
                    "name": "handleContinue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "required": false
                },
                {
                    "name": "isContinueDisable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false
                },
                {
                    "name": "sublabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "required": true
                }
            ],
            "methodsClass": [
                {
                    "name": "getActiveStep",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleCancelBackStept",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleContinueStep",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  model,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbButtonDirective } from '../../../../directives/button.directive';\nimport { BmbLoginOnboardingService } from '../../bmb-login-onboarding.service';\n\n@Component({\n  selector: 'bmb-login-onboarding-stepper-step',\n  standalone: true,\n  imports: [BmbButtonDirective],\n  templateUrl: './bmb-login-onboarding-stepper-step.component.html',\n  styleUrl: './bmb-login-onboarding-stepper-step.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbLoginOnboardingStepperStepComponent {\n  title = input.required<string>();\n  subtitle = input<string>();\n  label = input<string>();\n  sublabel = input<string>();\n  cancelBackLabel = input.required<string>();\n  continueLabel = input.required<string>();\n\n  isContinueDisable = model<boolean>();\n\n  handleContinue = output<any>();\n\n  constructor(private loginOnboardingService: BmbLoginOnboardingService) {}\n\n  getActiveStep(): number {\n    return this.loginOnboardingService.getActiveStep();\n  }\n\n  handleCancelBackStept(): void {\n    if (\n      this.getActiveStep() &&\n      this.getActiveStep() !== this.loginOnboardingService.getTotalSteps() - 1\n    ) {\n      this.loginOnboardingService.setActiveStep(this.getActiveStep() - 1);\n      return;\n    }\n\n    this.loginOnboardingService.setActiveStep(0);\n    this.loginOnboardingService.setActivePage(0);\n  }\n\n  handleContinueStep(event: unknown): void {\n    this.handleContinue.emit(event);\n  }\n}\n",
            "styleUrl": "./bmb-login-onboarding-stepper-step.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section class=\"bmb_login-onboarding-stepper-step\">\n  <section class=\"bmb_login-onboarding-stepper-step-content\">\n    <h1 class=\"bmb_login-onboarding-stepper-step-content-title\">\n      {{ title() }}\n    </h1>\n    <p>{{ subtitle() }}</p>\n    <section class=\"bmb_login-onboarding-stepper-step-content-child\">\n      <ng-content />\n    </section>\n    <section class=\"bmb_login-onboarding-stepper-step-content-subcontent\">\n      <p class=\"bmb_login-onboarding-stepper-step-content-subcontent-label\">\n        {{ label() }}\n      </p>\n      <p class=\"bmb_login-onboarding-stepper-step-content-subcontent-sublabel\">\n        {{ sublabel() }}\n      </p>\n    </section>\n  </section>\n  <section class=\"bmb_login-onboarding-stepper-step-buttons\">\n    <button\n      bmbButton\n      appearance=\"secondary-outlined\"\n      size=\"small\"\n      (click)=\"handleCancelBackStept()\"\n    >\n      {{ cancelBackLabel() }}\n    </button>\n    <button\n      bmbButton\n      size=\"small\"\n      [disabled]=\"isContinueDisable()\"\n      (click)=\"handleContinueStep($event)\"\n    >\n      {{ continueLabel() }}\n    </button>\n  </section>\n</section>\n"
        },
        {
            "name": "BmbLoginOnboardingStepperStepFourComponent",
            "id": "component-BmbLoginOnboardingStepperStepFourComponent-882f803e4325fa120cc1cb98fd7d9603ed758e6ab41a04d4cc5cb62a5b62d062d5fd0af9d0027067c4a3ea099ac0a176dcc4e57c3ae5db2b725679f59335ff85",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-stepper/bmb-login-onboarding-stepper-steps/bmb-login-onboarding-stepper-step-four.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-login-onboarding-stepper-step-four",
            "styleUrls": [],
            "styles": [],
            "template": "<bmb-login-onboarding-stepper-step\n  title=\"Paso 4\"\n  subtitle=\"Activa tu entrada a Campus\"\n  label=\"Con esta funcionalidad tu ID Digital te permitirá ingresar al campus automáticamente.\"\n  sublabel=\"(Siempre podrás utilizar tu ID Digital manualmente y podrás cambiar esta configuración)\"\n  cancelBackLabel=\"No, gracias\"\n  continueLabel=\"Activar\"\n  (handleContinue)=\"handleContinue()\"\n>\n  <section>\n    <img alt=\"Credential example\" [src]=\"credentialExample\" />\n  </section>\n</bmb-login-onboarding-stepper-step>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "handleContinuePage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "required": false
                },
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "credentialExample",
                    "defaultValue": "'../assets/images/placeholders/credential.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "data",
                    "defaultValue": "{\n    title: 'Entrada a campus',\n    subtitle: '',\n    content: 'Podrás cambiar esta configuración en cualquier momento',\n    size: 'large',\n    type: 'action',\n    alertStyle: 'success',\n    primaryBtnLabel: 'Aceptar',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalDataConfig",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "handleContinuePage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "required": false
                },
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "_handleContinueStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleContinue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModalComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbLoginOnboardingStepperStepComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbLoginOnboardingStepperStepComponent } from './bmb-login-onboarding-stepper-step.component';\nimport { BmbLoginOnboardingService } from '../../bmb-login-onboarding.service';\nimport { ModalDataConfig } from '../../../bmb-modal/bmb-modal.interface';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BmbModalComponent } from '../../../bmb-modal/bmb-modal.component';\n\n@Component({\n  selector: 'bmb-login-onboarding-stepper-step-four',\n  standalone: true,\n  imports: [BmbLoginOnboardingStepperStepComponent],\n  template: `\n    <bmb-login-onboarding-stepper-step\n      title=\"Paso 4\"\n      subtitle=\"Activa tu entrada a Campus\"\n      label=\"Con esta funcionalidad tu ID Digital te permitirá ingresar al campus automáticamente.\"\n      sublabel=\"(Siempre podrás utilizar tu ID Digital manualmente y podrás cambiar esta configuración)\"\n      cancelBackLabel=\"No, gracias\"\n      continueLabel=\"Activar\"\n      (handleContinue)=\"handleContinue()\"\n    >\n      <section>\n        <img alt=\"Credential example\" [src]=\"credentialExample\" />\n      </section>\n    </bmb-login-onboarding-stepper-step>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbLoginOnboardingStepperStepFourComponent {\n  handleRequet = output<any>();\n  handleContinuePage = output();\n\n  credentialExample: string = '../assets/images/placeholders/credential.svg';\n  data: ModalDataConfig = {\n    title: 'Entrada a campus',\n    subtitle: '',\n    content: 'Podrás cambiar esta configuración en cualquier momento',\n    size: 'large',\n    type: 'action',\n    alertStyle: 'success',\n    primaryBtnLabel: 'Aceptar',\n  };\n\n  constructor(\n    private loginOnboardingService: BmbLoginOnboardingService,\n    private matDialog: MatDialog,\n  ) {}\n\n  openModalComponent(): void {\n    this.matDialog.open(BmbModalComponent, { data: this.data });\n    this.matDialog.afterAllClosed.subscribe(() => {\n      this._handleContinueStep();\n    });\n  }\n\n  handleContinue(): void {\n    this.openModalComponent();\n  }\n\n  _handleContinueStep(): void {\n    this.loginOnboardingService.setIsLoading(true);\n    this.handleRequet.emit({\n      action: 'activate',\n      callback: (result: boolean) => {\n        if (result) {\n          this.loginOnboardingService.setIsLoading(false);\n          this.handleContinuePage.emit();\n        }\n      },\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "BmbLoginOnboardingStepperStepOneComponent",
            "id": "component-BmbLoginOnboardingStepperStepOneComponent-faa2933dbd51145aca4863b098f112b7d3db468d69fc4076d498866e7aab7e576437bd62f687640f2c88d44c2b0e5124de5e7db6946f44fc54e3d8e9a63626ec",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-stepper/bmb-login-onboarding-stepper-steps/bmb-login-onboarding-stepper-step-one.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-login-onboarding-stepper-step-one",
            "styleUrls": [],
            "styles": [],
            "template": "<bmb-login-onboarding-stepper-step\n  title=\"Paso 1\"\n  subtitle=\"Ingresa con tu cuenta institucional\"\n  cancelBackLabel=\"Cancelar\"\n  continueLabel=\"Siguiente\"\n  [isContinueDisable]=\"isContinueDisable()\"\n  (handleContinue)=\"_handleContinueStep()\"\n>\n  <span class=\"bmb_login-onboarding-stepper-step-one-input\">\n    <bmb-input\n      placeholder=\"Usuario\"\n      icon=\"account_circle\"\n      errorMessage=\"El usuario es requerido\"\n      appearance=\"normal\"\n      [disabled]=\"false\"\n      [isRequired]=\"true\"\n      [control]=\"getFormControl('user')\"\n      [showError]=\"showErrors['user']\"\n      (isBlur)=\"onSubmit()\"\n    />\n  </span>\n  <span class=\"bmb_login-onboarding-stepper-step-one-input\">\n    <bmb-input\n      type=\"password\"\n      placeholder=\"Contraseña\"\n      icon=\"lock\"\n      errorMessage=\"La contraseña es requerida\"\n      appearance=\"normal\"\n      [disabled]=\"false\"\n      [isRequired]=\"true\"\n      [control]=\"getFormControl('password')\"\n      [showError]=\"showErrors['password']\"\n      (isBlur)=\"onSubmit()\"\n    />\n  </span>\n  <p class=\"bmb_login-onboarding-stepper-step-content-subcontent-sublabel\">\n    ¿Olvidaste tu contraseña?\n  </p>\n</bmb-login-onboarding-stepper-step>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isContinueDisable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "handleContinueStep",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "required": false
                },
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "handleContinueStep",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "required": false
                },
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "required": false
                },
                {
                    "name": "isContinueDisable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "required": false
                },
                {
                    "name": "showErrors",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "userForm",
                    "defaultValue": "new FormGroup({\n    user: new FormControl<string>('', Validators.required),\n    password: new FormControl<string>('', Validators.required),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 67
                }
            ],
            "methodsClass": [
                {
                    "name": "_handleContinueStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFormControl",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateErrorState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbLoginOnboardingStepperStepComponent",
                    "type": "component"
                },
                {
                    "name": "BmbInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  model,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbInputComponent } from '../../../bmb-input/bmb-input.component';\nimport { BmbLoginOnboardingStepperStepComponent } from './bmb-login-onboarding-stepper-step.component';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BmbLoginOnboardingService } from '../../bmb-login-onboarding.service';\n\n@Component({\n  selector: 'bmb-login-onboarding-stepper-step-one',\n  standalone: true,\n  imports: [BmbLoginOnboardingStepperStepComponent, BmbInputComponent],\n  template: `\n    <bmb-login-onboarding-stepper-step\n      title=\"Paso 1\"\n      subtitle=\"Ingresa con tu cuenta institucional\"\n      cancelBackLabel=\"Cancelar\"\n      continueLabel=\"Siguiente\"\n      [isContinueDisable]=\"isContinueDisable()\"\n      (handleContinue)=\"_handleContinueStep()\"\n    >\n      <span class=\"bmb_login-onboarding-stepper-step-one-input\">\n        <bmb-input\n          placeholder=\"Usuario\"\n          icon=\"account_circle\"\n          errorMessage=\"El usuario es requerido\"\n          appearance=\"normal\"\n          [disabled]=\"false\"\n          [isRequired]=\"true\"\n          [control]=\"getFormControl('user')\"\n          [showError]=\"showErrors['user']\"\n          (isBlur)=\"onSubmit()\"\n        />\n      </span>\n      <span class=\"bmb_login-onboarding-stepper-step-one-input\">\n        <bmb-input\n          type=\"password\"\n          placeholder=\"Contraseña\"\n          icon=\"lock\"\n          errorMessage=\"La contraseña es requerida\"\n          appearance=\"normal\"\n          [disabled]=\"false\"\n          [isRequired]=\"true\"\n          [control]=\"getFormControl('password')\"\n          [showError]=\"showErrors['password']\"\n          (isBlur)=\"onSubmit()\"\n        />\n      </span>\n      <p class=\"bmb_login-onboarding-stepper-step-content-subcontent-sublabel\">\n        ¿Olvidaste tu contraseña?\n      </p>\n    </bmb-login-onboarding-stepper-step>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbLoginOnboardingStepperStepOneComponent {\n  isContinueDisable = model<boolean>(true);\n\n  handleRequet = output<any>();\n  handleContinueStep = output();\n\n  userForm: FormGroup = new FormGroup({\n    user: new FormControl<string>('', Validators.required),\n    password: new FormControl<string>('', Validators.required),\n  });\n  showErrors: { [key: string]: boolean } = {};\n\n  constructor(private loginOnboardingService: BmbLoginOnboardingService) {}\n\n  onSubmit(): void {\n    if (this.userForm.valid) {\n      this.isContinueDisable.set(false);\n      return;\n    }\n    this.userForm.markAllAsTouched();\n    this.updateErrorState();\n    this.isContinueDisable.set(true);\n  }\n\n  updateErrorState(): void {\n    Object.keys(this.userForm.controls).forEach((field) => {\n      const control = this.userForm.get(field);\n      if (control instanceof FormControl) {\n        this.showErrors[field] =\n          control.invalid && (control.touched || control.dirty);\n      }\n    });\n  }\n\n  getFormControl(name: string): FormControl {\n    return this.userForm.get(name) as FormControl;\n  }\n\n  _handleContinueStep(): void {\n    this.loginOnboardingService.setIsLoading(true);\n    this.handleRequet.emit({\n      data: this.userForm['value'],\n      action: 'auth',\n      callback: (result: boolean) => {\n        if (result) {\n          this.loginOnboardingService.setUserInfo({\n            id: this.userForm.value['user'],\n            fullName: '',\n            profilePicture: '',\n          });\n          this.loginOnboardingService.setIsLoading(false);\n          this.handleContinueStep.emit();\n        }\n      },\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 71,
                "jsdoctags": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "BmbLoginOnboardingStepperStepThreeComponent",
            "id": "component-BmbLoginOnboardingStepperStepThreeComponent-1d6a31dea21544216804dec2b044b38a317a3b82d8b347719ac8541cb5fd8cd803daf3c8fd5c02fbc7695e237c0a0a16044e5aba71dc8905815e796071ce5d0a",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-stepper/bmb-login-onboarding-stepper-steps/bmb-login-onboarding-stepper-step-three.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-login-onboarding-stepper-step-three",
            "styleUrls": [],
            "styles": [],
            "template": "<bmb-login-onboarding-stepper-step\n  title=\"Paso 3\"\n  subtitle=\"Registra tus datos biométricos\"\n  cancelBackLabel=\"Anterior\"\n  continueLabel=\"Siguiente\"\n  (handleContinue)=\"_handleContinueStep()\"\n>\n  <ng-content />\n</bmb-login-onboarding-stepper-step>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "handleContinueStep",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "required": false
                },
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "handleContinueStep",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "required": false
                },
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "_handleContinueStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbLoginOnboardingStepperStepComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbLoginOnboardingStepperStepComponent } from './bmb-login-onboarding-stepper-step.component';\nimport { BmbLoginOnboardingService } from '../../bmb-login-onboarding.service';\n\n@Component({\n  selector: 'bmb-login-onboarding-stepper-step-three',\n  standalone: true,\n  imports: [BmbLoginOnboardingStepperStepComponent],\n  template: `\n    <bmb-login-onboarding-stepper-step\n      title=\"Paso 3\"\n      subtitle=\"Registra tus datos biométricos\"\n      cancelBackLabel=\"Anterior\"\n      continueLabel=\"Siguiente\"\n      (handleContinue)=\"_handleContinueStep()\"\n    >\n      <ng-content />\n    </bmb-login-onboarding-stepper-step>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbLoginOnboardingStepperStepThreeComponent {\n  handleRequet = output<any>();\n  handleContinueStep = output();\n\n  constructor(private loginOnboardingService: BmbLoginOnboardingService) {}\n\n  _handleContinueStep(): void {\n    this.loginOnboardingService.setIsLoading(true);\n    this.handleRequet.emit({\n      action: 'biometric',\n      callback: (result: boolean) => {\n        if (result) {\n          this.loginOnboardingService.setIsLoading(false);\n          this.handleContinueStep.emit();\n        }\n      },\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "BmbLoginOnboardingStepperStepTwoComponent",
            "id": "component-BmbLoginOnboardingStepperStepTwoComponent-e83814181b37d0403121d9b4ae7ad4a86e29bdd12b03072da532cc30d43814c04fc7ab3d7d7fbadfd61edc3e2b97896cd77b70d3fb4f5cd22006cc58465336d1",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-stepper/bmb-login-onboarding-stepper-steps/bmb-login-onboarding-stepper-step-two.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-login-onboarding-stepper-step-two",
            "styleUrls": [],
            "styles": [],
            "template": "<bmb-login-onboarding-stepper-step\n  title=\"Paso 2\"\n  subtitle=\"Ingresa tu ToTP\"\n  label=\"Recuerda que debes contar con la aplicación de identificación\"\n  sublabel=\"(Google/Microsoft Authenticator)\"\n  cancelBackLabel=\"Anterior \"\n  continueLabel=\"Siguiente\"\n  [isContinueDisable]=\"isContinueDisable()\"\n  (handleContinue)=\"_handleContinueStep()\"\n>\n  <bmb-totp\n    instanceId=\"toTP\"\n    [maxCode]=\"maxCode\"\n    [codeError]=\"getCodeError()\"\n    [errorMessage]=\"getErrorMessage()\"\n    (handleSubmit)=\"verifyCode($event)\"\n  />\n</bmb-login-onboarding-stepper-step>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isContinueDisable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "handleContinueStep",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "required": false
                },
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "code",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "error",
                    "defaultValue": "{ codeError: false, errorMessage: '' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IBmbError",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "handleContinueStep",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "required": false
                },
                {
                    "name": "handleRequet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "required": false
                },
                {
                    "name": "isContinueDisable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "required": false
                },
                {
                    "name": "maxCode",
                    "defaultValue": "6",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methodsClass": [
                {
                    "name": "_handleContinueStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCodeError",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getErrorMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "verifyCode",
                    "args": [
                        {
                            "name": "receivedCode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "receivedCode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbLoginOnboardingStepperStepComponent",
                    "type": "component"
                },
                {
                    "name": "BmbTotpComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  model,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbLoginOnboardingStepperStepComponent } from './bmb-login-onboarding-stepper-step.component';\nimport { BmbTotpComponent } from '../../../bmb-totp/bmb-totp.component';\nimport { BmbLoginOnboardingService } from '../../bmb-login-onboarding.service';\nimport { IBmbError } from '../../types';\n\n@Component({\n  selector: 'bmb-login-onboarding-stepper-step-two',\n  standalone: true,\n  imports: [BmbLoginOnboardingStepperStepComponent, BmbTotpComponent],\n  template: `\n    <bmb-login-onboarding-stepper-step\n      title=\"Paso 2\"\n      subtitle=\"Ingresa tu ToTP\"\n      label=\"Recuerda que debes contar con la aplicación de identificación\"\n      sublabel=\"(Google/Microsoft Authenticator)\"\n      cancelBackLabel=\"Anterior \"\n      continueLabel=\"Siguiente\"\n      [isContinueDisable]=\"isContinueDisable()\"\n      (handleContinue)=\"_handleContinueStep()\"\n    >\n      <bmb-totp\n        instanceId=\"toTP\"\n        [maxCode]=\"maxCode\"\n        [codeError]=\"getCodeError()\"\n        [errorMessage]=\"getErrorMessage()\"\n        (handleSubmit)=\"verifyCode($event)\"\n      />\n    </bmb-login-onboarding-stepper-step>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbLoginOnboardingStepperStepTwoComponent {\n  isContinueDisable = model<boolean>(true);\n\n  handleRequet = output<any>();\n  handleContinueStep = output();\n\n  error: IBmbError = { codeError: false, errorMessage: '' };\n  code: string = '';\n  maxCode: number = 6;\n\n  constructor(private loginOnboardingService: BmbLoginOnboardingService) {}\n\n  getCodeError(): boolean {\n    return this.error && this.error.codeError;\n  }\n\n  getErrorMessage(): string {\n    return this.error && this.error.errorMessage;\n  }\n\n  verifyCode(receivedCode: string): void {\n    this.error = { codeError: false, errorMessage: '' };\n\n    if (receivedCode.length === this.maxCode) {\n      this.isContinueDisable.set(false);\n      this.code = receivedCode;\n    }\n  }\n\n  _handleContinueStep(): void {\n    this.loginOnboardingService.setIsLoading(true);\n    this.handleRequet.emit({\n      data: this.code,\n      action: 'toTP',\n      callback: (result: boolean) => {\n        this.loginOnboardingService.setIsLoading(false);\n\n        if (result) {\n          this.handleContinueStep.emit();\n          return;\n        }\n\n        this.error = {\n          codeError: true,\n          errorMessage: 'Código no válido, por favor intenta de nuevo',\n        };\n      },\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "loginOnboardingService",
                        "type": "BmbLoginOnboardingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "BmbLogoComponent",
            "id": "component-BmbLogoComponent-204e434183aff1f6d4a8e860762d868cd2cfd515bec3c8f8a741cf9f3781ae18f6b7a994fc79dc97b759ae3d2e8067a03287b1929ee674dd40e88c881d95b601",
            "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-logo",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-logo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "altImage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "image",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "link",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "target",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'bmb-logo',\n  styleUrl: './bmb-logo.component.scss',\n  templateUrl: './bmb-logo.component.html',\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbLogoComponent {\n  @Input() size: string = '';\n  @Input() image: string = '';\n  @Input() altImage: string = '';\n  @Input() link: string = '';\n  @Input() target: string = '';\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_logo'];\n\n    if (this.size) {\n      classes.push('bmb_logo-' + this.size);\n    }\n\n    return classes;\n  }\n}\n",
            "styleUrl": "./bmb-logo.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<a [ngClass]=\"getClasses()\" [href]=\"link\" [target]=\"target\">\n  <img [src]=\"image\" [alt]=\"altImage\" />\n</a>\n"
        },
        {
            "name": "BmbMediaCardComponent",
            "id": "component-BmbMediaCardComponent-295f9cced617dc3ab3c42ad153df44f74db4cd79275efed38e19b6598170fdf47bedb5d6469ef8d1c4305d15bc94be11e8089a7a3276d174750ead87b5bde618",
            "file": "projects/ds-ng/src/lib/components/bmb-media-card/bmb-media-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-media-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-media-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "required": false
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "required": false
                },
                {
                    "name": "enableZoom",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "required": false
                },
                {
                    "name": "isBlurredBackdrop",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "required": false
                },
                {
                    "name": "mobileSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                },
                {
                    "name": "ratio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "required": false
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "required": false
                },
                {
                    "name": "userImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "required": false
                },
                {
                    "name": "userName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "alt",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "borderRadius",
                    "defaultValue": "input<SizeNames>('m')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "required": false
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "required": false
                },
                {
                    "name": "enableZoom",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "required": false
                },
                {
                    "name": "isBlurredBackdrop",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "input<IBmbMediaCardLoading>('lazy')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "mobileSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                },
                {
                    "name": "ratio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "required": false
                },
                {
                    "name": "src",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "required": false
                },
                {
                    "name": "type",
                    "defaultValue": "input<IBmbMediaCardType>('inline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "userImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "required": false
                },
                {
                    "name": "userName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "required": false
                },
                {
                    "name": "width",
                    "defaultValue": "input<string>('100%')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getContentClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUserAttribute",
                    "args": [
                        {
                            "name": "attribute",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "attribute",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbUserImageComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SizeNames } from '../../types';\nimport { BmbUserImageComponent } from '../bmb-user-image/bmb-user-image.component';\n\nexport type IBmbMediaCardType = 'inline' | 'floating' | 'author_detail';\nexport type IBmbMediaCardLoading = 'lazy' | 'eager';\n\n@Component({\n  selector: 'bmb-media-card',\n  standalone: true,\n  imports: [CommonModule, BmbUserImageComponent],\n  templateUrl: './bmb-media-card.component.html',\n  styleUrl: './bmb-media-card.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbMediaCardComponent {\n  src = input<string>('');\n  mobileSrc = input<string>();\n  alt = input<string>('');\n  width = input<string>('100%');\n  ratio = input<string>();\n  borderRadius = input<SizeNames>('m');\n  loading = input<IBmbMediaCardLoading>('lazy');\n  enableZoom = input<boolean>(false);\n  isBlurredBackdrop = input<boolean>(false);\n  type = input<IBmbMediaCardType>('inline');\n  title = input<string>();\n  subtitle = input<string>();\n  content = input<string>();\n  date = input<string>();\n  userName = input<string>();\n  userImage = input<string>();\n\n  getClasses(): string[] {\n    const classes = [];\n    classes.push(`bmb_radius-${this.borderRadius()}`);\n    if (this.enableZoom()) classes.push('bmb_media-card-figure-zoom');\n    return classes;\n  }\n\n  getContentClasses(): string[] {\n    const classes = [];\n    if (this.type() === 'inline')\n      classes.push(`bmb_radius-${this.borderRadius()}`);\n    if (this.isBlurredBackdrop())\n      classes.push('bmb_media-card-content-container-backdrop');\n    return classes;\n  }\n\n  getUserAttribute(attribute: string | undefined): string {\n    return attribute || '';\n  }\n}\n",
            "styleUrl": "./bmb-media-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section\n  class=\"bmb_media-card\"\n  [ngClass]=\"'bmb_media-card-' + type()\"\n  [ngStyle]=\"{ width: width(), 'aspect-ratio': ratio() }\"\n>\n  <div class=\"bmb_media-card-image-container\">\n    @if (isBlurredBackdrop()) {\n      <figure\n        class=\"bmb_media-card-figure bmb_media-card-figure-backdrop\"\n        [ngClass]=\"getClasses()\"\n        [ngStyle]=\"{ 'aspect-ratio': ratio() }\"\n      >\n        <picture>\n          <source media=\"(min-width: 1000px)\" [srcset]=\"src()\" />\n          @if (mobileSrc()) {\n            <source [srcset]=\"mobileSrc()\" />\n          }\n          <img\n            [srcset]=\"src()\"\n            [alt]=\"alt()\"\n            [loading]=\"loading()\"\n            class=\"bmb_media-card-figure-image\"\n          />\n        </picture>\n      </figure>\n    }\n    <figure\n      class=\"bmb_media-card-figure\"\n      [ngClass]=\"getClasses()\"\n      [ngStyle]=\"{ 'aspect-ratio': ratio() }\"\n    >\n      <picture>\n        <source media=\"(min-width: 1000px)\" [srcset]=\"src()\" />\n        @if (mobileSrc()) {\n          <source [srcset]=\"mobileSrc()\" />\n        }\n        <img\n          [srcset]=\"src()\"\n          [alt]=\"alt()\"\n          [loading]=\"loading()\"\n          class=\"bmb_media-card-figure-image\"\n        />\n      </picture>\n    </figure>\n  </div>\n  <div\n    class=\"bmb_media-card-content\"\n    [ngClass]=\"'bmb_media-card-content-' + type()\"\n  >\n    <section\n      class=\"bmb_media-card-content-container\"\n      [ngClass]=\"getContentClasses()\"\n    >\n      @if (title()) {\n        <h1 class=\"bmb_media-card-content-title\">{{ title() }}</h1>\n      }\n      @if (subtitle() && type() === \"floating\") {\n        <h2 class=\"bmb_media-card-content-subtitle\">{{ subtitle() }}</h2>\n      }\n      @if (content() && type() === \"floating\") {\n        <p class=\"bmb_media-card-content-content\">{{ content() }}</p>\n      }\n      @if (date() && type() !== \"author_detail\") {\n        <p class=\"bmb_media-card-content-date\">{{ date() }}</p>\n      }\n      @if (userName() && userImage() && type() === \"author_detail\") {\n        <section class=\"bmb_media-card-content-user\">\n          <bmb-user-image\n            [altImage]=\"getUserAttribute(userName())\"\n            [image]=\"getUserAttribute(userImage())\"\n            size=\"mobile-small\"\n          ></bmb-user-image>\n          <span class=\"bmb_media-card-content-user-name\">{{ userName() }}</span>\n          <span class=\"bmb_media-card-content-user-date\">{{ date() }}</span>\n        </section>\n      }\n      <ng-content></ng-content>\n    </section>\n  </div>\n</section>\n"
        },
        {
            "name": "BmbModalComponent",
            "id": "component-BmbModalComponent-8d3ab3397ce6d61d3ca0344e5a4e106a91697abe616c009de39e9b016315437ffcc991c8577224d561ceab64b775863c8b534f7fba816514c05141dfc3db8e9e",
            "file": "projects/ds-ng/src/lib/components/bmb-modal/bmb-modal.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MatDialog"
                },
                {
                    "name": "ModalService",
                    "type": "injectable"
                }
            ],
            "selector": "bmb-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "btnColor",
                    "defaultValue": "'bmb_modal-btn-main'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<BmbModalComponent>",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isTemplate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "modalData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalDataConfig",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                },
                {
                    "name": "modalTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any> | null",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "svgUrl",
                    "defaultValue": "'../../../assets/svg/'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "actionFunction",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setBtnStyle",
                    "args": [
                        {
                            "name": "alertStyle",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "alertStyle",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setConfig",
                    "args": [
                        {
                            "name": "data",
                            "type": "ModalDataConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "ModalDataConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  OnInit,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n  MatDialog,\n} from '@angular/material/dialog';\nimport { ModalDataConfig } from './bmb-modal.interface';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbButtonDirective } from '../../directives/button.directive';\nimport { ModalService } from '../../services/modal.service';\n\n@Component({\n  selector: 'bmb-modal',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent, BmbButtonDirective],\n  templateUrl: './bmb-modal.component.html',\n  providers: [MatDialog, ModalService],\n  styleUrl: './bmb-modal.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbModalComponent implements OnInit {\n  svgUrl: string = '../../../assets/svg/';\n  btnColor: any = 'bmb_modal-btn-main';\n  isTemplate: boolean = false;\n  modalTemplate: TemplateRef<any> | null = null;\n\n  constructor(\n    public dialogRef: MatDialogRef<BmbModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public modalData: ModalDataConfig,\n  ) {}\n\n  ngOnInit() {\n    this.setConfig(this.modalData);\n  }\n\n  actionFunction() {\n    this.closeModal();\n  }\n\n  closeModal() {\n    this.dialogRef.close();\n  }\n\n  setConfig(data: ModalDataConfig) {\n    if (data.type == 'alert') {\n      this.setBtnStyle(data.alertStyle!);\n    }\n\n    if (typeof data.content !== 'string') {\n      this.modalTemplate = data.content!;\n      this.isTemplate = true;\n    }\n  }\n\n  setBtnStyle(alertStyle: string) {\n    switch (alertStyle) {\n      case 'primary':\n        this.svgUrl = this.svgUrl + 'info_fill_primary.svg';\n        this.btnColor = 'bmb_modal-btn-primary';\n        break;\n      case 'neutral':\n        this.svgUrl = this.svgUrl + 'info_fill.svg';\n        this.btnColor = 'bmb_modal-btn-neutral';\n        break;\n      case 'error':\n        this.svgUrl = this.svgUrl + 'error_fill.svg';\n        this.btnColor = 'bmb_modal-btn-error';\n        break;\n      case 'event':\n        this.svgUrl = this.svgUrl + 'event_fill.svg';\n        this.btnColor = 'bmb_modal-btn-event';\n        break;\n      case 'success':\n        this.svgUrl = this.svgUrl + 'success_fill.svg';\n        this.btnColor = 'bmb_modal-btn-success';\n        break;\n      case 'warning':\n        this.svgUrl = this.svgUrl + 'warning_fill.svg';\n        this.btnColor = 'bmb_modal-btn-warning';\n        break;\n      default:\n        this.svgUrl = this.svgUrl + 'info_fill.svg';\n        this.btnColor = 'bmb_modal-btn-primary';\n        break;\n    }\n  }\n}\n",
            "styleUrl": "./bmb-modal.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<BmbModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalData",
                        "type": "ModalDataConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<BmbModalComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalData",
                        "type": "ModalDataConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  class=\"bmb_modal-content\"\n  [ngClass]=\"{\n    'bmb_modal-size-small': this.modalData.size == 'small',\n    'bmb_modal-size-medium': this.modalData.size == 'medium',\n    'bmb_modal-size-large': this.modalData.size == 'large',\n  }\"\n>\n  <div class=\"bmb_modal-content-wrapper\">\n    <header class=\"bmb_modal-header\">\n      @if (modalData.type == \"alert\") {\n        <div class=\"bmb_modal-header-icon\">\n          <img [src]=\"this.svgUrl\" alt=\"\" />\n        </div>\n      }\n      <div class=\"bmb_modal-header-text\">\n        <h1 class=\"bmb_modal-header-text-title\">{{ modalData.title }}</h1>\n        @if (modalData.subtitle) {\n          <h3 class=\"bmb_modal-header-text-subtitle\">\n            {{ modalData.subtitle }}\n          </h3>\n        }\n      </div>\n      <div class=\"bmb_modal-header-close\">\n        <bmb-icon\n          class=\"bmb_modal-header-close-icon\"\n          [icon]=\"'close'\"\n          (click)=\"closeModal()\"\n          onkeypress=\"\"\n        />\n      </div>\n    </header>\n    <section class=\"bmb_modal-body\">\n      @if (!isTemplate) {\n        <div\n          class=\"bmb_modal-body-description\"\n          [ngClass]=\"{ 'bmb_modal-body-scrollable': modalData.scrollable }\"\n        >\n          <p class=\"bmb_modal-body-description-text\">{{ modalData.content }}</p>\n        </div>\n      } @else {\n        <ng-container *ngTemplateOutlet=\"modalTemplate\"></ng-container>\n      }\n    </section>\n    @if (this.modalData.type !== \"informative\") {\n      <footer id=\"modal-footer\" class=\"bmb_modal-footer\">\n        @if (this.modalData.secondaryBtnLabel) {\n          <button\n            bmbButton\n            appearance=\"secondary-filled\"\n            class=\"bmb_modal-btn bmb_modal-footer-btn bmb_modal-btn-secondary-action\"\n            (click)=\"this.dialogRef.close(false)\"\n          >\n            {{ modalData.secondaryBtnLabel }}\n          </button>\n        }\n        <button\n          bmbButton\n          class=\"bmb_modal-btn\"\n          [ngClass]=\"btnColor\"\n          (click)=\"this.dialogRef.close(true)\"\n        >\n          {{ modalData.primaryBtnLabel || \"OK\" }}\n        </button>\n      </footer>\n    }\n  </div>\n</div>\n"
        },
        {
            "name": "BmbNotificationCardComponent",
            "id": "component-BmbNotificationCardComponent-3e8075db9526563a4a4e466a1163d2d6a30c7bc0539ff907ead103b335c264f2f09cb537a21645d195f5dca4d121d5f61f91ac67bef711071c8ae21209a9eb24",
            "file": "projects/ds-ng/src/lib/components/bmb-notification-card/bmb-notification-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-notification-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-notification-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "IBmbNotificationCardData | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "activeDot",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "activeTab",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "expanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDotPress",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setActiveTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { IBmbNotificationCardData } from './types';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-notification-card',\n  standalone: true,\n  imports: [BmbIconComponent, CommonModule],\n  templateUrl: './bmb-notification-card.component.html',\n  styleUrl: './bmb-notification-card.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbNotificationCardComponent implements OnInit {\n  @Input() data: IBmbNotificationCardData | null = null;\n\n  expanded: boolean = false;\n  activeData: any = [];\n  activeTab: number = 1;\n  activeDot: number = 0;\n\n  ngOnInit(): void {\n    this.activeTab = 1;\n    if (this.data !== null) {\n      this.activeData = this.data!.new;\n    }\n  }\n\n  setActiveTab(tab: number) {\n    this.activeTab = tab;\n\n    if (this.data !== null) {\n      switch (tab) {\n        case 1:\n          this.activeData = this.data!.new;\n          break;\n        case 2:\n          this.activeData = this.data!.all;\n          break;\n        case 3:\n          this.activeData = this.data!.seen;\n          break;\n\n        default:\n          this.activeData = this.data!.new;\n          break;\n      }\n    }\n  }\n\n  onDotPress(event: any) {\n    this.activeDot = event;\n  }\n\n  setSize(size: string) {\n    this.expanded = size === 'expand' ? true : false;\n  }\n}\n",
            "styleUrl": "./bmb-notification-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"bmb_home-notification-card\">\n  <div class=\"bmb_home-notification-card-header\">\n    <div class=\"bmb_home-notification-card-header-title\">\n      <div class=\"bmb_home-notification-card-header-iconbox\">\n        <bmb-icon\n          class=\"bmb_home-notification-card-header-iconbox-icon\"\n          [icon]=\"'notifications'\"\n        />\n      </div>\n      <div class=\"bmb_home-notification-card-header-title-text\">\n        <h2>Mis Notificaciones</h2>\n      </div>\n    </div>\n    <div class=\"bmb_home-notification-card-header-trailing\">\n      @if (expanded) {\n        <bmb-icon\n          (click)=\"setSize('collapse')\"\n          class=\"bmb_home-notification-card-header-trailing-close\"\n          [icon]=\"'close_fullscreen'\"\n          onkeypress=\"\"\n        />\n      } @else {\n        <bmb-icon\n          (click)=\"setSize('expand')\"\n          class=\"bmb_home-notification-card-header-trailing-expand\"\n          [icon]=\"'fit_screen'\"\n          onkeypress=\"\"\n        />\n      }\n    </div>\n  </div>\n  <div class=\"bmb_home-notification-card-tabs\">\n    <div\n      class=\"bmb_home-notification-card-tabs-container\"\n      [ngClass]=\"{ 'bmb_home-notification-card-tabs-active': activeTab == 1 }\"\n      (click)=\"setActiveTab(1)\"\n      onkeypress=\"\"\n    >\n      <span class=\"bmb_home-notification-card-tabs-container-text\">Nuevos</span>\n    </div>\n    <div\n      class=\"bmb_home-notification-card-tabs-container\"\n      [ngClass]=\"{ 'bmb_home-notification-card-tabs-active': activeTab == 2 }\"\n      (click)=\"setActiveTab(2)\"\n      onkeypress=\"\"\n    >\n      <span class=\"bmb_home-notification-card-tabs-container-text\">Todos</span>\n    </div>\n    <div\n      class=\"bmb_home-notification-card-tabs-container\"\n      [ngClass]=\"{ 'bmb_home-notification-card-tabs-active': activeTab == 3 }\"\n      (click)=\"setActiveTab(3)\"\n      onkeypress=\"\"\n    >\n      <span class=\"bmb_home-notification-card-tabs-container-text\">\n        Leídos\n      </span>\n    </div>\n  </div>\n  <div class=\"bmb_home-notification-card-content\">\n    @if (data != null) {\n      @if (activeData.length == 0) {\n        <div class=\"bmb_home-notification-card-container\">\n          <h1 class=\"bmb_home-notification-card-container-error\">\n            No hay notificaciones!\n          </h1>\n        </div>\n      } @else {\n        @for (data of activeData; track $index) {\n          <div class=\"bmb_home-notification-card-container\">\n            <div class=\"bmb_home-notification-card-container-card\">\n              <span class=\"bmb_home-notification-card-container-card-bullet\">\n              </span>\n              <span\n                class=\"bmb_home-notification-card-container-card-description\"\n                >{{ data.description }}</span\n              >\n              <span class=\"bmb_home-notification-card-container-card-legend\"\n                >Hace: {{ data.time }}</span\n              >\n            </div>\n          </div>\n        }\n      }\n    } @else {\n      <div class=\"bmb_home-notification-card-container\">\n        <h1 class=\"bmb_home-notification-card-container-error\">\n          No hay notificaciones\n        </h1>\n      </div>\n    }\n  </div>\n</section>\n"
        },
        {
            "name": "BmbOverlayComponent",
            "id": "component-BmbOverlayComponent-45e6476559910a10526990ba5dfc21e2b189a5cb5a0cf4fad585c22daa39b54d3c2ffc6096cffccf3473d9a89088330b9ac854a02ca6c43a22001a8f3515c7b2",
            "file": "projects/ds-ng/src/lib/components/bmb-overlay/bmb-overlay.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-overlay",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-overlay.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OverlayModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnInit,\n  AfterViewInit,\n  OnChanges,\n} from '@angular/core';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\n@Component({\n  selector: 'bmb-overlay',\n  standalone: true,\n  imports: [CommonModule, OverlayModule],\n  templateUrl: './bmb-overlay.component.html',\n  styleUrl: './bmb-overlay.component.scss',\n})\nexport class BmbOverlayComponent implements OnChanges, AfterViewInit {\n  displayStyle?: string;\n\n  @Input() active: boolean = false;\n\n  ngAfterViewInit() {\n    if (this.active) {\n      this.displayStyle = 'block';\n    } else {\n      this.displayStyle = 'none';\n    }\n  }\n\n  ngOnChanges() {\n    if (this.active) {\n      this.displayStyle = 'block';\n    } else {\n      this.displayStyle = 'none';\n    }\n  }\n}\n",
            "styleUrl": "./bmb-overlay.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"bmb_overlay\" [style.display]=\"this.displayStyle\"></div>\n"
        },
        {
            "name": "BmbPaginatorComponent",
            "id": "component-BmbPaginatorComponent-bf4d8b7c23ff91242920abe1343f17fffca096fdc4ba77d6d2a7e8b0813ded9ee565b34be1e14292631cf497d3e39813c20b932bd729255a0c2e8e96dad46dbc",
            "file": "projects/ds-ng/src/lib/components/bmb-paginator/bmb-paginator.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-paginator",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-paginator.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "currentPage",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "itemsPerPage",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "totalItems",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "pageChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getPaginationText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-paginator',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  templateUrl: './bmb-paginator.component.html',\n  styleUrl: './bmb-paginator.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbPaginatorComponent {\n  @Input() totalItems: number = 0;\n  @Input() itemsPerPage: number = 5;\n  @Input() currentPage: number = 1;\n  @Output() pageChange = new EventEmitter<number>();\n\n  get totalPages(): number {\n    return Math.ceil(this.totalItems / this.itemsPerPage);\n  }\n\n  onPageChange(page: number): void {\n    if (page < 1 || page > this.totalPages) return;\n    this.currentPage = page;\n    this.pageChange.emit(this.currentPage);\n  }\n\n  get pages(): number[] {\n    const pages = [];\n    for (let i = 1; i <= this.totalPages; i++) {\n      pages.push(i);\n    }\n    return pages;\n  }\n\n  getPaginationText(): string {\n    if (this.totalItems == 0) {\n      return `0 de ${this.totalPages || 0}`;\n    }\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage + 1;\n    const endIndex = Math.min(\n      this.currentPage * this.itemsPerPage,\n      this.totalItems,\n    );\n    return `${startIndex} - ${endIndex} de ${this.totalItems}`;\n  }\n}\n",
            "styleUrl": "./bmb-paginator.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "totalPages": {
                    "name": "totalPages",
                    "getSignature": {
                        "name": "totalPages",
                        "type": "number",
                        "returnType": "number",
                        "line": 27
                    }
                },
                "pages": {
                    "name": "pages",
                    "getSignature": {
                        "name": "pages",
                        "type": "[]",
                        "returnType": "number[]",
                        "line": 37
                    }
                }
            },
            "templateData": "<section class=\"bmb_paginator\">\n  <span class=\"bmb_paginator-text\">{{ getPaginationText() }}</span>\n  <button\n    [disabled]=\"currentPage === 1\"\n    [ngClass]=\"{\n      'bmb_paginator-btn-disabled': currentPage == 1,\n    }\"\n    (click)=\"onPageChange(1)\"\n    class=\"bmb_paginator-btn\"\n  >\n    <bmb-icon icon=\"keyboard_double_arrow_left\" class=\"bmb_paginator-icon\" />\n  </button>\n  <button\n    [disabled]=\"currentPage === 1\"\n    [ngClass]=\"{\n      'bmb_paginator-btn-disabled': currentPage == 1,\n    }\"\n    (click)=\"onPageChange(currentPage - 1)\"\n    class=\"bmb_paginator-btn\"\n  >\n    <bmb-icon icon=\"keyboard_arrow_left\" class=\"bmb_paginator-icon\" />\n  </button>\n  <button\n    [disabled]=\"currentPage === totalPages\"\n    [ngClass]=\"{\n      'bmb_paginator-btn-disabled': currentPage === totalPages,\n    }\"\n    (click)=\"onPageChange(currentPage + 1)\"\n    class=\"bmb_paginator-btn\"\n  >\n    <bmb-icon icon=\"keyboard_arrow_right\" class=\"bmb_paginator-icon\" />\n  </button>\n  <button\n    [disabled]=\"currentPage === totalPages\"\n    [ngClass]=\"{\n      'bmb_paginator-btn-disabled': currentPage === totalPages,\n    }\"\n    (click)=\"onPageChange(totalPages)\"\n    class=\"bmb_paginator-btn\"\n  >\n    <bmb-icon icon=\"keyboard_double_arrow_right\" class=\"bmb_paginator-icon\" />\n  </button>\n</section>\n"
        },
        {
            "name": "BmbProgressBarComponent",
            "id": "component-BmbProgressBarComponent-3ba7cf519d1bbb650722275af878ca3d28419f2eae090d6faab11ef31ee7948db518184d71cd626ad5545e464434d56a48aae2f45fc159db4d47047f6f4fc37a",
            "file": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-progress-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-progress-bar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "IBmbProgressBarVariations",
                    "decorators": []
                },
                {
                    "name": "counter",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "href",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "target",
                    "defaultValue": "'_blank'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "IBmbTarget",
                    "decorators": []
                },
                {
                    "name": "textLink",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "totalCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'simple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "\"simple\" | \"counter\" | \"container\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "progress",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "verifyPercentage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n  OnChanges,\n} from '@angular/core';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\nexport type IBmbProgressBarVariations = 'info' | 'warning' | 'error';\n\nexport type IBmbTarget = '_blank' | '_parent' | '_self' | '_top';\n\n@Component({\n  selector: 'bmb-progress-bar',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  templateUrl: './bmb-progress-bar.component.html',\n  styleUrl: './bmb-progress-bar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbProgressBarComponent implements OnChanges {\n  @Input() type: 'simple' | 'counter' | 'container' = 'simple';\n  @Input() totalCount: number = 0;\n  @Input() counter: number = 0;\n  @Input() title: string = '';\n  @Input() appearance: IBmbProgressBarVariations = 'info';\n  @Input() textLink: string = '';\n  @Input() href: string = '';\n  @Input() target: IBmbTarget = '_blank';\n\n  progress: number = 0;\n\n  ngOnChanges() {\n    this.verifyPercentage();\n  }\n\n  verifyPercentage(): void {\n    this.progress = (this.counter / this.totalCount) * 100;\n    if (this.progress < 0) {\n      this.progress = 0;\n    }\n\n    if (this.progress > 100) {\n      this.progress = 100;\n    }\n  }\n}\n",
            "styleUrl": "./bmb-progress-bar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<section class=\"bmb_progress-bar\">\n  @if (type !== \"container\") {\n    <div class=\"bmb_progress-bar-counter-container\">\n      <div class=\"bmb_progress-bar-track\">\n        <div\n          [class]=\"\n            'bmb_progress-bar-active bmb_progress-bar-active-' + appearance\n          \"\n          [style.width.%]=\"progress\"\n        ></div>\n      </div>\n      @if (type !== \"simple\") {\n        <span class=\"bmb_progress-bar-counter-text\"\n          >{{ counter }}/{{ totalCount }}</span\n        >\n      }\n    </div>\n  } @else {\n    <div class=\"bmb_progress-bar-container\">\n      <div class=\"bmb_progress-bar-container-main\">\n        <div class=\"bmb_progress-bar-container-header\">\n          <span class=\"bmb_progress-bar-container-header-text\">{{\n            title\n          }}</span>\n          <span class=\"bmb_progress-bar-container-header-text\"\n            >{{ counter }}/{{ totalCount }}</span\n          >\n        </div>\n        <div class=\"bmb_progress-bar-container-bar\">\n          <div class=\"bmb_progress-bar-counter-container\">\n            <div class=\"bmb_progress-bar-track\">\n              <div\n                [class]=\"\n                  'bmb_progress-bar-active bmb_progress-bar-active-' +\n                  appearance\n                \"\n                [style.width.%]=\"progress\"\n              ></div>\n            </div>\n            <span class=\"bmb_progress-bar-counter-text\"\n              >{{ progress | number: \"2.1-1\" }}%</span\n            >\n          </div>\n        </div>\n        <div class=\"bmb_progress-bar-container-link\">\n          <a\n            class=\"bmb_progress-bar-container-link-text\"\n            [href]=\"href\"\n            [target]=\"target\"\n          >\n            <span>{{ textLink }}</span>\n            <bmb-icon [icon]=\"'arrow_forward'\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  }\n</section>\n"
        },
        {
            "name": "BmbProgressCircleComponent",
            "id": "component-BmbProgressCircleComponent-a5162687b78f5e786a7591a6972ca88723c372697f4a6d69166cf67ac9d759e19c1a141c962e6d3aee63d632bbc1fca481d178d17af2bd8d58972c46a9b81c2c",
            "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: CircleProgressOptions, useValue: CircleProgressOptions }"
                }
            ],
            "selector": "bmb-progress-circle",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-progress-circle.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "percent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "showBackground",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showValueLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string | Array<String>",
                    "decorators": []
                },
                {
                    "name": "valueLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_lastPercent",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "options",
                    "defaultValue": "new CircleProgressOptions()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CircleProgressOptions",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "responsive",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "svg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methodsClass": [
                {
                    "name": "applyOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 192,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "draw",
                    "args": [
                        {
                            "name": "percent",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "percent",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRelativeY",
                    "args": [
                        {
                            "name": "rowNum",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rowCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 206,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "rowNum",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rowCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "polarToCartesian",
                    "args": [
                        {
                            "name": "centerX",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "centerY",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "radius",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "angleInDegrees",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ x: number; y: number; }",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "centerX",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "centerY",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "radius",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "angleInDegrees",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "render",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BmbProgressCircleOptionsInterface } from './bmb-progress-circle.interface';\nimport { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nexport class CircleProgressOptions\n  implements BmbProgressCircleOptionsInterface\n{\n  valueLabel = '$10000';\n  showValueLabel = true;\n  backgroundPadding = -9;\n  percent = 50;\n  radius = 100;\n  space = -5;\n  outerStrokeWidth = 5;\n  outerStrokeLinecap = 'round';\n  innerStrokeWidth = 5;\n  title: string | Array<String> = 'Total a pagar';\n  showTitle = true;\n  showBackground = true;\n  responsive = true;\n}\n\n@Component({\n  selector: 'bmb-progress-circle',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-progress-circle.component.html',\n  styleUrl: './bmb-progress-circle.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    { provide: CircleProgressOptions, useValue: CircleProgressOptions },\n  ],\n})\nexport class BmbProgressCircleComponent implements OnChanges {\n  @Input() valueLabel?: string;\n  @Input() showValueLabel?: boolean;\n\n  @Input() percent!: number;\n\n  @Input() title?: string | Array<String>;\n\n  @Input() showTitle?: boolean;\n  @Input() showBackground?: boolean;\n\n  responsive = true;\n  svg: any;\n  options: CircleProgressOptions = new CircleProgressOptions();\n  _lastPercent: number = 0;\n\n  constructor(defaultOptions: CircleProgressOptions) {\n    Object.assign(this.options, defaultOptions);\n  }\n\n  ngOnInit() {\n    this.render();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.render();\n  }\n\n  render() {\n    this.applyOptions();\n    this.draw(this.options.percent);\n    this._lastPercent = this.options.percent;\n  }\n\n  polarToCartesian(\n    centerX: number,\n    centerY: number,\n    radius: number,\n    angleInDegrees: number,\n  ) {\n    let angleInRadius = (angleInDegrees * Math.PI) / 180;\n    let x = centerX + Math.sin(angleInRadius) * radius;\n    let y = centerY - Math.cos(angleInRadius) * radius;\n    return { x: x, y: y };\n  }\n\n  draw(percent: number) {\n    percent = Math.abs(percent);\n    let circlePercent = percent > 100 ? 100 : percent;\n    let boxSize = this.options.radius! * 2 + this.options.outerStrokeWidth * 2;\n    let centre = { x: boxSize / 2, y: boxSize / 2 };\n    let startPoint = { x: centre.x, y: centre.y - this.options.radius };\n    let endPoint = this.polarToCartesian(\n      centre.x,\n      centre.y,\n      this.options.radius,\n      (360 * (100 - circlePercent)) / 100,\n    );\n    let largeArcFlag: any, sweepFlag: any;\n    if (circlePercent > 50) {\n      [largeArcFlag, sweepFlag] = [1, 0];\n    } else {\n      [largeArcFlag, sweepFlag] = [0, 0];\n    }\n    let titlePercent = this.options.percent;\n    let titleTextPercent = titlePercent;\n    let title = {\n      x: centre.x,\n      y: centre.y,\n      textAnchor: 'middle',\n      texts: new Array<any>(),\n      tspans: new Array<any>(),\n    };\n    if (this.title === '' || this.title === undefined) {\n      title.texts.push(titleTextPercent);\n    } else {\n      if (this.title instanceof Array) {\n        title.texts = [...this.title];\n      } else {\n        title.texts.push(this.title.toString());\n      }\n    }\n    let valueLabel = {\n      x: centre.x,\n      y: centre.y,\n      textAnchor: 'middle',\n      texts: new Array<any>(),\n      tspans: new Array<any>(),\n    };\n    if (this.valueLabel === undefined) {\n      valueLabel.texts.push(`0`);\n    } else {\n      valueLabel.texts.push(this.valueLabel);\n    }\n    let rowCount = 0,\n      rowNum = 1;\n    this.options.showTitle && (rowCount += title.texts.length);\n    this.options.showValueLabel && (rowCount += valueLabel.texts.length);\n    if (this.options.showTitle) {\n      for (let span of title.texts) {\n        title.tspans.push({\n          span: span,\n          dy: this.getRelativeY(rowNum, rowCount),\n        });\n        rowNum++;\n      }\n    }\n    if (this.options.showValueLabel) {\n      for (let span of valueLabel.texts) {\n        valueLabel.tspans.push({\n          span: span,\n          dy: this.getRelativeY(rowNum, rowCount),\n        });\n        rowNum++;\n      }\n    }\n    this.svg = {\n      viewBox: `0 0 ${boxSize} ${boxSize}`,\n      width: this.options.responsive ? '100%' : boxSize,\n      height: this.options.responsive ? '100%' : boxSize,\n      backgroundCircle: {\n        cx: centre.x,\n        cy: centre.y,\n        r:\n          this.options.radius +\n          this.options.outerStrokeWidth / 2 +\n          this.options.backgroundPadding,\n      },\n      path: {\n        d: `M ${startPoint.x} ${startPoint.y}\n       A ${this.options.radius} ${this.options.radius} 0 ${largeArcFlag} ${sweepFlag} ${endPoint.x} ${endPoint.y}`,\n        strokeWidth: this.options.outerStrokeWidth,\n        strokeLinecap: this.options.outerStrokeLinecap,\n        fill: 'none',\n      },\n      circle: {\n        cx: centre.x,\n        cy: centre.y,\n        r:\n          this.options.radius -\n          this.options.space -\n          this.options.outerStrokeWidth / 2 -\n          this.options.innerStrokeWidth / 2,\n        strokeWidth: this.options.innerStrokeWidth,\n      },\n      title: title,\n      valueLabel: valueLabel,\n    };\n  }\n\n  private applyOptions() {\n    this.options.radius = Math.abs(100);\n    this.options.space = -5;\n    this.options.percent = this.percent!;\n    this.options.outerStrokeWidth = 5;\n    this.options.innerStrokeWidth = 5;\n    this.options.backgroundPadding = -9;\n    this.options.showTitle = this.showTitle ? this.showTitle : false;\n    this.options.showValueLabel = this.showValueLabel\n      ? this.showValueLabel\n      : false;\n    this.options.responsive = this.responsive!;\n  }\n\n  private getRelativeY(rowNum: number, rowCount: number): string {\n    let initialOffset = -0.18,\n      offset = 1.2;\n    return (initialOffset + offset * (rowNum - rowCount / 2)).toFixed(2) + 'em';\n  }\n}\n",
            "styleUrl": "./bmb-progress-circle.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "CircleProgressOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 56,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "CircleProgressOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  onkeypress=\"\"\n  class=\"bmb_progress-circle\"\n  [attr.viewBox]=\"svg.viewBox\"\n  preserveAspectRatio=\"xMidYMid meet\"\n  [attr.height]=\"svg.height\"\n  [attr.width]=\"svg.width\"\n>\n  @if (this.showBackground) {\n    <ng-container>\n      <circle\n        class=\"bmb_progress-circle-background\"\n        [attr.cx]=\"svg.backgroundCircle.cx\"\n        [attr.cy]=\"svg.backgroundCircle.cy\"\n        [attr.r]=\"svg.backgroundCircle.r\"\n      />\n    </ng-container>\n  }\n  <circle\n    class=\"bmb_progress-circle-fill\"\n    [attr.cx]=\"svg.circle.cx\"\n    [attr.cy]=\"svg.circle.cy\"\n    [attr.r]=\"svg.circle.r\"\n    [attr.stroke-width]=\"svg.circle.strokeWidth\"\n  />\n  <path\n    class=\"bmb_progress-circle-track\"\n    [attr.d]=\"svg.path.d\"\n    [attr.stroke-width]=\"svg.path.strokeWidth\"\n    [attr.fill]=\"svg.path.fill\"\n  />\n  @if (options.showTitle || options.showValueLabel) {\n    <text\n      alignment-baseline=\"baseline\"\n      [attr.x]=\"svg.circle.cx\"\n      [attr.y]=\"svg.circle.cy\"\n      [attr.text-anchor]=\"svg.title.textAnchor\"\n    >\n      @if (options.showTitle) {\n        <ng-container>\n          @for (tspan of svg.title.tspans; track tspan) {\n            <tspan\n              class=\"bmb_progress-circle-title\"\n              [attr.x]=\"svg.title.x\"\n              [attr.y]=\"svg.title.y\"\n              [attr.dy]=\"tspan.dy\"\n            >\n              {{ tspan.span }}\n            </tspan>\n          }\n        </ng-container>\n      }\n      @if (options.showValueLabel) {\n        <ng-container>\n          @for (tspan of svg.valueLabel.tspans; track tspan) {\n            <tspan\n              class=\"bmb_progress-circle-value-label\"\n              [attr.x]=\"svg.valueLabel.x\"\n              [attr.y]=\"svg.valueLabel.y\"\n              [attr.dy]=\"tspan.dy\"\n            >\n              {{ tspan.span }}\n            </tspan>\n          }\n        </ng-container>\n      }\n    </text>\n  }\n</svg>\n"
        },
        {
            "name": "BmbPullWedgeComponent",
            "id": "component-BmbPullWedgeComponent-d890b55468dcb6922a96b5a8b2c70e5c4049bc047283716a124d1e0aaa7b6c5e91397c0ab883086a25e83c5977b289bbcff38936eaf7cd4504038a14201024cf",
            "file": "projects/ds-ng/src/lib/components/bmb-pull-wedge/bmb-pull-wedge.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-pull-wedge",
            "styleUrls": [
                "./bmb-pull-wedge.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-pull-wedge.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "initialHeight",
                    "defaultValue": "200",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "contentHeight",
                    "defaultValue": "200",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "contentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'content', {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "initialY",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "isCollapsed",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "maxContentHeight",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "minContentHeight",
                    "defaultValue": "200",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "methodsClass": [
                {
                    "name": "calculateHeight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDragEnded",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragEnd",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragEnd",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDragMoved",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragMove",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragMove",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbTabsComponent",
                    "type": "component"
                },
                {
                    "name": "DragDropModule",
                    "type": "module"
                },
                {
                    "name": "BmbInteractiveIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCalendarComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbTabsComponent } from '../bmb-tabs/bmb-tabs.component';\nimport { BmbCalendarComponent } from '../bmb-calendar/bmb-calendar.component';\nimport {\n  DragDropModule,\n  CdkDragMove,\n  CdkDragEnd,\n} from '@angular/cdk/drag-drop';\n\nimport { BmbInteractiveIconComponent } from '../bmb-interactive-icon/bmb-interactive-icon.component';\n\n@Component({\n  selector: 'bmb-pull-wedge',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbTabsComponent,\n    DragDropModule,\n    BmbInteractiveIconComponent,\n    BmbCalendarComponent,\n  ],\n  styleUrls: ['./bmb-pull-wedge.component.scss'],\n  templateUrl: './bmb-pull-wedge.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbPullWedgeComponent implements AfterViewInit, OnChanges {\n  @Input() initialHeight: number = 200;\n  @ViewChild('content', { static: true }) contentRef!: ElementRef;\n\n  initialY = 0;\n  contentHeight: number = 200;\n  minContentHeight: number = 200;\n  maxContentHeight: number = 0;\n  isCollapsed = true;\n\n  constructor(private renderer: Renderer2) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['initialHeight']) {\n      this.contentHeight = changes['initialHeight'].currentValue;\n      this.minContentHeight = changes['initialHeight'].currentValue;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.calculateHeight();\n  }\n\n  calculateHeight() {\n    const contentHeight = this.contentRef.nativeElement.scrollHeight;\n    this.maxContentHeight = contentHeight;\n    if (this.isCollapsed) {\n      this.contentHeight = this.minContentHeight;\n    } else {\n      this.contentHeight = this.maxContentHeight;\n    }\n  }\n\n  onDragMoved(event: CdkDragMove) {\n    if (this.initialY === 0) {\n      this.initialY = event.pointerPosition.y;\n    }\n    const deltaY = event.pointerPosition.y - this.initialY;\n    const newHeight = Math.max(\n      this.minContentHeight,\n      Math.min(this.maxContentHeight, this.contentHeight + deltaY),\n    );\n    this.contentHeight = newHeight;\n  }\n\n  onDragEnded(event: CdkDragEnd) {\n    const finalHeight = this.contentHeight;\n    if (finalHeight > this.minContentHeight) {\n      this.contentHeight = this.maxContentHeight;\n    } else {\n      this.contentHeight = this.minContentHeight;\n    }\n    this.initialY = 0;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/rem\" as rem;\n\n.bmb_pull_wedge {\n  overflow: hidden;\n  transition:\n    height 0.3s ease,\n    width 0.3s ease;\n\n  &-container {\n    position: relative;\n    height: 100%;\n  }\n\n  &-content {\n    width: 100%;\n    opacity: 0;\n    transition: opacity 0.3s ease;\n    display: flex;\n\n    &.visible {\n      opacity: 1;\n    }\n  }\n\n  &-button {\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    width: rem.rem_calc(50);\n    height: rem.rem_calc(4);\n    cursor: pointer;\n    background-color: RGBA(var(--color-charade-700), 1);\n    border-radius: rem.rem_calc(2);\n    padding: 0;\n\n    &.cdk-drag {\n      transform: translateX(-50%) !important;\n    }\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_pull_wedge {\n    background-color: RGBA(var(--color-charade-800), 1);\n    color: RGBA(var(--color-charade-50), 1);\n\n    &-button {\n      background-color: RGBA(var(--color-charade-50), 1);\n    }\n\n    &-content {\n      background-color: RGBA(var(--color-charade-800), 1);\n    }\n  }\n}\n",
                    "styleUrl": "./bmb-pull-wedge.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"bmb_pull_wedge\" [style.height.px]=\"contentHeight\">\n  <div class=\"bmb_pull_wedge-container\">\n    <div #content class=\"bmb_pull_wedge-content\" [class.visible]=\"isCollapsed\">\n      <ng-content select=\"[collapsible]\"></ng-content>\n    </div>\n    <button\n      class=\"bmb_pull_wedge-button\"\n      type=\"button\"\n      cdkDrag\n      (cdkDragMoved)=\"onDragMoved($event)\"\n      (cdkDragEnded)=\"onDragEnded($event)\"\n    ></button>\n  </div>\n</div>\n"
        },
        {
            "name": "BmbPushNotificationComponent",
            "id": "component-BmbPushNotificationComponent-69f8d595ab7ff08075befababc4c0ec14aa15e684a6ae69ff63ca44fd120620c4ad5b86b271b2be024f7dab2cc0576a4a94637db1525635366c1a15c7a0de1c7",
            "file": "projects/ds-ng/src/lib/components/bmb-push-notification/bmb-push-notification.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-push-notification",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-push-notification.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "closeNotification",
                    "args": [
                        {
                            "name": "notification",
                            "type": "INotification",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "notification",
                            "type": "INotification",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getNotifications",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbPushNotificationItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbPushNotificationItemComponent } from './bmb-push-notification-item/bmb-push-notification-item.component';\nimport { BmbNotificationService } from '../../services/notification.service';\nimport { INotification } from './types';\n\n@Component({\n  selector: 'bmb-push-notification',\n  standalone: true,\n  imports: [BmbPushNotificationItemComponent],\n  templateUrl: './bmb-push-notification.component.html',\n  styleUrl: './bmb-push-notification.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbPushNotificationComponent {\n  constructor(private notificationSignal: BmbNotificationService) {}\n\n  getNotifications() {\n    return this.notificationSignal.getNotificationList();\n  }\n\n  closeNotification(notification: INotification) {\n    if (notification.id) {\n      this.notificationSignal.deleteNotification(notification.id);\n    }\n  }\n}\n",
            "styleUrl": "./bmb-push-notification.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "notificationSignal",
                        "type": "BmbNotificationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "notificationSignal",
                        "type": "BmbNotificationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section class=\"bmb_push-notifications\">\n  @for (notification of getNotifications(); track $index) {\n    <bmb-push-notification-item\n      [notification]=\"notification\"\n      (onClose)=\"closeNotification(notification)\"\n    />\n  }\n</section>\n"
        },
        {
            "name": "BmbPushNotificationItemComponent",
            "id": "component-BmbPushNotificationItemComponent-d751f16d8cfac54e9b2f2c70aaa631c3d99581668cd9c077885d09c666911f811604ebee14062e486f02e42d139e3e8d1af78a555eb2e3560249c40c07dda29c",
            "file": "projects/ds-ng/src/lib/components/bmb-push-notification/bmb-push-notification-item/bmb-push-notification-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-push-notification-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-push-notification-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "notification",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "dontAskAgain",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "notification",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "required": true
                },
                {
                    "name": "onClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "getAppIcon",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAppName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getIconClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getNotificationClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleAction",
                    "args": [
                        {
                            "name": "action",
                            "type": "INotificationAction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "INotificationAction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleDontAskAgain",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleExpandEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbUserImageComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCheckboxComponent",
                    "type": "component"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { INotification, INotificationAction } from '../types';\nimport { BmbIconComponent } from '../../bmb-icon/bmb-icon.component';\nimport { BmbUserImageComponent } from '../../bmb-user-image/bmb-user-image.component';\nimport { BmbCheckboxComponent } from '../../bmb-checkbox/bmb-checkbox.component';\nimport { BmbButtonDirective } from '../../../directives/button.directive';\n\n@Component({\n  selector: 'bmb-push-notification-item',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbUserImageComponent,\n    BmbCheckboxComponent,\n    BmbButtonDirective,\n  ],\n  templateUrl: './bmb-push-notification-item.component.html',\n  styleUrl: './bmb-push-notification-item.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbPushNotificationItemComponent {\n  notification = input.required<INotification>();\n\n  onClose = output<void>();\n\n  isExpanded = true;\n  dontAskAgain = false;\n\n  getNotificationClasses(): string[] {\n    const classList = [\n      'bmb_push-notification-item',\n      `bmb_push-notification-item-type-${this.notification()?.type}`,\n    ];\n\n    if (this.notification()?.isFullColor)\n      classList.push('bmb_push-notification-item-full-color');\n    else classList.push('bmb_push-notification-item-regular-tmp');\n\n    if (!this.isExpanded)\n      classList.push('bmb_push-notification-item-contracted');\n\n    return classList;\n  }\n\n  getIconClasses(): string[] {\n    return [\n      'bmb_push-notification-item-icon',\n      `bmb_push-notification-item-icon-${this.notification()?.type}`,\n    ];\n  }\n\n  handleClose() {\n    this.onClose.emit();\n  }\n\n  handleExpandEvent() {\n    this.isExpanded = !this.isExpanded;\n  }\n\n  getAppIcon(): string {\n    return this.notification().appIcon ?? 'assets/images/tec-logo-mob.svg';\n  }\n\n  getAppName(): string {\n    return this.notification().appName ?? 'itesm.com';\n  }\n\n  handleDontAskAgain() {\n    const notification = this.notification();\n    if (notification.dontAskAgainEvent && notification?.id) {\n      notification.dontAskAgainEvent(notification?.id);\n    }\n  }\n\n  handleAction(action: INotificationAction) {\n    const { title, subTitle, content, isFullColor, id } = this.notification();\n\n    if (action.action === 'close') {\n      this.onClose.emit();\n    } else {\n      action.action({ title, subTitle, content, isFullColor, id });\n    }\n  }\n}\n",
            "styleUrl": "./bmb-push-notification-item.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section [ngClass]=\"getNotificationClasses()\">\n  @if (!notification().isFullColor) {\n    <header class=\"bmb_push-notification-item-header\">\n      <img\n        class=\"bmb_push-notification-item-header-icon\"\n        [src]=\"getAppIcon()\"\n        [alt]=\"getAppName()\"\n      />\n      <span class=\"bmb_push-notification-item-header-name\">{{\n        getAppName()\n      }}</span>\n      <button\n        (click)=\"handleExpandEvent()\"\n        class=\"bmb_push-notification-item-button bmb_push-notification-item-contract\"\n      >\n        <bmb-icon icon=\"keyboard_arrow_up\" />\n      </button>\n      <button (click)=\"handleClose()\" class=\"bmb_push-notification-item-button\">\n        <bmb-icon icon=\"close\" />\n      </button>\n    </header>\n  }\n  <ul class=\"bmb_push-notification-item-list\">\n    <li [ngClass]=\"getIconClasses()\">\n      <bmb-icon [icon]=\"notification().icon || 'info'\" />\n    </li>\n    <li class=\"bmb_push-notification-item-container\">\n      <h1 class=\"bmb_push-notification-item-title\">\n        <span class=\"bmb_push-notification-item-title-legend\">{{\n          notification().title\n        }}</span>\n        <span class=\"bmb_push-notification-item-title-date\">{{\n          notification().date\n        }}</span>\n      </h1>\n      @if (notification().subTitle) {\n        <h2 class=\"bmb_push-notification-item-subtitle\">\n          {{ notification().subTitle }}\n        </h2>\n      }\n      @if (notification().content) {\n        <p class=\"bmb_push-notification-item-content\">\n          {{ notification().content }}\n        </p>\n      }\n      @if (notification().dontAskAgainEvent) {\n        <div class=\"bmb_push-notification-item-dont-ask-again\">\n          <bmb-checkbox\n            id=\"dontAskAgainInput\"\n            [checked]=\"false\"\n            label=\"Don't ask again\"\n            labelPosition=\"after\"\n            (change)=\"handleDontAskAgain()\"\n          />\n          <section>\n            @for (action of notification().actions; track $index) {\n              <button\n                bmbButton\n                [appearance]=\"action.type ?? 'primary'\"\n                (click)=\"handleAction(action)\"\n              >\n                {{ action.title }}\n              </button>\n            }\n          </section>\n        </div>\n      }\n      @if (notification().userAvatar && notification().userName) {\n        <section class=\"bmb_push-notification-item-user\">\n          <div class=\"bmb_push-notification-item-user-avatar\">\n            <bmb-user-image\n              [altImage]=\"notification().userName ?? ''\"\n              [image]=\"notification().userAvatar ?? ''\"\n              size=\"mobile-small\"\n            />\n          </div>\n          <span class=\"bmb_push-notification-item-user-name\">{{\n            notification().userName\n          }}</span>\n          <span class=\"bmb_push-notification-item-user-mail\">{{\n            notification().userMail\n          }}</span>\n        </section>\n      }\n      @if (!notification().isFullColor && notification().media) {\n        <figure class=\"bmb_push-notification-item-media\">\n          <img\n            class=\"bmb_push-notification-item-media-picture\"\n            [src]=\"notification().media\"\n            [alt]=\"notification().title\"\n          />\n        </figure>\n      }\n    </li>\n    @if (notification().isFullColor) {\n      <li class=\"bmb_push-notification-item-close\">\n        <button\n          (click)=\"handleClose()\"\n          class=\"bmb_push-notification-item-button\"\n        >\n          <bmb-icon icon=\"close\" />\n        </button>\n      </li>\n    }\n  </ul>\n</section>\n"
        },
        {
            "name": "BmbRadialComponent",
            "id": "component-BmbRadialComponent-371aff7326f329b0ce55715b63f0938a641a086f80cae3769fbc81ab36a71bc64295142d7b4f087141d7edc4216b8d41cb27b2183e79da4127a7b7bf4e07f8c7",
            "file": "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-radial",
            "styleUrls": [
                "./bmb-radial.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-radial.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "ariaDescribedby",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "ariaLabelledby",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelPosition",
                    "defaultValue": "'after'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "\"before\" | \"after\"",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "change",
                    "defaultValue": "new EventEmitter<HTMLInputElement>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter<HTMLInputElement>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-radial',\n  templateUrl: './bmb-radial.component.html',\n  styleUrls: ['./bmb-radial.component.scss'],\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbRadialComponent {\n  @Input() id: string = '';\n  @Input() checked: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() value: string = '';\n  @Input() name: string = '';\n  @Input() label: string = '';\n  @Input() labelPosition: 'before' | 'after' = 'after';\n  @Input() ariaDescribedby: string = '';\n  @Input() ariaLabel: string = '';\n  @Input() ariaLabelledby: string = '';\n  @Input() required: boolean = false;\n\n  @Output() change: EventEmitter<HTMLInputElement> =\n    new EventEmitter<HTMLInputElement>();\n\n  handleChange(event: Event) {\n    const target = event.target as HTMLInputElement | null;\n    if (target && target.checked) {\n      this.change.emit(target);\n    }\n    event.stopPropagation();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const target = event.target as HTMLInputElement | null;\n\n    if (event.key === 'Enter' && target && !target.checked) {\n      target.checked = true;\n      this.change.emit(target);\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/mixins\" as mixins;\n@use \"../../../assets/styles/base/rem\" as rem;\n\n.bmb_radial {\n  align-items: center;\n  display: flex;\n  gap: rem.rem_calc(8);\n  position: relative;\n  width: fit-content;\n\n  input[type=\"radio\"] {\n    cursor: pointer;\n    height: rem.rem_calc(42);\n    margin: 0;\n    opacity: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    z-index: 1;\n\n    &:hover {\n      + .bmb_radial-box {\n        background-color: RGBA(var(--color-blue-primary), 0.1);\n      }\n    }\n\n    &:focus {\n      + .bmb_radial-box {\n        background-color: RGBA(var(--color-blue-primary), 0.2);\n      }\n    }\n\n    &:checked {\n      + .bmb_radial-box {\n        .bmb_radial-mark {\n          border-color: RGBA(var(--color-blue-primary));\n\n          &::after {\n            background-color: RGBA(var(--color-blue-primary));\n            border-radius: 100%;\n            bottom: 0;\n            display: block;\n            height: rem.rem_calc(8);\n            left: 0;\n            right: 0;\n            top: 0;\n            margin: auto;\n            width: rem.rem_calc(8);\n          }\n        }\n      }\n    }\n\n    &:disabled {\n      cursor: not-allowed;\n\n      + .bmb_radial-box {\n        .bmb_radial-mark {\n          opacity: 0.5;\n        }\n      }\n      &:hover {\n        + .bmb_radial-box {\n          background-color: transparent;\n        }\n      }\n    }\n  }\n\n  &-required {\n    .bmb_radial-mark {\n      border-color: RGBA(var(--color-mitec-red));\n    }\n  }\n\n  &-box {\n    align-items: center;\n    border-radius: 100%;\n    display: flex;\n    height: rem.rem_calc(42);\n    justify-content: center;\n    width: rem.rem_calc(42);\n  }\n\n  &-mark {\n    background-color: transparent;\n    border: rem.rem_calc(2) solid RGBA(var(--color-charade-700));\n    border-radius: 100%;\n    display: inline-block;\n    height: rem.rem_calc(18);\n    position: relative;\n    width: rem.rem_calc(18);\n\n    &::after {\n      content: \"\";\n      display: none;\n      position: absolute;\n    }\n  }\n\n  &-label {\n    color: RGBA(var(--color-charade-950));\n    flex: 1;\n    overflow: hidden;\n    padding-right: rem.rem_calc(10);\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    @include fonts.font(4, medium);\n  }\n\n  &-before {\n    .bmb_radial-label {\n      order: 1;\n    }\n    .bmb_radial-box {\n      order: 2;\n    }\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_radial {\n    input[type=\"radio\"] {\n      &:hover {\n        + .bmb_radial-box {\n          background-color: RGBA(var(--color-green-light), 0.1);\n        }\n      }\n\n      &:focus {\n        + .bmb_radial-box {\n          background-color: RGBA(var(--color-green-light), 0.2);\n        }\n      }\n\n      &:checked {\n        + .bmb_radial-box {\n          .bmb_radial-mark {\n            border-color: RGBA(var(--color-green-light));\n\n            &::after {\n              background-color: RGBA(var(--color-green-light));\n              border-radius: 100%;\n              bottom: 0;\n              display: block;\n              height: rem.rem_calc(8);\n              left: 0;\n              right: 0;\n              top: 0;\n              margin: auto;\n              width: rem.rem_calc(8);\n            }\n          }\n        }\n      }\n    }\n\n    &-mark {\n      border-color: RGBA(var(--color-charade-200));\n    }\n\n    &-label {\n      color: RGBA(var(--color-charade-50));\n    }\n  }\n}\n",
                    "styleUrl": "./bmb-radial.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<label\n  [attr.for]=\"id\"\n  class=\"bmb_radial\"\n  [class.bmb_radial-before]=\"labelPosition === 'before'\"\n  [class.bmb_radial-after]=\"labelPosition === 'after'\"\n  [class.bmb_radial-required]=\"required\"\n>\n  <input\n    type=\"radio\"\n    [id]=\"id\"\n    [attr.aria-describedby]=\"ariaDescribedby\"\n    [attr.aria-label]=\"ariaLabel\"\n    [attr.aria-labelledby]=\"ariaLabelledby\"\n    [attr.name]=\"name\"\n    [attr.value]=\"value\"\n    [checked]=\"checked\"\n    [disabled]=\"disabled\"\n    [required]=\"required\"\n    (change)=\"handleChange($event)\"\n    (keydown)=\"handleKeyDown($event)\"\n  />\n  <div class=\"bmb_radial-box\">\n    <span class=\"bmb_radial-mark\"></span>\n  </div>\n  @if (label) {\n    <span class=\"bmb_radial-label\">{{ label }}</span>\n  }\n</label>\n"
        },
        {
            "name": "BmbSearchInputComponent",
            "id": "component-BmbSearchInputComponent-9b740b4370423534755c3261bbe44114b855ebce8f7cd2f61a20122b3dd1b854ebb66177990388cb2ef29196176deff1768642d8e333e18dea0d4ac65f0255f8",
            "file": "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-search-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-search-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isServerSideFilter",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "serverSideFilteredData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClearField",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "onServerSideFilterEvent",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "EventEmitter<string>"
                },
                {
                    "name": "onValueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "childNodes",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filterControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "filteredData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "filterField",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef | null",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'filterInput'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "isDialogOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "uid",
                    "defaultValue": "Date.now().toString(36) + (Math.floor(Math.random() * 90) + 10)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "clearFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "filteredValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDialogOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleItemClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbLoaderComponent",
                    "type": "component"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ElementRef,\n  SimpleChanges,\n  HostListener,\n  ChangeDetectorRef,\n  OnChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbButtonDirective } from '../../directives/button.directive';\nimport { BmbLoaderComponent } from '../bmb-loader/bmb-loader.component';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'bmb-search-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbButtonDirective,\n    BmbLoaderComponent,\n    ReactiveFormsModule,\n  ],\n  templateUrl: './bmb-search-input.component.html',\n  styleUrl: './bmb-search-input.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbSearchInputComponent implements OnChanges {\n  @Input() data: string[] = [];\n  @Input() isLoading: boolean = false;\n  @Input() isServerSideFilter: boolean = false;\n  @Input() placeholder: string = '';\n  @Input() serverSideFilteredData: string[] = [];\n\n  @Output() onValueChange: EventEmitter<string> = new EventEmitter<string>();\n  @Output() onServerSideFilterEvent: EventEmitter<string> =\n    new EventEmitter<string>();\n  @Output() onClearField: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  @ViewChild('filterInput') filterField: ElementRef | null = null;\n\n  constructor(\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.filterControl.valueChanges\n      .pipe(debounceTime(300))\n      .subscribe((value) => {\n        this.filteredValue(value);\n      });\n  }\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent) {\n    if (!this.childNodes?.contains(event.target)) {\n      this.isDialogOpen = false;\n    }\n  }\n\n  value: string = '';\n  filteredData: string[] = [];\n  uid: string = Date.now().toString(36) + (Math.floor(Math.random() * 90) + 10);\n  isDialogOpen: boolean = false;\n  filterControl = new FormControl();\n\n  private childNodes: any = null;\n\n  ngAfterViewInit() {\n    this.childNodes = this.elementRef.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['serverSideFilteredData'] && this.isServerSideFilter) {\n      this.filteredData = changes['serverSideFilteredData'].currentValue;\n    } else {\n      this.filteredData = this.data;\n    }\n    if (\n      changes['serverSideFilteredData'] &&\n      changes['isLoading'].currentValue\n    ) {\n      this.isDialogOpen =\n        changes['serverSideFilteredData']?.currentValue?.length ||\n        changes['isLoading']?.currentValue;\n    }\n  }\n\n  filteredValue(value: string): void {\n    if (value.length >= 1) {\n      if (this.isServerSideFilter) {\n        this.onServerSideFilterEvent.emit(value);\n      } else {\n        this.filteredData = this.data.filter((item) =>\n          item.toLowerCase().includes(value.toLowerCase()),\n        );\n        this.isDialogOpen = true;\n      }\n    } else {\n      this.filteredData = [];\n    }\n    this.cdr.detectChanges();\n  }\n\n  clearFilter(): void {\n    if (this.filterField?.nativeElement) {\n      this.filterField.nativeElement.value = '';\n    }\n    this.isDialogOpen = false;\n    this.onClearField.emit(true);\n  }\n\n  getDialogOpen(): string {\n    if (this.isDialogOpen) {\n      return 'bmb_search-input-dialog-open';\n    }\n\n    return '';\n  }\n\n  handleItemClick(event: string): void {\n    this.onValueChange.emit(event);\n    this.isDialogOpen = false;\n    if (this.filterField?.nativeElement) {\n      this.filterField.nativeElement.value = event;\n    }\n  }\n\n  openDialog() {\n    this.isDialogOpen = !this.isDialogOpen;\n  }\n}\n",
            "styleUrl": "./bmb-search-input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<section class=\"bmb_search-input\">\n  <div class=\"bmb_search-input-field\" (click)=\"openDialog()\" onkeypress=\"\">\n    <label class=\"bmb_search-input-field-label\" [for]=\"'filter-' + uid\">\n      <bmb-icon icon=\"search\" />\n    </label>\n    <input\n      class=\"bmb_search-input-field-input\"\n      type=\"text\"\n      #filterInput\n      [id]=\"'filter-' + uid\"\n      [name]=\"'filter-' + uid\"\n      [formControl]=\"filterControl\"\n      [placeholder]=\"placeholder\"\n    />\n    <button\n      class=\"bmb_search-input-field-clear\"\n      [disabled]=\"isLoading\"\n      (click)=\"clearFilter()\"\n    >\n      <bmb-icon icon=\"close\" />\n    </button>\n  </div>\n  <dialog\n    class=\"bmb_search-input-dialog\"\n    [ngClass]=\"{ 'bmb_search-input-dialog-open': isDialogOpen }\"\n  >\n    @if (isLoading) {\n      <bmb-icon icon=\"progress_activity\" class=\"bmb_loader-loading\" />\n    } @else {\n      <ul class=\"bmb_search-input-dialog-list\">\n        @for (item of filteredData; track $index) {\n          <li class=\"bmb_search-input-dialog-list-item\">\n            <button\n              class=\"bmb_search-input-dialog-list-item-button\"\n              (click)=\"handleItemClick(item)\"\n            >\n              {{ item }}\n            </button>\n          </li>\n        }\n      </ul>\n    }\n  </dialog>\n</section>\n"
        },
        {
            "name": "BmbSelectComponent",
            "id": "component-BmbSelectComponent-a880a39fd600ce3b45297ea71c1ffb3a65a3a196649cfa7dfa998ff714b4988847470cfe10c146cf06ccae9f4ab862760de8033e625cc5419eb25ff5418bb326",
            "file": "projects/ds-ng/src/lib/components/bmb-select/bmb-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onValueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "childNodes",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "customTemplate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 56
                }
            ],
            "methodsClass": [
                {
                    "name": "getClassName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showPlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input,\n  HostListener,\n  ElementRef,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-select',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  templateUrl: './bmb-select.component.html',\n  styleUrl: './bmb-select.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbSelectComponent {\n  @Input() value: unknown = null;\n\n  @Output() onValueChange: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent) {\n    if (this.childNodes?.contains(event.target)) {\n      const targetElement = event.target as HTMLElement;\n      const value = targetElement\n        .closest('bmb-select-item')\n        ?.getAttribute('value');\n      if (value) {\n        this.onValueChange.emit(value);\n      }\n      this.isExpanded = !this.isExpanded;\n    } else {\n      this.isExpanded = false;\n    }\n  }\n\n  customTemplate = false;\n\n  ngAfterViewInit() {\n    this.childNodes = this.elementRef.nativeElement;\n  }\n\n  showPlaceholder() {\n    this.customTemplate = true;\n  }\n\n  isExpanded: boolean = false;\n\n  getClassName(): string {\n    if (this.isExpanded) return 'bmb_select-list-open';\n    return '';\n  }\n\n  private childNodes: any = null;\n}\n",
            "styleUrl": "./bmb-select.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section\n  class=\"bmb_select\"\n  role=\"combobox\"\n  aria-autocomplete=\"none\"\n  aria-haspopup=\"listbox\"\n  tabindex=\"0\"\n  aria-expanded=\"true\"\n>\n  <span class=\"bmb_select-input\">\n    <button class=\"bmb_select-input-button\">\n      <ng-content select=\"[selectTemplate]\"></ng-content>\n    </button>\n    <bmb-icon icon=\"expand_more\" />\n  </span>\n  <ul class=\"bmb_select-list\" [ngClass]=\"getClassName()\">\n    <ng-content></ng-content>\n  </ul>\n</section>\n"
        },
        {
            "name": "BmbSelectItemComponent",
            "id": "component-BmbSelectItemComponent-b7574137dc67b69b5c9e68026b9b21c3545b0c84522489689aebb78d949069d87b38051308018dd5a6f4c6252c446b744164869e26d3fe0d7ccd478a589f437b",
            "file": "projects/ds-ng/src/lib/components/bmb-select/bmb-select-item/bmb-select-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-select-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-select-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string | number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'bmb-select-item',\n  standalone: true,\n  imports: [],\n  templateUrl: './bmb-select-item.component.html',\n  styleUrl: './bmb-select-item.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbSelectItemComponent {\n  @Input() value: string | number = '';\n}\n",
            "styleUrl": "./bmb-select-item.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<li class=\"bmb_select-item\">\n  <button>\n    <ng-content></ng-content>\n  </button>\n</li>\n"
        },
        {
            "name": "BmbSidebarComponent",
            "id": "component-BmbSidebarComponent-d3e56c60a9ca79205d60453181cbd878368980a9e6338b82e9eb8d6dcd437240eb94863a9c54fcdbc5aa84c6d23c976006e2e04fd7a265dffc55d72f3d3601b9",
            "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-sidebar",
            "styleUrls": [
                "./bmb-sidebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-sidebar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "elements",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "SidebarElement[][]",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Navigation'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "hoveredElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarElement | null",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "isActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "selectedElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarElement | null",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "checkIfFocusInsideSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closeChildren",
                    "args": [
                        {
                            "name": "element",
                            "type": "SidebarElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "SidebarElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleKeydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isExternalLink",
                    "args": [
                        {
                            "name": "link",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "link",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isLinkActive",
                    "args": [
                        {
                            "name": "link",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "link",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFocusIn",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:focusin', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFocusOut",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:focusout', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openChildren",
                    "args": [
                        {
                            "name": "element",
                            "type": "SidebarElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "SidebarElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setExternalLinkActive",
                    "args": [
                        {
                            "name": "link",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "link",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleChildren",
                    "args": [
                        {
                            "name": "element",
                            "type": "SidebarElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "SidebarElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:focusin",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53
                },
                {
                    "name": "window:focusout",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  OnInit,\n  Renderer2,\n  HostListener,\n} from '@angular/core';\nimport { Router, RouterModule, NavigationEnd } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { SidebarElement } from './bmb-sidebar.interface';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'bmb-sidebar',\n  standalone: true,\n  imports: [BmbIconComponent, CommonModule, RouterModule],\n  templateUrl: './bmb-sidebar.component.html',\n  styleUrls: ['./bmb-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbSidebarComponent implements OnInit {\n  @Input() elements: SidebarElement[][] = [];\n  @Input() title: string = 'Navigation';\n\n  currentUrl: string = '';\n  isOpen: boolean = false;\n  selectedElement: SidebarElement | null = null;\n  hoveredElement: SidebarElement | null = null;\n  isActive: boolean = false;\n\n  constructor(\n    private router: Router,\n    private renderer: Renderer2,\n  ) {\n    this.router.events\n      .pipe(\n        filter(\n          (event): event is NavigationEnd => event instanceof NavigationEnd,\n        ),\n      )\n      .subscribe((event: NavigationEnd) => {\n        this.currentUrl = event.urlAfterRedirects;\n      });\n  }\n\n  ngOnInit() {}\n\n  @HostListener('window:focusin', ['$event'])\n  onFocusIn(event: FocusEvent) {\n    this.checkIfFocusInsideSidebar();\n  }\n\n  @HostListener('window:focusout', ['$event'])\n  onFocusOut(event: FocusEvent) {\n    this.checkIfFocusInsideSidebar();\n  }\n\n  isExternalLink(link: string): boolean {\n    return (\n      link.startsWith('http://') ||\n      link.startsWith('https://') ||\n      link.startsWith('#')\n    );\n  }\n\n  setExternalLinkActive(link: string) {\n    if (!this.isExternalLink(link)) {\n      this.currentUrl = link;\n    }\n  }\n\n  isLinkActive(link: string): boolean {\n    return this.currentUrl === link;\n  }\n\n  toggleSidebar() {\n    this.isOpen = !this.isOpen;\n    if (this.isOpen) {\n      this.renderer.addClass(document.body, 'bmb_sidebar-body-hide');\n    } else {\n      this.renderer.removeClass(document.body, 'bmb_sidebar-body-hide');\n    }\n  }\n\n  toggleChildren(element: SidebarElement) {\n    if (this.selectedElement === element) {\n      this.selectedElement = null;\n    } else {\n      this.selectedElement = element;\n    }\n  }\n\n  openChildren(element: SidebarElement) {\n    this.hoveredElement = element;\n  }\n\n  closeChildren(element: SidebarElement) {\n    if (this.hoveredElement === element) {\n      this.hoveredElement = null;\n    }\n  }\n\n  handleKeydown(event: KeyboardEvent, element: any): void {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.toggleChildren(element);\n      this.isActive = true; // Activa el sidebar\n    }\n  }\n\n  checkIfFocusInsideSidebar() {\n    const sidebar = document.querySelector('.bmb_sidebar-desktop');\n    const activeElement = document.activeElement;\n    if (sidebar && activeElement && sidebar.contains(activeElement)) {\n      this.isActive = true;\n    } else {\n      this.isActive = false;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/mixins\" as mixins;\n@use \"../../../assets/styles/base/rem\" as rem;\n\n// Mixins for mobile\n@mixin content() {\n  cursor: pointer;\n  top: 10%;\n  width: rem.rem_calc(28);\n}\n\n@mixin isOpen() {\n  height: 100vh;\n  overflow: auto;\n  padding: rem.rem_calc(24);\n  top: 0;\n  width: 100%;\n\n  .bmb_sidebar-button {\n    border-bottom: rem.rem_calc(1) solid RGBA(var(--color-charade-800));\n    height: rem.rem_calc(40);\n    justify-content: space-between;\n    margin-bottom: rem.rem_calc(16);\n    padding: rem.rem_calc(8 8 16 8);\n\n    &-icon {\n      font-size: rem.rem_calc(24);\n    }\n  }\n\n  .bmb_sidebar-text {\n    opacity: 1;\n    overflow: hidden;\n    visibility: visible;\n  }\n}\n\n@mixin list() {\n  margin: rem.rem_calc(16 0 0 0);\n}\n\n.bmb_sidebar {\n  background-color: RGBA(var(--color-black-primary));\n  border-radius: rem.rem_calc(0 8 8 0);\n  left: 0;\n  position: fixed;\n  transition: width 0.3s ease;\n  z-index: 1;\n\n  &-body-hide {\n    overflow: hidden;\n  }\n\n  &-mobile {\n    @include content();\n\n    @media (max-height: 630px) {\n      @include content();\n    }\n\n    &.bmb_sidebar-open {\n      @include isOpen();\n\n      @media (max-height: 630px) {\n        @include isOpen();\n      }\n    }\n\n    .bmb_sidebar-button {\n      align-items: center;\n      display: flex;\n      height: rem.rem_calc(72);\n      justify-content: center;\n      margin: 0;\n      padding: 0;\n      width: 100%;\n\n      &-icon {\n        color: RGBA(var(--color-white-primary));\n        font-size: rem.rem_calc(16);\n      }\n\n      &-text {\n        color: RGBA(var(--color-white-primary));\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        @include fonts.font(6, semibold);\n      }\n    }\n\n    .bmb_sidebar-list {\n      @include list();\n\n      @media (max-height: 630px) {\n        @include list();\n      }\n    }\n\n    .bmb_sidebar-children {\n      height: 100vh;\n      left: 0;\n      position: fixed;\n      top: 0;\n      width: 100vw;\n\n      &-open {\n        display: flex;\n      }\n    }\n  }\n\n  &-desktop {\n    cursor: auto;\n    display: none;\n    height: rem.rem_calc(480);\n    overflow: hidden;\n    padding: rem.rem_calc(24);\n    top: 50%;\n    transform: translateY(-50%);\n    width: rem.rem_calc(88);\n\n    &:hover,\n    &.active {\n      height: rem.rem_calc(480);\n      overflow: visible;\n      width: rem.rem_calc(280);\n\n      .bmb_sidebar-text {\n        opacity: 1;\n        overflow: hidden;\n        visibility: visible;\n      }\n\n      .bmb_sidebar-item {\n        width: rem.rem_calc(232);\n      }\n    }\n\n    .bmb_sidebar-item {\n      position: relative;\n    }\n\n    .bmb_sidebar-link {\n      &:hover {\n        + .bmb_sidebar-children {\n          border-radius: rem.rem_calc(0 24 24 0);\n          display: flex;\n          left: 100%;\n          position: absolute;\n          top: 0;\n          width: rem.rem_calc(264);\n        }\n      }\n    }\n\n    .bmb_sidebar-children-open {\n      border-radius: rem.rem_calc(0 24 24 0);\n      display: flex;\n      left: 100%;\n      position: absolute;\n      top: 0;\n      width: rem.rem_calc(264);\n    }\n\n    .bmb_sidebar-title {\n      display: none;\n    }\n  }\n\n  &-list {\n    display: flex;\n    flex-flow: column;\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n\n    &:nth-of-type(n + 2) {\n      border-top: rem.rem_calc(1) solid RGBA(var(--color-charade-800));\n      margin-top: rem.rem_calc(16);\n      padding-top: rem.rem_calc(16);\n    }\n  }\n\n  &-item {\n    align-items: center;\n    display: flex;\n    height: rem.rem_calc(40);\n    justify-content: flex-start;\n    width: auto;\n  }\n\n  &-link {\n    align-items: center;\n    color: RGBA(var(--color-white-primary));\n    cursor: pointer;\n    display: flex;\n    height: 100%;\n    justify-content: flex-start;\n    text-align: left;\n    text-decoration: none;\n    transition: all 0.3s ease;\n    width: 100%;\n\n    &:hover,\n    &-active {\n      background-color: RGBA(var(--color-white-primary));\n      border-radius: rem.rem_calc(24);\n      color: RGBA(var(--color-black-primary));\n    }\n  }\n\n  &-icon,\n  &-arrow {\n    font-size: rem.rem_calc(24);\n    padding: rem.rem_calc(0 8);\n  }\n\n  &-text {\n    display: block;\n    flex: 1;\n    opacity: 0;\n    text-overflow: ellipsis;\n    visibility: hidden;\n    white-space: nowrap;\n    width: rem.rem_calc(132);\n    @include fonts.font(4, medium);\n  }\n\n  &-children {\n    background-color: RGBA(var(--color-black-primary));\n    display: none;\n    flex-flow: column;\n    padding: rem.rem_calc(24);\n  }\n\n  &-title {\n    align-items: center;\n    border-bottom: rem.rem_calc(1) solid RGBA(var(--color-charade-800));\n    color: RGBA(var(--color-white-primary));\n    display: flex;\n    height: rem.rem_calc(40);\n    justify-content: space-between;\n    margin-bottom: rem.rem_calc(16);\n    padding: rem.rem_calc(8 8 16 8);\n\n    &-button {\n      color: RGBA(var(--color-white-primary));\n      padding: 0;\n\n      .bmb_sidebar-icon {\n        padding: 0;\n      }\n    }\n\n    .bmb_sidebar-text {\n      display: flex;\n      > span {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n    }\n  }\n\n  @include mixins.media-query(768, \"min\") {\n    &-mobile {\n      display: none;\n    }\n\n    &-desktop {\n      display: block;\n    }\n  }\n\n  @media (max-height: 630px) {\n    &-mobile {\n      display: block;\n    }\n\n    &-desktop {\n      display: none;\n    }\n  }\n}\n",
                    "styleUrl": "./bmb-sidebar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- Template for navigation -->\n<ng-template #sidebarTemplate>\n  <ng-container *ngFor=\"let group of elements.slice(0, 2)\">\n    <ul class=\"bmb_sidebar-list\">\n      <li *ngFor=\"let element of group.slice(0, 5)\" class=\"bmb_sidebar-item\">\n        <ng-container *ngIf=\"!isExternalLink(element.link); else externalLink\">\n          <ng-container *ngIf=\"!element.children; else hasChildren\">\n            <a\n              class=\"bmb_sidebar-link\"\n              [id]=\"element.id\"\n              [routerLink]=\"element.link\"\n              routerLinkActive=\"bmb_sidebar-link-active\"\n              [routerLinkActiveOptions]=\"{ exact: true }\"\n              (keydown)=\"handleKeydown($event, element)\"\n            >\n              <bmb-icon\n                class=\"bmb_sidebar-icon\"\n                [icon]=\"element.icon\"\n                [materialIcon]=\"true\"\n              />\n              <span class=\"bmb_sidebar-text\">{{ element.title }}</span>\n            </a>\n          </ng-container>\n          <ng-template #hasChildren>\n            <button\n              class=\"bmb_sidebar-link\"\n              [id]=\"element.id\"\n              (click)=\"toggleChildren(element)\"\n              (keydown)=\"handleKeydown($event, element)\"\n              (mouseenter)=\"openChildren(element)\"\n              (mouseleave)=\"closeChildren(element)\"\n            >\n              <bmb-icon\n                class=\"bmb_sidebar-icon\"\n                [icon]=\"element.icon\"\n                [materialIcon]=\"true\"\n              />\n              <span class=\"bmb_sidebar-text\">{{ element.title }}</span>\n              <bmb-icon class=\"bmb_sidebar-arrow\" icon=\"chevron_right\" />\n            </button>\n            <div\n              class=\"bmb_sidebar-children\"\n              [class.bmb_sidebar-children-open]=\"\n                selectedElement === element ||\n                (!isOpen && hoveredElement === element)\n              \"\n              (mouseenter)=\"!isOpen && openChildren(element)\"\n              (mouseleave)=\"!isOpen && closeChildren(element)\"\n            >\n              <div class=\"bmb_sidebar-title\">\n                <button\n                  class=\"bmb_sidebar-title-button\"\n                  [id]=\"element.id\"\n                  (click)=\"toggleChildren(element)\"\n                >\n                  <bmb-icon class=\"bmb_sidebar-icon\" icon=\"chevron_left\" />\n                </button>\n                <div class=\"bmb_sidebar-text\">\n                  <bmb-icon\n                    class=\"bmb_sidebar-icon\"\n                    [icon]=\"selectedElement?.icon ?? ''\"\n                    [materialIcon]=\"true\"\n                  />\n                  <span>{{ selectedElement?.title }}</span>\n                </div>\n                <button\n                  class=\"bmb_sidebar-title-button\"\n                  [id]=\"element.id\"\n                  (click)=\"toggleSidebar()\"\n                >\n                  <bmb-icon class=\"bmb_sidebar-icon\" icon=\"close\" />\n                </button>\n              </div>\n              <ul class=\"bmb_sidebar-list\">\n                <li\n                  *ngFor=\"let child of element.children?.slice(0, 6)\"\n                  class=\"bmb_sidebar-item\"\n                >\n                  <ng-container\n                    *ngIf=\"!isExternalLink(child.link); else externalLinkChild\"\n                  >\n                    <a\n                      class=\"bmb_sidebar-link\"\n                      [id]=\"child.id\"\n                      [routerLink]=\"child.link\"\n                      routerLinkActive=\"bmb_sidebar-link-active\"\n                      [routerLinkActiveOptions]=\"{ exact: true }\"\n                      (keydown)=\"handleKeydown($event, child)\"\n                    >\n                      <bmb-icon\n                        class=\"bmb_sidebar-icon\"\n                        [icon]=\"child.icon\"\n                        [materialIcon]=\"true\"\n                      />\n                      <span class=\"bmb_sidebar-text\">{{ child.title }}</span>\n                    </a>\n                  </ng-container>\n                  <ng-template #externalLinkChild>\n                    <a\n                      class=\"bmb_sidebar-link\"\n                      [id]=\"child.id\"\n                      [href]=\"child.link\"\n                      [target]=\"child.target ? child.target : '_blank'\"\n                      rel=\"noopener noreferrer\"\n                      (keydown)=\"handleKeydown($event, child)\"\n                    >\n                      <bmb-icon\n                        class=\"bmb_sidebar-icon\"\n                        [icon]=\"child.icon\"\n                        [materialIcon]=\"true\"\n                      />\n                      <span class=\"bmb_sidebar-text\">{{ child.title }}</span>\n                    </a>\n                  </ng-template>\n                </li>\n              </ul>\n            </div>\n          </ng-template>\n        </ng-container>\n        <ng-template #externalLink>\n          <a\n            class=\"bmb_sidebar-link\"\n            [id]=\"element.id\"\n            [ngClass]=\"{\n              'bmb_sidebar-link-active': isLinkActive(element.link),\n            }\"\n            [href]=\"element.link\"\n            [target]=\"element.target ? element.target : '_blank'\"\n            rel=\"noopener noreferrer\"\n            (click)=\"setExternalLinkActive(element.link)\"\n            (keydown)=\"handleKeydown($event, element)\"\n          >\n            <bmb-icon\n              class=\"bmb_sidebar-icon\"\n              [icon]=\"element.icon\"\n              [materialIcon]=\"true\"\n            />\n            <span class=\"bmb_sidebar-text\">{{ element.title }}</span>\n          </a>\n        </ng-template>\n      </li>\n    </ul>\n  </ng-container>\n</ng-template>\n\n<!-- Desktop -->\n<nav\n  class=\"bmb_sidebar bmb_sidebar-desktop\"\n  aria-label=\"Sidebar Navigation\"\n  [ngClass]=\"{ active: isActive }\"\n>\n  <div class=\"bmb_sidebar-content\">\n    <ng-container *ngTemplateOutlet=\"sidebarTemplate\"></ng-container>\n  </div>\n</nav>\n\n<!-- Mobile -->\n<nav\n  class=\"bmb_sidebar bmb_sidebar-mobile\"\n  [class.bmb_sidebar-open]=\"isOpen\"\n  aria-label=\"Sidebar Navigation\"\n>\n  <button class=\"bmb_sidebar-button\" type=\"button\" (click)=\"toggleSidebar()\">\n    <span *ngIf=\"isOpen\" class=\"bmb_sidebar-button-text\">{{ title }}</span>\n    <bmb-icon\n      class=\"bmb_sidebar-button-icon\"\n      [icon]=\"isOpen ? 'close' : 'arrow_forward_ios'\"\n    />\n  </button>\n  <ng-container *ngIf=\"isOpen\">\n    <ng-container *ngTemplateOutlet=\"sidebarTemplate\"></ng-container>\n  </ng-container>\n</nav>\n"
        },
        {
            "name": "BmbSkeletonComponent",
            "id": "component-BmbSkeletonComponent-9dd2c544077689cd30885ac145d8ce45abb68d9f049d34be4ba15f4dda2ef1973bfacfbfaaa265c96ea94cddec9a285cfc37bd6e91ec31a13b20d45c3d7c707d",
            "file": "projects/ds-ng/src/lib/components/bmb-skeleton/bmb-skeleton.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-skeleton",
            "styleUrls": [
                "./bmb-skeleton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-skeleton.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-skeleton',\n  standalone: true,\n  imports: [CommonModule],\n  styleUrls: ['./bmb-skeleton.component.scss'],\n  templateUrl: './bmb-skeleton.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbSkeletonComponent {\n  @Input() type: string = '';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"../../../assets/styles/base/rem\" as rem;\n\n@keyframes skeleton-light {\n  0% {\n    background-color: RGBA(var(--color-charade-100), 1);\n  }\n  50% {\n    background-color: RGBA(var(--color-charade-200), 1);\n  }\n  100% {\n    background-color: RGBA(var(--color-charade-100), 1);\n  }\n}\n\n@keyframes skeleton-dark {\n  0% {\n    background-color: RGBA(var(--color-charade-700), 1);\n  }\n  50% {\n    background-color: RGBA(var(--color-charade-600), 1);\n  }\n  100% {\n    background-color: RGBA(var(--color-charade-700), 1);\n  }\n}\n\n.bmb_skeleton {\n  &-circle {\n    animation: skeleton-light 1.5s infinite linear;\n    background-color: RGBA(var(--color-charade-100), 1);\n    border-radius: 100%;\n  }\n\n  &-headline {\n    animation: skeleton-light 1.5s infinite linear;\n    background-color: RGBA(var(--color-charade-100), 1);\n    border-radius: rem.rem_calc(15);\n    height: rem.rem_calc(24);\n    width: 100%;\n  }\n\n  &-header {\n    align-items: center;\n    background-color: RGBA(var(--color-charade-50), 1);\n    border-radius: rem.rem_calc(0 0 12 12);\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: rem.rem_calc(16);\n    padding: rem.rem_calc(16);\n\n    .bmb_skeleton-circle {\n      height: rem.rem_calc(24);\n      width: rem.rem_calc(24);\n    }\n\n    .bmb_skeleton-headline {\n      width: calc(100% - rem.rem_calc(128));\n    }\n  }\n\n  &-stray {\n    align-items: center;\n    background-color: RGBA(var(--color-charade-50), 1);\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: rem.rem_calc(16);\n    padding: rem.rem_calc(16 38);\n\n    &-box {\n      width: calc(100% - rem.rem_calc(150));\n    }\n\n    .bmb_skeleton-circle {\n      height: rem.rem_calc(64);\n      width: rem.rem_calc(64);\n    }\n\n    .bmb_skeleton-headline {\n      &:last-child {\n        margin-top: rem.rem_calc(16);\n      }\n    }\n  }\n\n  &-generic1 {\n    background-color: RGBA(var(--color-charade-50), 1);\n    border-radius: rem.rem_calc(24);\n    margin-bottom: rem.rem_calc(16);\n    padding: rem.rem_calc(40 16);\n\n    .bmb_skeleton-headline {\n      margin-bottom: rem.rem_calc(40);\n\n      &:last-child {\n        margin: 0;\n      }\n    }\n  }\n\n  &-generic2 {\n    margin-bottom: rem.rem_calc(16);\n    padding: rem.rem_calc(0 16);\n\n    &-box {\n      background-color: RGBA(var(--color-charade-50), 1);\n      border-radius: rem.rem_calc(24);\n      height: rem.rem_calc(296);\n      margin-bottom: rem.rem_calc(33);\n    }\n\n    .bmb_skeleton-headline {\n      margin: 0 auto rem.rem_calc(40);\n      width: calc(100% - rem.rem_calc(32));\n\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n  }\n\n  &-generic3 {\n    margin-bottom: rem.rem_calc(16);\n\n    &-header {\n      background-color: RGBA(var(--color-charade-50), 1);\n      border: rem.rem_calc(1) solid RGBA(var(--color-charade-300), 1);\n      border-radius: rem.rem_calc(24 24 0 0);\n      height: rem.rem_calc(80);\n    }\n\n    &-content {\n      background-color: RGBA(var(--color-charade-200), 1);\n      border: rem.rem_calc(1) solid RGBA(var(--color-charade-300), 1);\n      border-radius: rem.rem_calc(0 0 24 24);\n      height: rem.rem_calc(368);\n    }\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_skeleton {\n    &-circle,\n    &-headline {\n      animation: skeleton-dark 1.5s infinite linear;\n      background-color: RGBA(var(--color-charade-700), 1);\n    }\n\n    &-header,\n    &-stray,\n    &-generic1 {\n      background-color: RGBA(var(--color-charade-800), 1);\n    }\n\n    &-generic2 {\n      &-box {\n        background-color: RGBA(var(--color-charade-800), 1);\n      }\n    }\n\n    &-generic3 {\n      &-header {\n        background-color: RGBA(var(--color-charade-800), 1);\n        border-color: RGBA(var(--color-charade-800), 1);\n      }\n\n      &-content {\n        background-color: RGBA(var(--color-charade-950), 1);\n        border-color: RGBA(var(--color-charade-800), 1);\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./bmb-skeleton.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb_skeleton\">\n  @switch (type) {\n    @case (\"stray\") {\n      <div class=\"bmb_skeleton-stray\">\n        <div class=\"bmb_skeleton-circle\"></div>\n        <div class=\"bmb_skeleton-stray-box\">\n          <div class=\"bmb_skeleton-headline\"></div>\n          <div class=\"bmb_skeleton-headline\"></div>\n        </div>\n      </div>\n    }\n    @case (\"generic1\") {\n      <div class=\"bmb_skeleton-generic1\">\n        <div class=\"bmb_skeleton-headline\"></div>\n        <div class=\"bmb_skeleton-headline\"></div>\n        <div class=\"bmb_skeleton-headline\"></div>\n        <div class=\"bmb_skeleton-headline\"></div>\n      </div>\n    }\n    @case (\"generic2\") {\n      <div class=\"bmb_skeleton-generic2\">\n        <div class=\"bmb_skeleton-generic2-box\"></div>\n        <div class=\"bmb_skeleton-headline\"></div>\n        <div class=\"bmb_skeleton-headline\"></div>\n      </div>\n    }\n    @case (\"generic3\") {\n      <div class=\"bmb_skeleton-generic3\">\n        <div class=\"bmb_skeleton-generic3-header\"></div>\n        <div class=\"bmb_skeleton-generic3-content\"></div>\n      </div>\n    }\n    @default {\n      <div class=\"bmb_skeleton-header\">\n        <div class=\"bmb_skeleton-circle\"></div>\n        <div class=\"bmb_skeleton-headline\"></div>\n        <div class=\"bmb_skeleton-circle\"></div>\n      </div>\n    }\n  }\n</div>\n"
        },
        {
            "name": "BmbStatCounterComponent",
            "id": "component-BmbStatCounterComponent-1bdde546f9a2286e251035e1643025af76bfae47f1a03dd00ae808179f5c81bbf2083be04ca3eb2c545e49b7c59153c2892f33f8051c8092e0cee6b00669ebb6",
            "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-stat-counter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-stat-counter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeStep",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "totalSteps",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onStepPress",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getStepsArray",
                    "args": [],
                    "optional": false,
                    "returnType": "number[]",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onStepClicked",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  styleUrl: './bmb-stat-counter.component.scss',\n  selector: 'bmb-stat-counter',\n  templateUrl: './bmb-stat-counter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbStatCounterComponent {\n  @Input() activeStep: number = 0;\n  @Input() totalSteps?: number = 0;\n  @Output() onStepPress: EventEmitter<number> = new EventEmitter<number>();\n\n  getStepsArray(): number[] {\n    return new Array(this.totalSteps || 0).fill(0).map((_, i) => i);\n  }\n\n  onStepClicked(index: number): void {\n    this.activeStep = index;\n    this.onStepPress.emit(index);\n  }\n}\n",
            "styleUrl": "./bmb-stat-counter.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb_stat_counter\">\n  <div\n    class=\"bmb_stat_counter-item\"\n    *ngFor=\"let i of getStepsArray()\"\n    [attr.data-bs-slide-to]=\"i\"\n    [ngClass]=\"{ active: activeStep === i, completed: activeStep > i }\"\n    (click)=\"onStepClicked(i)\"\n  >\n    <div\n      class=\"bmb_stat_counter-step\"\n      [ngClass]=\"{ active: activeStep === i, completed: activeStep > i }\"\n    >\n      <span *ngIf=\"activeStep == i || activeStep < i\">{{ i + 1 }}</span>\n      @if (activeStep > i) {\n        <bmb-icon [icon]=\"'done'\" class=\"material-icons\" />\n      }\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "BmbStepProgressBarComponent",
            "id": "component-BmbStepProgressBarComponent-9bc985e5797003785e54c6f1f179ae62f2c3802bd1047d61e28100329b7553a8249b24682b1e81bd0d20f367b5eeb5a8df2a5683c4cc9fc6c93852d1bf793f3d",
            "file": "projects/ds-ng/src/lib/components/bmb-step-progress-bar/bmb-step-progress-bar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-step-progress-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-step-progress-bar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeStep",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "freeze",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "labelComplete",
                    "defaultValue": "'Completo'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelIncomplete",
                    "defaultValue": "'Pendiente'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelSteps",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'normal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "\"normal\" | \"small\"",
                    "decorators": []
                },
                {
                    "name": "totalSteps",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "\"horizontal\" | \"vertical\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onStepPress",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getStepsArray",
                    "args": [],
                    "optional": false,
                    "returnType": "number[]",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onStepClicked",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-step-progress-bar',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  templateUrl: './bmb-step-progress-bar.component.html',\n  styleUrl: './bmb-step-progress-bar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbStepProgressBarComponent {\n  @Input() activeStep: number = 0;\n  @Input() totalSteps?: number = 0;\n  @Input() size?: 'normal' | 'small' = 'normal';\n  @Input() freeze: boolean = false;\n  @Input() type: 'horizontal' | 'vertical' = 'vertical';\n  @Input() labelSteps: string[] = [];\n  @Input() labelComplete: string = 'Completo';\n  @Input() labelIncomplete: string = 'Pendiente';\n\n  @Output() onStepPress: EventEmitter<number> = new EventEmitter<number>();\n\n  getStepsArray(): number[] {\n    return new Array(this.totalSteps || 0).fill(0).map((_, i) => i);\n  }\n\n  onStepClicked(index: number): void {\n    if (!this.freeze) {\n      this.activeStep = index;\n      this.onStepPress.emit(index);\n    }\n  }\n}\n",
            "styleUrl": "./bmb-step-progress-bar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  class=\"bmb_step-progress-bar\"\n  [ngClass]=\"{ 'bmb_step-progress-bar-vertical': type == 'vertical' }\"\n>\n  @if (type == \"horizontal\") {\n    <div\n      class=\"bmb_step-progress-bar-item\"\n      *ngFor=\"let i of getStepsArray()\"\n      [attr.data-bs-slide-to]=\"i\"\n      [ngClass]=\"{ completed: activeStep > i }\"\n      (click)=\"onStepClicked(i)\"\n      onkeypress=\"\"\n    >\n      <div\n        class=\"bmb_step-progress-bar-step\"\n        [ngClass]=\"{\n          active: activeStep === i,\n          completed: activeStep > i,\n          'bmb_step-progress-bar-step-normal': size == 'normal',\n          'bmb_step-progress-bar-step-small': size == 'small',\n        }\"\n      >\n        <span *ngIf=\"activeStep == i || activeStep < i\">{{ i + 1 }}</span>\n        @if (activeStep > i) {\n          <bmb-icon [icon]=\"'done'\" class=\"material-icons\" />\n        }\n      </div>\n    </div>\n  } @else {\n    <div\n      class=\"bmb_step-progress-bar-vertical-item\"\n      *ngFor=\"let i of getStepsArray()\"\n      [attr.data-bs-slide-to]=\"i\"\n      [ngClass]=\"{\n        completed: activeStep > i,\n        'bmb_step-progress-bar-vertical-content': labelSteps.length > 0,\n      }\"\n      (click)=\"onStepClicked(i)\"\n      onkeypress=\"\"\n    >\n      <div\n        class=\"bmb_step-progress-bar-vertical-step bmb_step-progress-bar-vertical-step-small\"\n        [ngClass]=\"{\n          active: activeStep === i,\n          completed: activeStep > i,\n        }\"\n      >\n        <span *ngIf=\"activeStep == i || activeStep < i\">{{ i + 1 }}</span>\n        @if (activeStep > i) {\n          <bmb-icon [icon]=\"'done'\" class=\"material-icons\" />\n        }\n      </div>\n      @if (labelSteps.length > 0) {\n        <div class=\"bmb_step-progress-bar-vertical-text\">\n          <h2 class=\"bmb_step-progress-bar-vertical-text-title\">\n            {{ labelSteps[i] }}\n          </h2>\n          @if (activeStep > i) {\n            <span class=\"bmb_step-progress-bar-vertical-text-subtitle\">{{\n              labelComplete\n            }}</span>\n          } @else {\n            <span class=\"bmb_step-progress-bar-vertical-text-subtitle\">{{\n              labelIncomplete\n            }}</span>\n          }\n        </div>\n      }\n    </div>\n  }\n</div>\n"
        },
        {
            "name": "BmbStudentActivityCardComponent",
            "id": "component-BmbStudentActivityCardComponent-0f1ad747ed47b41a3bb67ba9c5f47dc452d5d8b222a45fd33c5a30326f067243a3aca013ee0b8fc1c199d3662844dec61f0eb1e9b152158057ee884cf083bdb4",
            "file": "projects/ds-ng/src/lib/components/bmb-student-activity-card/bmb-student-activity-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-student-activity-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-student-activity-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "detail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": false
                },
                {
                    "name": "endDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "required": false
                },
                {
                    "name": "modalTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "required": false
                },
                {
                    "name": "startDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "closeModal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "closeModal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "required": false
                },
                {
                    "name": "detail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": false
                },
                {
                    "name": "endDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "required": false
                },
                {
                    "name": "modalTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "required": false
                },
                {
                    "name": "startDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "formatDateRange",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getHeaderClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleCloseModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DateTime } from 'luxon';\nimport { IBmbEventType } from '../bmb-calendar/types';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-student-activity-card',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './bmb-student-activity-card.component.html',\n  styleUrl: './bmb-student-activity-card.component.scss',\n})\nexport class BmbStudentActivityCardComponent {\n  startDate = input<DateTime>();\n  endDate = input<DateTime>();\n  title = input<string>();\n  detail = input<string>();\n  type = input<IBmbEventType>();\n  id = input<string>();\n  status = input<string>();\n  modalTitle = input<string>();\n\n  closeModal = output<void>();\n\n  handleCloseModal() {\n    this.closeModal.emit();\n  }\n\n  getHeaderClasses(): string[] {\n    return [\n      'bmb_student-activity-card-header',\n      `bmb_student-activity-card-header-${this.type()}`,\n    ];\n  }\n\n  formatDateRange() {\n    return `${this.startDate()?.toFormat('hh:mm')} - ${this.endDate()?.toFormat('hh:mm')}`;\n  }\n}\n",
            "styleUrl": "./bmb-student-activity-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb_student-activity-card\">\n  <header [ngClass]=\"getHeaderClasses()\">\n    <span class=\"bmb_student-activity-card-count\">{{\n      startDate()?.toFormat(\"dd/MM\")\n    }}</span>\n    <span class=\"bmb_student-activity-card-title\">{{ modalTitle() }}</span>\n    <button\n      (click)=\"handleCloseModal()\"\n      class=\"bmb_student-activity-card-close-button\"\n    >\n      <bmb-icon icon=\"close\" />\n    </button>\n  </header>\n  <section class=\"bmb_student-activity-card-content\">\n    <div class=\"bmb_student-activity-card-title\">{{ title() }}</div>\n    <div class=\"bmb_student-activity-card-detail\">{{ detail() }}</div>\n    <div class=\"bmb_student-activity-card-status\">\n      <span class=\"bmb_student-activity-card-status-label\">{{ status() }}</span>\n      <span class=\"bmb_student-activity-card-time-range\">{{\n        formatDateRange()\n      }}</span>\n    </div>\n  </section>\n</div>\n"
        },
        {
            "name": "BmbStudentActivitySelectorComponent",
            "id": "component-BmbStudentActivitySelectorComponent-843e9b9e4ee51968fe91c1c2821507a7ae38ea1527329d01a89db27dc6ffb25f25fe101876ce1d8eaf795397159bc6135676846567b05e08d1dfd867cfae31fc",
            "file": "projects/ds-ng/src/lib/components/bmb-student-activity-selector/bmb-student-activity-selector.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-student-activity-selector",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-student-activity-selector.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<BmbTabStudenActivityComponent>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "BmbTabStudenActivityComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "BmbTabStudenActivityComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "BmbTabStudenActivityComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbTabStudenActivityComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { BmbTabStudenActivityComponent } from './bmb-student-activity-tab/bmb-student-activity-tab.component';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-student-activity-selector',\n  standalone: true,\n  imports: [CommonModule, BmbTabStudenActivityComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './bmb-student-activity-selector.component.html',\n  styleUrl: './bmb-student-activity-selector.component.scss',\n})\nexport class BmbStudentActivitySelectorComponent implements AfterContentInit {\n  @ContentChildren(BmbTabStudenActivityComponent)\n  tabs!: QueryList<BmbTabStudenActivityComponent>;\n\n  ngAfterContentInit(): void {\n    const ACTIVE_TABS = this.tabs.filter((tab: any) => tab.active);\n\n    if (ACTIVE_TABS.length === 0) {\n      this.selectTab(this.tabs.first);\n    }\n  }\n\n  selectTab(tab: BmbTabStudenActivityComponent) {\n    this.tabs.toArray().forEach((t: any) => (t.active = false));\n    if (tab) tab.active = true;\n  }\n}\n",
            "styleUrl": "./bmb-student-activity-selector.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<div class=\"bmb_student_activity\">\n  <ul class=\"bmb_student_activity-tabs\">\n    <li\n      *ngFor=\"let tab of tabs\"\n      (click)=\"selectTab(tab)\"\n      class=\"bmb_student_activity-item\"\n      [class.active]=\"tab.active\"\n    >\n      <h2 class=\"bmb_student_activity-title\">{{ tab.title }}</h2>\n      <span class=\"bmb_student_activity-subtitle\"> {{ tab.subtitle }} </span>\n    </li>\n  </ul>\n  <!-- <ng-content></ng-content> -->\n</div>\n"
        },
        {
            "name": "BmbSwitchComponent",
            "id": "component-BmbSwitchComponent-4df2aa8233fc1deb7889d6d34198cd4904639a9e918e01f20c4a800a53fdc07832c3ddf8c900b4b6a19c142952ec7d8171743ffd0cb9d3c0c2101cf7e942e2eb",
            "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-switch",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-switch.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "defaultValue": "'Describe the button function here'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "`bmb-switch-${BmbSwitchComponent.nextId++}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isChecked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "leftIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "leftText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rightIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rightText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "change",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "nextId",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123,
                        126
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleSwitch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-switch',\n  templateUrl: './bmb-switch.component.html',\n  styleUrl: './bmb-switch.component.scss',\n  standalone: true,\n  imports: [CommonModule, FormsModule, BmbIconComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbSwitchComponent {\n  private static nextId = 0;\n  @Input() leftText: string = '';\n  @Input() leftIcon: string = '';\n  @Input() rightText: string = '';\n  @Input() rightIcon: string = '';\n  @Input() isChecked: boolean = false;\n  @Input() ariaLabel: string = 'Describe the button function here';\n  @Input() id: string = `bmb-switch-${BmbSwitchComponent.nextId++}`;\n  @Input() disabled: boolean = false;\n\n  @Output() change: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  toggleSwitch(): void {\n    if (!this.disabled) {\n      this.isChecked = !this.isChecked;\n      this.change.emit(this.isChecked);\n    }\n  }\n}\n",
            "styleUrl": "./bmb-switch.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<button\n  [ngClass]=\"{ bmb_switch: true, 'bmb_switch-checked': isChecked }\"\n  (click)=\"toggleSwitch()\"\n  role=\"switch\"\n  [attr.aria-checked]=\"isChecked ? 'true' : 'false'\"\n  [attr.id]=\"id\"\n  [attr.aria-disabled]=\"disabled ? 'true' : 'false'\"\n  [disabled]=\"disabled\"\n  [attr.aria-label]=\"ariaLabel\"\n>\n  <div class=\"bmb_switch-left\" *ngIf=\"leftText || leftIcon\">\n    <span *ngIf=\"leftText && !leftIcon\" class=\"bmb_switch-text\">{{\n      leftText\n    }}</span>\n    <bmb-icon *ngIf=\"leftIcon && !leftText\" [icon]=\"leftIcon\"></bmb-icon>\n  </div>\n\n  <label class=\"bmb_switch-label\" for=\"bmbSwitch\">\n    <span class=\"bmb_switch-inner\"></span>\n    <span class=\"bmb_switch-switch\"></span>\n  </label>\n\n  <div class=\"bmb_switch-right\" *ngIf=\"rightText || rightIcon\">\n    <span *ngIf=\"rightText && !rightIcon\" class=\"bmb_switch-text\">{{\n      rightText\n    }}</span>\n    <bmb-icon *ngIf=\"rightIcon && !rightText\" [icon]=\"rightIcon\"></bmb-icon>\n  </div>\n</button>\n"
        },
        {
            "name": "BmbTablesComponent",
            "id": "component-BmbTablesComponent-b0822c1cfdd775dea83f2eefb042189f9d9e2cb9416533ced9914039f9536f3ac9742e957e7d393de5c35df1b3857b4318b124c80414e41469f67ccce6f74eb1",
            "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-table",
            "styleUrls": [
                "./bmb-tables.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-tables.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actionTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 107,
                    "type": "TemplateRef<any> | null",
                    "decorators": []
                },
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 98,
                    "type": "TableColum[]",
                    "decorators": []
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 103,
                    "type": "TableConfig",
                    "decorators": []
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "detailTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 108,
                    "type": "TemplateRef<any> | null",
                    "decorators": []
                },
                {
                    "name": "pageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 90,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "truncate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 109,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "wrap",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 110,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 112,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "cellRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'cellRef'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "currentResizeIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTableDataSource<any>",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "expandedElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "headerCellRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 116,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'headerCellRef'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "isResizingRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "matTableRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": true,
                    "description": "",
                    "line": 115,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable, {read: ElementRef}"
                        }
                    ],
                    "modifierKind": [
                        170,
                        123
                    ]
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 114,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "paginatorSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "pressed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "resizableMousemove",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 87
                },
                {
                    "name": "resizableMouseup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "selection",
                    "defaultValue": "new SelectionModel<any>(true, [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "startWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "startX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "tableColumns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableColum[]",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "tableConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableConfig | undefined",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "tableDisplayColumns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 75
                }
            ],
            "methodsClass": [
                {
                    "name": "checkboxLabel",
                    "args": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 242,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkResizing",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCellData",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPaginationText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 272,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hasEllipsis",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLTableCellElement | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 260,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLTableCellElement | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 225,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isEven",
                    "args": [
                        {
                            "name": "rowIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 249,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isOdd",
                    "args": [
                        {
                            "name": "rowIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 256,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rowIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isTemplateRef",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 288,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mouseMove",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onResize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResizeColumn",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sanitizeHTML",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "SafeHtml",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setConfig",
                    "args": [
                        {
                            "name": "config",
                            "type": "TableConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 209,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "TableConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTableResize",
                    "args": [
                        {
                            "name": "tableWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tableWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleAllRows",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 120
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCheckboxComponent",
                    "type": "component"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatCheckboxModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  AfterViewInit,\n  ViewChild,\n  OnInit,\n  Output,\n  EventEmitter,\n  ElementRef,\n  TemplateRef,\n  HostListener,\n  Renderer2,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport {\n  MatTableDataSource,\n  MatTableModule,\n  MatTable,\n} from '@angular/material/table';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbCheckboxComponent } from '../bmb-checkbox/bmb-checkbox.component';\nimport { TableColum, TableConfig } from './bmb-tables.interface';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { TemplateNameDirective } from './bmb-tables.directive';\n@Component({\n  selector: 'bmb-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbCheckboxComponent,\n    MatPaginatorModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTooltipModule,\n  ],\n  templateUrl: './bmb-tables.component.html',\n  styleUrls: ['./bmb-tables.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed,void', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition(\n        'expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'),\n      ),\n    ]),\n  ],\n})\nexport class BmbTablesComponent implements AfterViewInit, OnInit {\n  dataSource: MatTableDataSource<any> = new MatTableDataSource();\n  tableDisplayColumns: string[] = [];\n  tableColumns: TableColum[] = [];\n  expandedElement: any;\n  selection = new SelectionModel<any>(true, []);\n  tableConfig: TableConfig | undefined;\n  paginatorSize: number | undefined;\n\n  pressed = false;\n  currentResizeIndex?: number;\n  startX?: number;\n  startWidth?: number;\n  isResizingRight?: boolean;\n  resizableMousemove?: () => void;\n  resizableMouseup?: () => void;\n\n  @Input() set pageSize(size: number) {\n    this.paginatorSize = size;\n  }\n\n  @Input() set data(data: any[]) {\n    this.dataSource = new MatTableDataSource(data);\n  }\n\n  @Input() set columns(columns: TableColum[]) {\n    this.tableColumns = columns;\n    this.tableDisplayColumns = this.tableColumns.map((col) => col.def);\n  }\n\n  @Input() set config(config: TableConfig) {\n    this.setConfig(config);\n  }\n\n  @Input() actionTemplate?: TemplateRef<any> | null;\n  @Input() detailTemplate: TemplateRef<any> | null = null;\n  @Input() truncate: boolean = false;\n  @Input() wrap: boolean = true;\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatTable, { read: ElementRef }) private matTableRef?: ElementRef;\n  @ViewChild('headerCellRef') headerCellRef!: ElementRef;\n  @ViewChild('cellRef') cellRef!: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.setTableResize(this.matTableRef!.nativeElement.clientWidth);\n  }\n\n  constructor(\n    private renderer: Renderer2,\n    private sanitizer: DomSanitizer,\n  ) {}\n\n  ngOnInit(): void {}\n\n  sanitizeHTML(label: string): SafeHtml {\n    return this.sanitizer.bypassSecurityTrustHtml(label);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.setTableResize(this.matTableRef!.nativeElement.clientWidth);\n\n    const headerHasEllipsis = this.hasEllipsis(\n      this.headerCellRef?.nativeElement,\n    );\n\n    this.dataSource.data.forEach((row: any) => {\n      const cellHasEllipsis = this.hasEllipsis(this.cellRef?.nativeElement);\n    });\n  }\n\n  setTableResize(tableWidth: number) {\n    let totWidth = 0;\n    this.tableColumns.forEach((column) => {\n      column.width = column.width || 50;\n      totWidth += column.width!;\n    });\n    const scale = (tableWidth - 5) / totWidth;\n  }\n\n  mouseMove(index: number) {\n    this.resizableMousemove = this.renderer.listen(\n      'document',\n      'mousemove',\n      (event) => {\n        if (this.pressed && event.buttons) {\n          const dx = this.isResizingRight\n            ? event.pageX - this.startX!\n            : -event.pageX + this.startX!;\n          const width = this.startWidth! + dx;\n        }\n      },\n    );\n    this.resizableMouseup = this.renderer.listen('document', 'mouseup', () => {\n      if (this.pressed) {\n        this.pressed = false;\n        this.currentResizeIndex = -1;\n        this.resizableMousemove!();\n        this.resizableMouseup!();\n      }\n    });\n  }\n\n  checkResizing(event: any, index: any) {\n    const cellData = this.getCellData(index);\n    this.isResizingRight =\n      index === 0 ||\n      (Math.abs(event.pageX - cellData.right) < cellData.width / 2 &&\n        index !== this.tableColumns.length - 1);\n  }\n\n  getCellData(index: number) {\n    const headerRow =\n      this.matTableRef!.nativeElement.children[0].querySelector('tr');\n    const cell = headerRow.children[index];\n    return cell.getBoundingClientRect();\n  }\n\n  onResizeColumn(event: any, index: number) {\n    this.checkResizing(event, index);\n    this.currentResizeIndex = index;\n    this.pressed = true;\n    this.startX = event.pageX;\n    this.startWidth = event.target.parentElement.clientWidth;\n    event.preventDefault();\n    this.mouseMove(index);\n  }\n\n  onSelect() {\n    this.select.emit(this.selection.selected);\n  }\n\n  setConfig(config: TableConfig) {\n    this.tableConfig = config;\n\n    if (this.tableConfig.isExpandible) {\n      this.tableDisplayColumns?.unshift('expand');\n    }\n\n    if (this.tableConfig.isSelectable) {\n      this.tableDisplayColumns?.unshift('select');\n    }\n\n    if (this.tableConfig.showActions) {\n      this.tableDisplayColumns?.push('actions');\n    }\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      this.onSelect();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n    this.onSelect();\n  }\n\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n  isEven(rowIndex: number): boolean {\n    const filteredIndex = this.dataSource.data\n      .filter((row) => !row.isDetail)\n      .findIndex((row, index) => index === rowIndex);\n    return filteredIndex % 2 === 0;\n  }\n\n  isOdd(rowIndex: number): boolean {\n    return !this.isEven(rowIndex);\n  }\n\n  hasEllipsis(element: HTMLTableCellElement | undefined): boolean {\n    if (!element) {\n      return false;\n    }\n\n    const elementRef = new ElementRef(element);\n    return (\n      elementRef.nativeElement.scrollWidth >\n      elementRef.nativeElement.clientWidth\n    );\n  }\n\n  getPaginationText(): string {\n    if (\n      !this.paginator ||\n      this.paginator.length === 0 ||\n      this.paginator.pageSize === 0\n    ) {\n      return `0 de ${this.paginator?.length || 0}`;\n    }\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize + 1;\n    const endIndex = Math.min(\n      (this.paginator.pageIndex + 1) * this.paginator.pageSize,\n      this.paginator.length,\n    );\n    return `${startIndex} - ${endIndex} de ${this.paginator.length}`;\n  }\n\n  isTemplateRef(value: any): boolean {\n    return value instanceof TemplateRef;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/rem\" as rem;\n@use \"../../../assets/styles/base/mixins\" as mixins;\n\n.bmb_table {\n  background: RGBA(var(--color-charade-50));\n  border-collapse: collapse;\n  box-shadow: rem.rem_calc(8 8 8 0) RGBA(var(--color-charade-950), 0.5);\n  display: flex;\n  flex-direction: column;\n  padding: rem.rem_calc(24 16);\n  width: 100%;\n\n  &-container {\n    flex: 1 0 auto;\n    max-width: 100%;\n    overflow: auto;\n    width: 100%;\n  }\n\n  &-content {\n    width: 100%;\n  }\n\n  &-row {\n    &.mat-mdc-row {\n      height: rem.rem_calc(34);\n    }\n\n    > td,\n    > th {\n      height: auto;\n      overflow: hidden;\n      padding: rem.rem_calc(0 8);\n\n      &.truncated {\n        max-width: rem.rem_calc(100);\n        min-width: rem.rem_calc(70);\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      &.wrapped {\n        white-space: nowrap;\n      }\n\n      @include mixins.media-query(768, \"min\") {\n        max-width: fit-content;\n      }\n\n      &.bmb_table-checkbox {\n        min-width: rem.rem_calc(58);\n        padding-right: 0;\n        width: rem.rem_calc(58);\n\n        + .bmb_table-sticky {\n          left: rem.rem_calc(58) !important;\n        }\n      }\n\n      &.bmb_table-expand {\n        min-width: rem.rem_calc(40);\n        width: rem.rem_calc(40);\n\n        + .bmb_table-sticky {\n          left: rem.rem_calc(98) !important;\n        }\n      }\n\n      &.bmb_table-sticky {\n        border-right: rem.rem_calc(1) solid RGBA(var(--color-charade-300));\n        max-width: rem.rem_calc(144);\n\n        @include mixins.media-query(1200, \"min\") {\n          max-width: fit-content;\n        }\n      }\n\n      &.bmb_table-actions {\n        border-left: rem.rem_calc(1) solid RGBA(var(--color-charade-300));\n        color: RGBA(var(--color-charade-900));\n\n        button {\n          color: RGBA(var(--color-charade-900));\n        }\n      }\n    }\n\n    > th {\n      border-bottom: 0;\n      color: RGBA(var(--color-charade-500));\n      position: relative;\n      text-transform: uppercase;\n      @include fonts.font(4, medium);\n\n      &.mat-mdc-header-cell {\n        background-color: RGBA(var(--color-charade-50));\n      }\n    }\n\n    > td {\n      @include fonts.font(4, medium);\n      border-bottom-color: RGBA(var(--color-charade-200));\n      border-bottom-style: dashed;\n\n      &.bmb_table-actions {\n        .action-container {\n          display: flex;\n\n          bmb-icon {\n            font-size: rem.rem_calc(18);\n          }\n        }\n      }\n\n      .mat-mdc-icon-button {\n        align-items: center;\n        display: flex;\n        height: auto;\n        padding: 0;\n        width: auto;\n\n        bmb-icon {\n          font-size: rem.rem_calc(24);\n        }\n      }\n    }\n  }\n\n  &-even {\n    &.mat-mdc-row {\n      background-color: RGBA(var(--color-charade-50));\n      color: RGBA(var(--color-charade-950));\n\n      &.bmb_table-expandible {\n        background-color: RGBA(var(--color-mariner-100));\n      }\n    }\n  }\n\n  &-odd {\n    &.mat-mdc-row {\n      background-color: RGBA(var(--color-charade-100));\n      color: RGBA(var(--color-charade-700));\n    }\n\n    &.bmb_table-expandible {\n      background-color: RGBA(var(--color-mariner-100));\n    }\n  }\n\n  &-details {\n    &.mat-mdc-row {\n      background-color: RGBA(var(--color-mariner-100));\n      height: 0;\n\n      > td {\n        border: 0;\n        padding: rem.rem_calc(0 16);\n      }\n\n      &.bmb_table-expanded {\n        > td {\n          border-bottom: rem.rem_calc(1) dashed RGBA(var(--color-charade-200));\n          padding: rem.rem_calc(16);\n        }\n      }\n    }\n  }\n\n  &-detail {\n    color: RGBA(var(--color-charade-700));\n    display: flex;\n    overflow: hidden;\n  }\n\n  &-resize {\n    border-right: rem.rem_calc(1) solid RGBA(var(--color-charade-200));\n    cursor: col-resize;\n    display: inline-block;\n    height: 100%;\n    opacity: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n\n    &:hover {\n      opacity: 1;\n      width: rem.rem_calc(20);\n    }\n  }\n\n  .mat-mdc-paginator {\n    display: none;\n  }\n\n  &-paginator {\n    align-items: center;\n    bottom: 0;\n    display: flex;\n    height: rem.rem_calc(48);\n    justify-content: flex-end;\n    margin: rem.rem_calc(8 0);\n    position: sticky;\n    right: 0;\n    z-index: 10;\n\n    &-text {\n      color: RGBA(var(--color-charade-700));\n      margin-right: rem.rem_calc(32);\n      @include fonts.font(3, regular);\n    }\n\n    &-btn {\n      color: RGBA(var(--color-charade-900));\n      height: rem.rem_calc(48);\n      padding: 0;\n      width: rem.rem_calc(48);\n\n      &-disabled {\n        color: RGBA(var(--color-charade-300));\n        cursor: not-allowed;\n      }\n    }\n\n    &-icon {\n      font-size: rem.rem_calc(24);\n    }\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_table {\n    background-color: RGBA(var(--color-charade-950));\n    box-shadow: rem.rem_calc(8 8 8 0) RGBA(var(--color-black-primary), 0.2);\n\n    &-row {\n      > td,\n      > th {\n        &.bmb_table-sticky {\n          border-right-color: RGBA(var(--color-charade-700));\n        }\n\n        &.bmb_table-actions {\n          border-left-color: RGBA(var(--color-charade-700));\n          color: RGBA(var(--color-charade-100));\n\n          button {\n            color: RGBA(var(--color-charade-100));\n          }\n        }\n      }\n\n      > th {\n        &.mat-mdc-header-cell {\n          background-color: RGBA(var(--color-charade-950));\n        }\n      }\n\n      > td {\n        border-bottom-color: RGBA(var(--color-charade-700));\n      }\n    }\n\n    &-even {\n      &.mat-mdc-row {\n        background-color: RGBA(var(--color-charade-950));\n        color: RGBA(var(--color-charade-50));\n\n        &.bmb_table-expandible {\n          background-color: RGBA(var(--color-mariner-950));\n        }\n      }\n    }\n\n    &-odd {\n      &.mat-mdc-row {\n        background-color: RGBA(var(--color-charade-800));\n        color: RGBA(var(--color-charade-50));\n      }\n\n      &.bmb_table-expandible {\n        background-color: RGBA(var(--color-mariner-950));\n      }\n    }\n\n    &-details {\n      &.mat-mdc-row {\n        background-color: RGBA(var(--color-mariner-950));\n\n        &.bmb_table-expanded {\n          > td {\n            border-bottom-color: RGBA(var(--color-charade-700));\n          }\n        }\n      }\n    }\n\n    &-detail {\n      color: RGBA(var(--color-charade-200));\n    }\n\n    &-resize {\n      border-right-color: RGBA(var(--color-charade-700));\n    }\n\n    &-paginator {\n      &-text {\n        color: RGBA(var(--color-charade-200));\n      }\n\n      &-btn {\n        color: RGBA(var(--color-charade-50));\n\n        &-disabled {\n          color: RGBA(var(--color-charade-700));\n        }\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./bmb-tables.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 122,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnInit"
            ],
            "accessors": {
                "pageSize": {
                    "name": "pageSize",
                    "setSignature": {
                        "name": "pageSize",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "size",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 90,
                        "jsdoctags": [
                            {
                                "name": "size",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "data",
                                "type": "any[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 94,
                        "jsdoctags": [
                            {
                                "name": "data",
                                "type": "any[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "columns": {
                    "name": "columns",
                    "setSignature": {
                        "name": "columns",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "columns",
                                "type": "TableColum[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 98,
                        "jsdoctags": [
                            {
                                "name": "columns",
                                "type": "TableColum[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "config": {
                    "name": "config",
                    "setSignature": {
                        "name": "config",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "config",
                                "type": "TableConfig",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 103,
                        "jsdoctags": [
                            {
                                "name": "config",
                                "type": "TableConfig",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"bmb_table\">\n  <div class=\"bmb_table-container\">\n    <table\n      mat-table\n      [dataSource]=\"dataSource\"\n      class=\"bmb_table-content\"\n      multiTemplateDataRows\n    >\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\" sticky>\n        <th mat-header-cell *matHeaderCellDef class=\"bmb_table-checkbox\">\n          <bmb-checkbox\n            (change)=\"$event ? toggleAllRows() : null\"\n            [checked]=\"selection.hasValue() && isAllSelected()\"\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n            [ariaLabel]=\"checkboxLabel()\"\n          />\n        </th>\n        <td mat-cell *matCellDef=\"let row\" class=\"bmb_table-checkbox\">\n          <bmb-checkbox\n            (change)=\"$event ? selection.toggle(row) : null; onSelect()\"\n            [checked]=\"selection.isSelected(row)\"\n            [ariaLabel]=\"checkboxLabel(row)\"\n            onkeypress=\"$event.stopPropagation()\"\n          />\n          {{ row.documentos }}\n        </td>\n      </ng-container>\n\n      <!-- Expand Column -->\n      <ng-container matColumnDef=\"expand\" sticky>\n        <th\n          mat-header-cell\n          *matHeaderCellDef\n          class=\"bmb_table-expand\"\n          aria-label=\"row actions\"\n        >\n          &nbsp;\n        </th>\n        <td mat-cell *matCellDef=\"let row\" class=\"bmb_table-expand\">\n          <ng-container *ngIf=\"row.detail\">\n            <button\n              mat-icon-button\n              aria-label=\"expand row\"\n              (click)=\"\n                expandedElement = expandedElement === row ? null : row;\n                $event.stopPropagation()\n              \"\n            >\n              <bmb-icon\n                [icon]=\"expandedElement === row ? 'expand_less' : 'expand_more'\"\n              />\n            </button>\n          </ng-container>\n        </td>\n      </ng-container>\n\n      <!-- Display Columns -->\n      <ng-container *ngFor=\"let column of tableColumns; let i = index\">\n        <ng-container matColumnDef=\"{{ column.def }}\" [sticky]=\"i === 0\">\n          <th\n            mat-header-cell\n            *matHeaderCellDef\n            #headerCell\n            [matTooltip]=\"hasEllipsis(headerCell) ? column.label : ''\"\n            matTooltipPosition=\"below\"\n            matTooltipClass=\"bmb_tooltip\"\n            [ngClass]=\"{\n              'bmb_table-sticky': i === 0,\n              truncated: truncate,\n              wrapped: wrap,\n            }\"\n          >\n            @if (column.htmlLabel) {\n              <ng-template\n                [ngTemplateOutlet]=\"column.htmlLabel\"\n                [ngTemplateOutletContext]=\"{\n                  column: column,\n                  index: i,\n                }\"\n              ></ng-template>\n            } @else {\n              {{ column.label }}\n            }\n            <span\n              class=\"bmb_table-resize\"\n              (mousedown)=\"onResizeColumn($event, i)\"\n            ></span>\n          </th>\n          <td\n            mat-cell\n            *matCellDef=\"let row; let a = index\"\n            #cell\n            matTooltipPosition=\"below\"\n            [matTooltip]=\"hasEllipsis(cell) ? row[column.dataKey] : ''\"\n            matTooltipClass=\"bmb_tooltip\"\n            [ngClass]=\"{\n              'bmb_table-sticky': i === 0,\n              truncated: truncate,\n              wrapped: wrap,\n            }\"\n          >\n            @if (isTemplateRef(row[column.dataKey])) {\n              <ng-template\n                [ngTemplateOutlet]=\"row[column.dataKey]\"\n                [ngTemplateOutletContext]=\"{ row: row }\"\n              ></ng-template>\n            } @else {\n              {{ row[column.dataKey]?.propertyName || row[column.dataKey] }}\n            }\n          </td>\n        </ng-container>\n      </ng-container>\n\n      <!-- Actions Column -->\n      <ng-container matColumnDef=\"actions\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef class=\"bmb_table-actions\"></th>\n        <td mat-cell *matCellDef=\"let row\" class=\"bmb_table-actions\">\n          <ng-template [ngTemplateOutlet]=\"actionTemplate!\"> </ng-template>\n        </td>\n      </ng-container>\n\n      <!-- Row to expand -->\n      <ng-container matColumnDef=\"expandedDetail\">\n        <td\n          mat-cell\n          *matCellDef=\"let row\"\n          [attr.colspan]=\"tableDisplayColumns.length\"\n        >\n          <div\n            class=\"bmb_table-detail\"\n            [@detailExpand]=\"row == expandedElement ? 'expanded' : 'collapsed'\"\n          >\n            <ng-container\n              *ngTemplateOutlet=\"detailTemplate; context: { row }\"\n            ></ng-container>\n          </div>\n        </td>\n      </ng-container>\n\n      <!-- Rows -->\n      <tr\n        mat-header-row\n        *matHeaderRowDef=\"tableDisplayColumns\"\n        class=\"bmb_table-row\"\n      ></tr>\n\n      <tr\n        mat-row\n        *matRowDef=\"let row; columns: tableDisplayColumns; let i = dataIndex\"\n        class=\"bmb_table-row\"\n        [class.bmb_table-expandible]=\"expandedElement === row\"\n        [ngClass]=\"{\n          'bmb_table-even': isEven(i),\n          'bmb_table-odd': isOdd(i),\n        }\"\n      ></tr>\n\n      <ng-container *ngIf=\"tableConfig?.isExpandible\">\n        <tr\n          mat-row\n          *matRowDef=\"let row; columns: ['expandedDetail']; let i = dataIndex\"\n          class=\"bmb_table-details\"\n          [class.bmb_table-expanded]=\"expandedElement === row\"\n        ></tr>\n      </ng-container>\n    </table>\n  </div>\n\n  <!-- Paginator -->\n  <ng-container *ngIf=\"tableConfig?.isPaginable\" sticky>\n    <mat-paginator\n      #paginator\n      [pageSize]=\"this.paginatorSize\"\n      [hidePageSize]=\"true\"\n    >\n    </mat-paginator>\n\n    <div class=\"bmb_table-paginator\">\n      <span class=\"bmb_table-paginator-text\">{{ getPaginationText() }}</span>\n      <button\n        [disabled]=\"!paginator || !paginator.hasPreviousPage()\"\n        [ngClass]=\"{\n          'bmb_table-paginator-btn-disabled':\n            !paginator || !paginator.hasPreviousPage(),\n        }\"\n        (click)=\"paginator.firstPage()\"\n        class=\"bmb_table-paginator-btn\"\n      >\n        <bmb-icon\n          icon=\"keyboard_double_arrow_left\"\n          class=\"bmb_table-paginator-icon\"\n        />\n      </button>\n      <button\n        [disabled]=\"!paginator || !paginator.hasPreviousPage()\"\n        [ngClass]=\"{\n          'bmb_table-paginator-btn-disabled':\n            !paginator || !paginator.hasPreviousPage(),\n        }\"\n        (click)=\"paginator.previousPage()\"\n        class=\"bmb_table-paginator-btn\"\n      >\n        <bmb-icon icon=\"keyboard_arrow_left\" class=\"bmb_table-paginator-icon\" />\n      </button>\n      <button\n        [disabled]=\"!paginator || !paginator.hasNextPage()\"\n        [ngClass]=\"{\n          'bmb_table-paginator-btn-disabled':\n            !paginator || !paginator.hasNextPage(),\n        }\"\n        (click)=\"paginator.nextPage()\"\n        class=\"bmb_table-paginator-btn\"\n      >\n        <bmb-icon\n          icon=\"keyboard_arrow_right\"\n          class=\"bmb_table-paginator-icon\"\n        />\n      </button>\n      <button\n        [disabled]=\"!paginator || !paginator.hasNextPage()\"\n        [ngClass]=\"{\n          'bmb_table-paginator-btn-disabled':\n            !paginator || !paginator.hasNextPage(),\n        }\"\n        (click)=\"paginator.lastPage()\"\n        class=\"bmb_table-paginator-btn\"\n      >\n        <bmb-icon\n          icon=\"keyboard_double_arrow_right\"\n          class=\"bmb_table-paginator-icon\"\n        />\n      </button>\n    </div>\n  </ng-container>\n</div>\n"
        },
        {
            "name": "BmbTabsComponent",
            "id": "component-BmbTabsComponent-e22424fdf9598cf03b961dd0141f369e6120e27a4349c7b05e538b035826a2d35f1e245303899d07289e77678b696672191f5a185aac3cdc59fbc275fc1f5461",
            "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-tabs",
            "styleUrls": [
                "./bmb-tabs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-tabs.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "format",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "IBmbTab[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<IBmbTab>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeTabIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "tabsItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tabsItems'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "selectedId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showActiveTab",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  ViewChild,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  OnInit,\n  AfterViewInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface IBmbTab {\n  id: number;\n  title: string;\n  isActive?: boolean;\n  badge?: number;\n}\n\n@Component({\n  selector: 'bmb-tabs',\n  templateUrl: './bmb-tabs.component.html',\n  styleUrls: ['./bmb-tabs.component.scss'],\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbTabsComponent implements OnInit, AfterViewInit {\n  @Input() format: string = '';\n  @Input() tabs: IBmbTab[] = [];\n  @Output() selected = new EventEmitter<IBmbTab>();\n\n  activeTabIndex: number = 0;\n  @ViewChild('tabsItems') tabsItems!: ElementRef;\n\n  ngOnInit(): void {\n    const initialActiveTab = this.tabs.findIndex((tab) => tab.isActive);\n    this.activeTabIndex = initialActiveTab !== -1 ? initialActiveTab : 0;\n    this.tabs.forEach(\n      (tab, index) => (tab.isActive = index === this.activeTabIndex),\n    );\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.showActiveTab(), 100);\n  }\n\n  selectTab(selectedId: number): void {\n    const tabIndex = this.tabs.findIndex((tab) => tab.id === selectedId);\n    if (tabIndex !== -1) {\n      this.tabs.forEach((tab) => (tab.isActive = false));\n      this.tabs[tabIndex].isActive = true;\n      this.activeTabIndex = tabIndex;\n      const activeTab = this.tabs[tabIndex];\n      this.selected.emit(activeTab);\n      setTimeout(() => this.showActiveTab(), 0);\n    }\n  }\n\n  showActiveTab(): void {\n    requestAnimationFrame(() => {\n      const tabsElement = this.tabsItems.nativeElement;\n      const activeTabElement = tabsElement.children[this.activeTabIndex];\n\n      if (activeTabElement) {\n        const containerWidth = tabsElement.offsetWidth;\n        const activeTabWidth = activeTabElement.offsetWidth;\n        const activeTabOffsetLeft = activeTabElement.offsetLeft;\n\n        const scrollOffset =\n          activeTabOffsetLeft - (containerWidth - activeTabWidth) / 2;\n\n        tabsElement.scrollTo({\n          left: scrollOffset,\n          behavior: 'smooth',\n        });\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/mixins\" as mixins;\n@use \"../../../assets/styles/base/rem\" as rem;\n\n.bmb_tabs {\n  &-tab {\n    display: flex;\n    flex-flow: row nowrap;\n    gap: rem.rem_calc(32);\n    -webkit-overflow-scrolling: touch;\n    overflow-x: auto;\n    scroll-behavior: smooth;\n    scroll-snap-type: x mandatory;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  &-item {\n    align-items: center;\n    border-bottom-color: transparent;\n    border-bottom-style: solid;\n    border-bottom-width: rem.rem_calc(2);\n    color: RGBA(var(--color-charade-500));\n    display: flex;\n    flex: 0 0 auto;\n    gap: rem.rem_calc(8);\n    height: rem.rem_calc(40);\n    justify-content: center;\n    min-width: rem.rem_calc(120);\n    padding: rem.rem_calc(8);\n    scroll-behavior: smooth;\n    scroll-snap-align: start;\n    text-align: center;\n    @include fonts.font(5, medium);\n\n    &-active {\n      border-bottom-color: RGBA(var(--color-mariner-700));\n      color: RGBA(var(--color-charade-950));\n    }\n\n    &-uppercase {\n      text-transform: uppercase;\n      @include fonts.font(3, regular);\n    }\n  }\n\n  &-badge {\n    align-items: center;\n    background-color: RGBA(var(--color-mariner-700));\n    border-radius: 100%;\n    color: RGBA(var(--color-white-primary));\n    display: flex;\n    height: rem.rem_calc(22);\n    justify-content: center;\n    width: rem.rem_calc(20);\n    @include fonts.font(3, regular);\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_tabs {\n    &-item {\n      &-active {\n        border-bottom-color: RGBA(var(--color-charade-50));\n        color: RGBA(var(--color-charade-50));\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./bmb-tabs.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div class=\"bmb_tabs\">\n  <div class=\"bmb_tabs-tab\" #tabsItems>\n    <button\n      role=\"tab\"\n      [attr.aria-selected]=\"tab.isActive ? 'true' : 'false'\"\n      [attr.tabindex]=\"tab.isActive ? 0 : -1\"\n      class=\"bmb_tabs-item\"\n      *ngFor=\"let tab of tabs; let i = index\"\n      (click)=\"selectTab(tab.id)\"\n      [ngClass]=\"{\n        'bmb_tabs-item-active': tab.isActive,\n        'bmb_tabs-item-uppercase': format === 'uppercase',\n      }\"\n    >\n      <span>\n        {{ tab.title }}\n      </span>\n      <span class=\"bmb_tabs-badge\" *ngIf=\"tab.badge\">{{ tab.badge }}</span>\n    </button>\n  </div>\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "BmbTabStudenActivityComponent",
            "id": "component-BmbTabStudenActivityComponent-05db07db42a5f5d375a1fd260ed31bea5cbdf7a47107b3b7db4a702ad35d0151f0abca67f2dfb176ab49889b7ddfea5eb37590426b211a4f88c6a92d30e2c847",
            "file": "projects/ds-ng/src/lib/components/bmb-student-activity-selector/bmb-student-activity-tab/bmb-student-activity-tab.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-student-activity-tab",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-student-activity-tab.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'bmb-student-activity-tab',\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './bmb-student-activity-tab.component.html',\n})\nexport class BmbTabStudenActivityComponent {\n  @Input() title: string = '';\n  @Input() subtitle: string = '';\n  @Input() active = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div *ngIf=\"active\" class=\"bmb_student_activity-content\">\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "BmbTagComponent",
            "id": "component-BmbTagComponent-47444eaa4d7a7a04e5368e6b07f1dfc409fe86baacef54f1577e75eb285e7be858e5ce7f795685e58e1bcb170e6b5b86b00aa507db1e6243b45d149ea44eda57",
            "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-tag",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-tags.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activityTag",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "IBmbActivityTags",
                    "decorators": []
                },
                {
                    "name": "dissmisable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "grouped",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rounded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "closeTag",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\nexport type IBmbActivityTags = 'info' | 'life' | 'event';\n\n@Component({\n  selector: 'bmb-tag',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  styleUrl: './bmb-tags.component.scss',\n  templateUrl: './bmb-tags.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbTagComponent implements AfterViewInit {\n  @Input() appearance: IBmbActivityTags = 'info';\n  @Input() text: string = '';\n  @Input() grouped: boolean = false;\n  @Input() dissmisable: boolean = false;\n  @Input() rounded: boolean = false;\n  @Input() activityTag: boolean = false;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n  ) {}\n\n  ngAfterViewInit() {\n    if (this.grouped) {\n      const parentElement = this.el.nativeElement.parentElement;\n\n      let wrapperDiv = parentElement.querySelector('.bmb_tag-grouped');\n      if (!wrapperDiv) {\n        wrapperDiv = this.renderer.createElement('div');\n        this.renderer.addClass(wrapperDiv, 'bmb_tag-grouped');\n        this.renderer.insertBefore(parentElement, wrapperDiv, null);\n      }\n\n      this.renderer.appendChild(wrapperDiv, this.el.nativeElement);\n    }\n    this.getClasses();\n  }\n\n  getClasses(): string {\n    let classes: string = 'bmb_tag ';\n\n    if (this.rounded && !this.activityTag) {\n      classes = classes + ' bmb_tag-rounded';\n    }\n    if (this.activityTag) {\n      classes = classes + `bmb_tag-rounded bmb_tag-${this.appearance}`;\n      this.dissmisable = false;\n    }\n    return classes;\n  }\n\n  closeTag() {\n    this.el.nativeElement.remove();\n  }\n}\n",
            "styleUrl": "./bmb-tags.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<button [class]=\"getClasses()\">\n  <span class=\"bmb_tag-text\">{{ text }}</span>\n  @if (this.dissmisable) {\n    <bmb-icon class=\"bmb_tag-btn\" (click)=\"closeTag()\" [icon]=\"'close'\" />\n  }\n</button>\n"
        },
        {
            "name": "BmbThemeComponent",
            "id": "component-BmbThemeComponent-0060faa59c2a12b1b0deb70de5d6f6b740b336001f0995e73fe6fb5870eddd614a8c6011659fd1170cd1403ae94eea162973ba79f93d9e02c843997733aba612",
            "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ThemeService",
                    "type": "injectable"
                }
            ],
            "selector": "bmb-theme",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-theme.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "initialTheme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showControls",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "initialized",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedTheme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "service",
                    "defaultValue": "inject(ThemeService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyTheme",
                    "args": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculateTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onThemeChange",
                    "args": [
                        {
                            "name": "isChecked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isChecked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbSwitchComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  inject,\n  ViewEncapsulation,\n  Input,\n} from '@angular/core';\nimport { ThemeService } from '../../services';\nimport { CommonModule } from '@angular/common';\nimport { BmbSwitchComponent } from '../bmb-switch/bmb-switch.component';\n\n@Component({\n  selector: 'bmb-theme',\n  standalone: true,\n  imports: [CommonModule, BmbSwitchComponent],\n  providers: [ThemeService],\n  templateUrl: './bmb-theme.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbThemeComponent implements OnInit {\n  @Input() initialTheme?: string;\n  @Input() showControls: boolean = true;\n\n  selectedTheme: string = 'light';\n  private service = inject(ThemeService);\n  private initialized = false;\n\n  ngOnInit(): void {\n    this.selectedTheme = this.calculateTheme();\n    this.applyTheme(this.selectedTheme);\n\n    this.service.theme$.subscribe((theme: any) => {\n      if (this.initialized && theme !== this.selectedTheme) {\n        this.applyTheme(theme);\n      }\n    });\n\n    this.initialized = true;\n  }\n\n  calculateTheme(): string {\n    const savedTheme = localStorage.getItem('theme');\n\n    if (!this.showControls && this.initialTheme) return this.initialTheme;\n    if (savedTheme) return savedTheme;\n    if (this.initialTheme) return this.initialTheme;\n\n    return this.service.getDefaultTheme();\n  }\n\n  applyTheme(theme: string): void {\n    if (theme !== this.selectedTheme || !this.initialized) {\n      document.documentElement.setAttribute('data-theme', theme);\n      localStorage.setItem('theme', theme);\n      this.selectedTheme = theme;\n    }\n  }\n\n  onThemeChange(isChecked: boolean): void {\n    const newTheme = isChecked ? 'dark' : 'light';\n    if (newTheme !== this.selectedTheme) {\n      this.applyTheme(newTheme);\n      this.service.setTheme(newTheme);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "@if (showControls) {\n  <bmb-switch\n    [isChecked]=\"selectedTheme === 'dark'\"\n    leftIcon=\"light_mode\"\n    rightIcon=\"dark_mode\"\n    (change)=\"onThemeChange($event)\"\n  ></bmb-switch>\n}\n"
        },
        {
            "name": "BmbTimestreamComponent",
            "id": "component-BmbTimestreamComponent-2dc92aa8008e5ca6e98e66116c271e52877e4c45581ee7d1fda24d3a7bbf1e4238bb378aa9414cc5e28251a73fd6a64f924e2873168d7f966dab0c83db89f6a9",
            "file": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-timestream",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-timestream.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "dateFormat",
                    "defaultValue": "'dd/MM/yyyy'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "endDate",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "events",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "ITimelineEvent[] | null",
                    "decorators": []
                },
                {
                    "name": "lang",
                    "defaultValue": "'es'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "startDate",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "difference",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "end",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DateTime | null",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "isDialogOpen",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null | ITimelineEvent",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "monthsNames",
                    "defaultValue": "Info.months('long', { locale: this.lang })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "now",
                    "defaultValue": "DateTime.now()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "orderedEvents",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITimelineEventParsed[]",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "orderedMonths",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "parsedEvents",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any | null",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "selectedDate",
                    "defaultValue": "{\n    day: '',\n    month: '',\n    date: this.now,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ISelectedDate",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "start",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DateTime | null",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "validMonths",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDetail",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dateValidation",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleSelectedDateChange",
                    "args": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 191,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSelectedEventChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "ITimelineEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ITimelineEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "orderDates",
                    "args": [
                        {
                            "name": "events",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "format",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "events",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "format",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "prepareEvents",
                    "args": [
                        {
                            "name": "events",
                            "type": "ITimelineEvent[] | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IPlaceholderObject",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "events",
                            "type": "ITimelineEvent[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAValidDate",
                    "args": [],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbTimestreamErrorComponent",
                    "type": "component"
                },
                {
                    "name": "BmbTimestreamTimelineComponent",
                    "type": "component"
                },
                {
                    "name": "BmbTimestreamDetailsComponent",
                    "type": "component"
                },
                {
                    "name": "BmbTimestreamDialogComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DateTime, Info } from 'luxon';\nimport { BmbTimestreamErrorComponent } from './bmb-timestream-error/bmb-timestream-error.component';\nimport { BmbTimestreamTimelineComponent } from './bmb-timestream-timeline/bmb-timestream-timeline.component';\nimport { BmbTimestreamDetailsComponent } from './bmb-timestream-detail/bmb-timestream-detail.component';\nimport { ITimelineEvent, ISelectedDate, ITimelineEventParsed } from './types';\nimport { BmbTimestreamDialogComponent } from './bmb-timestream-dialog/bmb-timestream-dialog.component';\nimport { CommonModule } from '@angular/common';\n\ninterface IPlaceholderObject {\n  [key: string]: any | any[];\n}\n\n@Component({\n  selector: 'bmb-timestream',\n  standalone: true,\n  imports: [\n    BmbTimestreamErrorComponent,\n    BmbTimestreamTimelineComponent,\n    BmbTimestreamDetailsComponent,\n    BmbTimestreamDialogComponent,\n    CommonModule,\n  ],\n  templateUrl: './bmb-timestream.component.html',\n  styleUrl: './bmb-timestream.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbTimestreamComponent implements OnInit {\n  @Input() startDate: string = '';\n  @Input() endDate: string = '';\n  @Input() dateFormat: string = 'dd/MM/yyyy';\n  @Input() lang: string = 'es';\n  @Input() events: ITimelineEvent[] | null = null;\n\n  error = false;\n  now = DateTime.now();\n  start: DateTime | null = null;\n  end: DateTime | null = null;\n  difference = 0;\n  validMonths: any = [];\n  parsedEvents: any | null = null;\n  monthsNames = Info.months('long', { locale: this.lang });\n  isDialogOpen: null | ITimelineEvent = null;\n  selectedDate: ISelectedDate = {\n    day: '',\n    month: '',\n    date: this.now,\n  };\n  orderedMonths: string[] = [];\n  orderedEvents: ITimelineEventParsed[] = [];\n\n  ngOnInit(): void {\n    this.dateValidation();\n\n    this.start = DateTime.fromFormat(this.startDate, this.dateFormat);\n    this.end = DateTime.fromFormat(this.endDate, this.dateFormat);\n    this.difference = Math.ceil(this.end.diff(this.start, 'months').months);\n    this.parsedEvents = this.prepareEvents(this.events);\n    this.orderedMonths = this.orderDates(this.parsedEvents, 'yyyy/MM');\n    this.selectedDate = this.selectAValidDate();\n  }\n\n  dateValidation() {\n    const isValidStart = DateTime.fromFormat(\n      this.startDate,\n      this.dateFormat,\n    ).isValid;\n    const isValidEnd = DateTime.fromFormat(\n      this.endDate,\n      this.dateFormat,\n    ).isValid;\n\n    this.error = !isValidEnd || !isValidStart;\n  }\n\n  prepareEvents(events: ITimelineEvent[] | null) {\n    if (!events) return {};\n\n    const objectEvent: IPlaceholderObject = {};\n    events.forEach((event) => {\n      const startDate = DateTime.fromFormat(event.start, this.dateFormat);\n      const endDate = DateTime.fromFormat(event.end, this.dateFormat);\n      const diff = endDate.diff(startDate, 'days').days + 1;\n\n      for (let index = 0; index < diff; index++) {\n        const currentDate = startDate.plus({ days: index });\n        const stringDate = currentDate.toFormat('yyyy/MM/dd');\n        const month = currentDate.toFormat('yyyy/MM');\n\n        objectEvent[month] ??= {\n          events: {},\n          name: this.monthsNames[currentDate.month - 1],\n          stringDate: month,\n          year: currentDate.year,\n          date: currentDate,\n        };\n\n        objectEvent[month].events[stringDate] ??= {\n          events: [],\n          date: currentDate,\n          stringDate,\n          selected: false,\n        };\n\n        objectEvent[month].events[stringDate].events.push({\n          ...event,\n          start: stringDate,\n          startEvent: currentDate,\n          endEvent: endDate,\n          selected: false,\n          diff: diff - 1,\n          originalStart: startDate,\n        });\n      }\n    });\n\n    const orededEvents = this.orderDates(objectEvent, 'yyyy/MM');\n    objectEvent['orderedEvents'] = orededEvents;\n\n    objectEvent['orderedEvents'].forEach((date: string) => {\n      objectEvent[date]['orderedEvents'] = this.orderDates(\n        objectEvent[date].events,\n        'yyyy/MM/dd',\n      );\n    });\n\n    this.orderedEvents = objectEvent['orderedEvents']\n      .map((month: string) => {\n        return objectEvent[month]['orderedEvents'].map(\n          (day: string) => objectEvent[month].events[day],\n        );\n      })\n      .flat();\n\n    return objectEvent;\n  }\n\n  orderDates(events: any, format: string): string[] {\n    const monthsList = Object.keys(events);\n    const monthsOrdered = monthsList.sort((dateA: string, dateB: string) => {\n      const parsedDateA = DateTime.fromFormat(dateA, format);\n      const parsedDateB = DateTime.fromFormat(dateB, format);\n      return parsedDateA.toMillis() - parsedDateB.toMillis();\n    });\n\n    return monthsOrdered;\n  }\n\n  selectAValidDate(): { month: string; day: string; date: DateTime } {\n    const month =\n      this.orderedMonths.find((date) => {\n        const parsedDate = this.parsedEvents[date].date;\n        return (\n          this.now.year <= parsedDate.year && this.now.month <= parsedDate.month\n        );\n      }) ||\n      this.orderedMonths.at(-1) ||\n      '';\n    const orderedEvents = this.parsedEvents?.[month]?.orderedEvents;\n\n    const day =\n      orderedEvents?.find((date: string) => {\n        const parsedDate = this.parsedEvents[month].events[date].date;\n        return (\n          this.now.year <= parsedDate.year &&\n          this.now.month <= parsedDate.month &&\n          this.now.day <= parsedDate.day\n        );\n      }) ||\n      orderedEvents?.at(-1) ||\n      '';\n\n    if (this.parsedEvents[month]) {\n      this.parsedEvents[month].selected = true;\n      this.parsedEvents[month].events[day].selected = true;\n    }\n    return {\n      month,\n      day,\n      date: this.parsedEvents?.[month]?.events?.[day]?.date,\n    };\n  }\n\n  handleSelectedDateChange({ month, day }: { month: string; day: string }) {\n    this.parsedEvents[this.selectedDate.month].selected = false;\n    this.parsedEvents[this.selectedDate.month].events[\n      this.selectedDate.day\n    ].selected = false;\n\n    this.parsedEvents[month].selected = true;\n    this.parsedEvents[month].events[day].selected = true;\n\n    this.selectedDate = {\n      month,\n      day,\n      date: this.parsedEvents[month].events[day].date,\n    };\n  }\n\n  handleSelectedEventChange(event: ITimelineEvent) {\n    this.isDialogOpen = event;\n  }\n\n  closeDetail() {\n    this.isDialogOpen = null;\n  }\n}\n",
            "styleUrl": "./bmb-timestream.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"bmb_timestream\">\n  @if (error) {\n    <div class=\"bmb_timestream-error\">\n      <bmb-timestream-error />\n    </div>\n  } @else {\n    <aside class=\"bmb_timestream-aside\">\n      <bmb-timestream-timeline\n        [start]=\"start\"\n        [end]=\"end\"\n        [dateFormat]=\"dateFormat\"\n        [lang]=\"lang\"\n        [now]=\"now\"\n        [events]=\"parsedEvents\"\n        [selectedDate]=\"selectedDate\"\n        [orderedMonths]=\"orderedMonths\"\n        (changeSelectedDate)=\"handleSelectedDateChange($event)\"\n      />\n    </aside>\n    <section class=\"bmb_timestream-main\">\n      <bmb-timestream-detail\n        [start]=\"start\"\n        [end]=\"end\"\n        [dateFormat]=\"dateFormat\"\n        [lang]=\"lang\"\n        [now]=\"now\"\n        [events]=\"parsedEvents\"\n        [selectedDate]=\"selectedDate\"\n        (changeSelectedEvent)=\"handleSelectedEventChange($event)\"\n        [orderedEvents]=\"orderedEvents\"\n      />\n    </section>\n    <section\n      class=\"bmb_timestream-dialog\"\n      [ngClass]=\"{\n        'bmb_timestream-dialog-active': !!isDialogOpen,\n      }\"\n    >\n      <bmb-timestream-dialog\n        [event]=\"isDialogOpen\"\n        (closeDialog)=\"closeDetail()\"\n        [lang]=\"lang\"\n      />\n    </section>\n  }\n</section>\n"
        },
        {
            "name": "BmbTimestreamDetailsComponent",
            "id": "component-BmbTimestreamDetailsComponent-cd995344df09049089988efbe51aeed6109ff1ca6b174388c560a9e78186c96a9e5bdb7ed700b6f697e0bcd685a8e4ef646fd52f676e4fe26af8d0ffbb1b884a",
            "file": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream-detail/bmb-timestream-detail.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-timestream-detail",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-timestream-detail.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "dateFormat",
                    "defaultValue": "'dd/MM/yyyy'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "end",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "DateTime | null",
                    "decorators": []
                },
                {
                    "name": "events",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "lang",
                    "defaultValue": "'en'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "now",
                    "defaultValue": "DateTime.now()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "DateTime",
                    "decorators": []
                },
                {
                    "name": "orderedEvents",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "ITimelineEventParsed[]",
                    "decorators": []
                },
                {
                    "name": "selectedDate",
                    "defaultValue": "{\n    day: '',\n    month: '',\n    date: this.now,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "ISelectedDate",
                    "decorators": []
                },
                {
                    "name": "start",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "DateTime | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changeSelectedEvent",
                    "defaultValue": "new EventEmitter<ITimelineEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter<ITimelineEvent>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "monthList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'monthDetailList'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "appearanceBadgeText",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatBadgeText",
                    "args": [
                        {
                            "name": "legend",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "legend",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCurrentMonth",
                    "args": [
                        {
                            "name": "date",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDurationString",
                    "args": [
                        {
                            "name": "event",
                            "type": "ITimelineEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ITimelineEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getMonthTitle",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleEventChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "ITimelineEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ITimelineEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollToItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbCardComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCardContentComponent",
                    "type": "component"
                },
                {
                    "name": "BmbLayoutDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbLayoutItemDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbBadgeComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DateTime } from 'luxon';\nimport { ISelectedDate, ITimelineEvent, ITimelineEventParsed } from '../types';\nimport {\n  BmbCardComponent,\n  BmbCardContentComponent,\n} from '../../bmb-card/bmb-card.component';\nimport { BmbLayoutDirective } from '../../../directives/bmb-layout/bmb-layout.directive';\nimport { BmbLayoutItemDirective } from '../../../directives/bmb-layout/bmb-layout-item.directive';\nimport { BmbIconComponent } from '../../bmb-icon/bmb-icon.component';\nimport { BmbBadgeComponent } from '../../bmb-badge/bmb-badge.component';\n\n@Component({\n  selector: 'bmb-timestream-detail',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbCardComponent,\n    BmbCardContentComponent,\n    BmbLayoutDirective,\n    BmbLayoutItemDirective,\n    BmbIconComponent,\n    BmbBadgeComponent,\n  ],\n  templateUrl: './bmb-timestream-detail.component.html',\n  styleUrl: './bmb-timestream-detail.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbTimestreamDetailsComponent implements AfterViewInit, OnChanges {\n  @ViewChild('monthDetailList') monthList!: ElementRef;\n\n  @Input() start: DateTime | null = null;\n  @Input() end: DateTime | null = null;\n  @Input() dateFormat: string = 'dd/MM/yyyy';\n  @Input() lang: string = 'en';\n  @Input() now: DateTime = DateTime.now();\n  @Input() events?: any;\n  @Input() selectedDate: ISelectedDate = {\n    day: '',\n    month: '',\n    date: this.now,\n  };\n  @Input() orderedEvents: ITimelineEventParsed[] = [];\n\n  @Output() changeSelectedEvent: EventEmitter<ITimelineEvent> =\n    new EventEmitter<ITimelineEvent>();\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.scrollToItem();\n    }, 1);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const selectedDateChange = changes['selectedDate'];\n    if (\n      selectedDateChange.previousValue &&\n      selectedDateChange.previousValue.day !==\n        selectedDateChange.currentValue?.day\n    ) {\n      setTimeout(() => {\n        this.scrollToItem();\n      }, 1);\n    }\n  }\n\n  getCurrentMonth(date: string): boolean {\n    const parsedDate = DateTime.fromFormat(date, 'yyyy/MM');\n    return (\n      parsedDate.month === this.selectedDate.date.month &&\n      parsedDate.year === this.selectedDate.date.year\n    );\n  }\n\n  getMonthTitle(date: DateTime) {\n    return date.setLocale(this.lang).toFormat('cccc dd LLLL yyyy');\n  }\n\n  scrollToItem() {\n    let currentMonthElement = this.monthList.nativeElement.querySelector(\n      '.bmb_timestream-detail-item-current',\n    );\n\n    if (currentMonthElement) {\n      currentMonthElement.scrollIntoView();\n      this.monthList.nativeElement.scrollTop =\n        this.monthList.nativeElement.scrollTop;\n    }\n  }\n\n  formatBadgeText(legend: string): string {\n    return legend.replace(/_/g, ' ');\n  }\n\n  appearanceBadgeText(type: string): string {\n    switch (type) {\n      case 'enriquecedor':\n        return 'mitec-red';\n      case 'seriado':\n        return 'mitec-orange';\n      case 'inscripciones':\n        return 'green-light';\n      case 'avance_academico':\n        return 'mitec-blue';\n      case 'otra':\n        return 'purple-light';\n      case 'flexible':\n        return 'mitec-green';\n      default:\n        return 'mitec-blue';\n    }\n  }\n\n  getDurationString(event: ITimelineEvent): string {\n    return `Duración: ${event.originalStart?.day} - ${event.endEvent?.setLocale(this.lang).toFormat('dd LLLL yyyy')} (${(event.diff || 0) + 1} Días)`;\n  }\n\n  handleEventChange(event: ITimelineEvent) {\n    this.changeSelectedEvent.emit(event);\n  }\n}\n",
            "styleUrl": "./bmb-timestream-detail.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnChanges"
            ],
            "templateData": "<ul #monthDetailList class=\"bmb_timestream-detail\">\n  @for (dayEvent of orderedEvents; track $index) {\n    <li\n      class=\"bmb_timestream-detail-item\"\n      [ngClass]=\"{\n        'bmb_timestream-detail-item-current': dayEvent.selected,\n      }\"\n    >\n      <header class=\"bmb_timestream-detail-item-header\">\n        <h3 class=\"bmb_timestream-detail-item-header-title\">\n          {{ getMonthTitle(dayEvent.date) }}\n        </h3>\n        <span class=\"bmb_timestream-detail-item-header-subtitle\"\n          >{{ dayEvent.events.length }}\n          {{ dayEvent.events.length > 1 ? \"HITOS\" : \"HITO\" }}</span\n        >\n      </header>\n      <section class=\"bmb_timestream-detail-content\">\n        @for (event of dayEvent.events; track $index) {\n          <div class=\"bmb_timestream-detail-content-after\">\n            <bmb-card margin=\"none\">\n              <bmb-card-content>\n                <div\n                  bmbLayout\n                  gapSise=\"m\"\n                  margin=\"none\"\n                  alignItems=\"center\"\n                  (click)=\"handleEventChange(event)\"\n                  class=\"bmb_timestream-detail-content-pointer\"\n                >\n                  <section\n                    bmbLayoutItem\n                    class=\"bmb_timestream-detail-content-icon\"\n                    [ngClass]=\"\n                      'bmb_timestream-detail-content-icon-' + event.type\n                    \"\n                  >\n                    <bmb-icon icon=\"app_badging\" />\n                  </section>\n                  <section bmbLayoutItem [colGrow]=\"2\" [isDinamycItem]=\"true\">\n                    <h3 class=\"bmb_timestream-detail-content-title\">\n                      {{ event.title }}\n                    </h3>\n                    <p class=\"bmb_timestream-detail-content-description\">\n                      {{ event.short_description }}\n                    </p>\n                  </section>\n                  <section\n                    bmbLayoutItem\n                    class=\"bmb_timestream-detail-content-type\"\n                  >\n                    <bmb-badge\n                      [custom]=\"true\"\n                      [text]=\"formatBadgeText(event.type)\"\n                      [customBackground]=\"appearanceBadgeText(event.type)\"\n                      [customColor]=\"\n                        event.type === 'flexible'\n                          ? 'black-primary'\n                          : 'white-primary'\n                      \"\n                    />\n                    @if (event.diff) {\n                      <p class=\"bmb_timestream-detail-content-duration\">\n                        {{ getDurationString(event) }}\n                      </p>\n                    }\n                  </section>\n                </div>\n              </bmb-card-content>\n            </bmb-card>\n          </div>\n        }\n      </section>\n    </li>\n  }\n</ul>\n"
        },
        {
            "name": "BmbTimestreamDialogComponent",
            "id": "component-BmbTimestreamDialogComponent-001a951156027c34dbd2727d9f5e495b4cc4a8b0ed8414c2d57df14ab50fbab14da6d3fd38967bfba22d3437e61dcfe110615ca82c6c09ec52aac47f755e2500",
            "file": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream-dialog/bmb-timestream-dialog.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-timestream-dialog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-timestream-dialog.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "event",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "ITimelineEvent | null",
                    "decorators": []
                },
                {
                    "name": "lang",
                    "defaultValue": "'es'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "closeDialog",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "eventTabs",
                    "defaultValue": "[\n    { id: 1, title: 'Descripción', isActive: true },\n    { id: 2, title: 'Instancias' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tab[]",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "tabSelected",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 84
                }
            ],
            "methodsClass": [
                {
                    "name": "appearanceBadgeText",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatBadgeText",
                    "args": [
                        {
                            "name": "legend",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "legend",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDurationString",
                    "args": [
                        {
                            "name": "event",
                            "type": "ITimelineEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ITimelineEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getInstances",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getMonthTitle",
                    "args": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleCloseEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleTabSelected",
                    "args": [
                        {
                            "name": "tab",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "Tab",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbTabsComponent",
                    "type": "component"
                },
                {
                    "name": "BmbContainerComponent",
                    "type": "component"
                },
                {
                    "name": "BmbBadgeComponent",
                    "type": "component"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbDividerComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbLayoutDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbLayoutItemDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ITimelineEvent } from '../types';\nimport { BmbIconComponent } from '../../bmb-icon/bmb-icon.component';\nimport { BmbTabsComponent } from '../../bmb-tabs/bmb-tabs.component';\nimport { BmbContainerComponent } from '../../bmb-container/bmb-container.component';\nimport { BmbBadgeComponent } from '../../bmb-badge/bmb-badge.component';\nimport { BmbButtonDirective } from '../../../directives/button.directive';\nimport { BmbDividerComponent } from '../../bmb-divider/bmb-divider.component';\nimport { BmbLayoutDirective } from '../../../directives/bmb-layout/bmb-layout.directive';\nimport { BmbLayoutItemDirective } from '../../../directives/bmb-layout/bmb-layout-item.directive';\nimport { DateTime } from 'luxon';\n\ninterface Tab {\n  id: number;\n  title: string;\n  isActive?: boolean;\n  badge?: number;\n}\n\n@Component({\n  selector: 'bmb-timestream-dialog',\n  standalone: true,\n  imports: [\n    BmbIconComponent,\n    BmbTabsComponent,\n    BmbContainerComponent,\n    BmbBadgeComponent,\n    BmbButtonDirective,\n    BmbDividerComponent,\n    CommonModule,\n    BmbLayoutDirective,\n    BmbLayoutItemDirective,\n  ],\n  templateUrl: './bmb-timestream-dialog.component.html',\n  styleUrl: './bmb-timestream-dialog.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbTimestreamDialogComponent {\n  @Input() event: ITimelineEvent | null = null;\n  @Input() lang: string = 'es';\n\n  @Output() closeDialog: EventEmitter<void> = new EventEmitter<void>();\n\n  handleCloseEvent() {\n    this.closeDialog.emit();\n  }\n\n  formatBadgeText(legend: string): string {\n    return legend.replace(/_/g, ' ');\n  }\n\n  appearanceBadgeText(type: string): string {\n    switch (type) {\n      case 'enriquecedor':\n        return 'mitec-red';\n      case 'seriado':\n        return 'mitec-orange';\n      case 'inscripciones':\n        return 'green-light';\n      case 'avance_academico':\n        return 'mitec-blue';\n      case 'otra':\n        return 'purple-light';\n      case 'flexible':\n        return 'mitec-green';\n      default:\n        return 'mitec-blue';\n    }\n  }\n\n  eventTabs: Tab[] = [\n    { id: 1, title: 'Descripción', isActive: true },\n    { id: 2, title: 'Instancias' },\n  ];\n  tabSelected = 1;\n\n  handleTabSelected(tab: Tab) {\n    this.tabSelected = tab.id;\n  }\n\n  getMonthTitle(date: DateTime) {\n    return date.setLocale(this.lang).toFormat('cccc dd LLLL yyyy');\n  }\n\n  getInstances(event: any): string[] {\n    const instances = [];\n    for (let index = 0; index < (event.diff || 0) + 1; index++) {\n      const date = event.originalStart.plus({ days: index });\n      instances.push(this.getMonthTitle(date));\n    }\n    return instances;\n  }\n\n  getDurationString(event: ITimelineEvent): string {\n    return `Duración: ${event.originalStart?.day} - ${event.endEvent?.setLocale(this.lang).toFormat('dd LLLL yyyy')} (${(event.diff || 0) + 1} Días)`;\n  }\n}\n",
            "styleUrl": "./bmb-timestream-dialog.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@if (!!event) {\n  <section class=\"bmb_timestream-dialog-container\">\n    <figure class=\"bmb_timestream-dialog-container-hero\">\n      <img\n        [src]=\"event.image\"\n        [alt]=\"event.title\"\n        class=\"bmb_timestream-dialog-container-image\"\n      />\n    </figure>\n    <button\n      class=\"bmb_timestream-dialog-container-close\"\n      (click)=\"handleCloseEvent()\"\n    >\n      <bmb-icon icon=\"close\" />\n    </button>\n    <section class=\"bmb_timestream-dialog-container-content\">\n      <h2 class=\"bmb_timestream-dialog-container-title\">{{ event.title }}</h2>\n      <div class=\"bmb_timestream-dialog-container-user\">\n        <figure class=\"bmb_timestream-dialog-container-user-picture\">\n          <img\n            class=\"bmb_timestream-dialog-container-user-image\"\n            [src]=\"event.picture_profile\"\n            [alt]=\"event.user_first_name\"\n          />\n        </figure>\n        <span class=\"bmb_timestream-dialog-container-user-name\"\n          >{{ event.user_first_name }} {{ event.user_last_name }}</span\n        >\n        <span class=\"bmb_timestream-dialog-container-user-date\">{{\n          event.startEvent?.toFormat(\"dd/MM/yyyy\")\n        }}</span>\n      </div>\n      <bmb-tabs\n        [tabs]=\"eventTabs\"\n        (selected)=\"handleTabSelected($event)\"\n        style=\"flex: 1\"\n      >\n        @switch (tabSelected) {\n          @case (1) {\n            <div class=\"bmb_timestream-dialog-container-tab-content\">\n              <p>{{ event.description }}</p>\n              <p class=\"bmb_timestream-dialog-container-tab-tags\">\n                <bmb-badge\n                  [custom]=\"true\"\n                  [text]=\"formatBadgeText(event.type)\"\n                  [customBackground]=\"appearanceBadgeText(event.type)\"\n                  [customColor]=\"\n                    event.type === 'flexible'\n                      ? 'black-primary'\n                      : 'white-primary'\n                  \"\n                />\n                @for (tag of event.tags; track $index) {\n                  <bmb-badge\n                    [text]=\"formatBadgeText(event.type)\"\n                    appearance=\"normal\"\n                  />\n                }\n              </p>\n            </div>\n          }\n          @case (2) {\n            <div class=\"bmb_timestream-dialog-container-tab-content\">\n              <h3 class=\"bmb_timestream-dialog-container-tab-title\">\n                Instancias\n              </h3>\n              <bmb-divider type=\"simple\"></bmb-divider>\n              <ul class=\"bmb_timestream-dialog-container-tab-list\">\n                @for (date of getInstances(event); track $index) {\n                  <li class=\"bmb_timestream-dialog-container-tab-item\">\n                    <span\n                      class=\"bmb_timestream-dialog-container-tab-icon\"\n                      [ngClass]=\"\n                        'bmb_timestream-detail-content-icon-' + event.type\n                      \"\n                    >\n                      <bmb-icon icon=\"app_badging\" />\n                    </span>\n                    <span>{{ date }}</span>\n                  </li>\n                }\n              </ul>\n              @if (event.diff) {\n                <p class=\"bmb_timestream-dialog-container-tab-duration\">\n                  {{ getDurationString(event) }}\n                </p>\n              }\n              <h3 class=\"bmb_timestream-dialog-container-tab-title\">\n                Relacionado a\n              </h3>\n              <bmb-divider type=\"simple\"></bmb-divider>\n              <ul class=\"bmb_timestream-dialog-container-tab-list\">\n                <li class=\"bmb_timestream-dialog-container-tab-item\">\n                  <span\n                    class=\"bmb_timestream-dialog-container-tab-icon bmb_timestream-detail-content-icon-seriado\"\n                  >\n                    <bmb-icon icon=\"app_badging\" />\n                  </span>\n                  <span>{{ event.related_to }}</span>\n                </li>\n              </ul>\n            </div>\n          }\n        }\n      </bmb-tabs>\n      <button bmbButton appearance=\"primary\" icon=\"fit_screen\">\n        Ir a decisión\n      </button>\n    </section>\n  </section>\n}\n"
        },
        {
            "name": "BmbTimestreamErrorComponent",
            "id": "component-BmbTimestreamErrorComponent-d54eae59298c62b2739c1f1fd86b355a2587d576ec50b4377f3fe977e6d80032c2826e04862016a8cecd488e093a3b2044a6a8bf624b1608d86ff717ccf1be68",
            "file": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream-error/bmb-timestream-error.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-timestream-error",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-timestream-error.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbCardComponent",
                    "type": "component"
                },
                {
                    "name": "BmbCardContentComponent",
                    "type": "component"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  BmbCardComponent,\n  BmbCardContentComponent,\n} from '../../bmb-card/bmb-card.component';\nimport { BmbIconComponent } from '../../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-timestream-error',\n  standalone: true,\n  imports: [BmbCardComponent, BmbCardContentComponent, BmbIconComponent],\n  templateUrl: './bmb-timestream-error.component.html',\n  styleUrl: './bmb-timestream-error.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbTimestreamErrorComponent {}\n",
            "styleUrl": "./bmb-timestream-error.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb_timestream-error\">\n  <bmb-card type=\"error\">\n    <bmb-card-content>\n      <h2 class=\"bmb_timestream-error-title\">\n        <span class=\"bmb_timestream-error-title-icon\"\n          ><bmb-icon icon=\"error\"\n        /></span>\n        <span>Error</span>\n      </h2>\n      <p class=\"bmb_timestream-error-content\">\n        El <strong>dateFormat</strong> o las fechas de inicio y fin no son\n        válidas.<br />\n        <a\n          href=\"https://moment.github.io/luxon/api-docs/index.html#datetimefromformat\"\n          target=\"_blank\"\n          >Formatos de fechas válidas</a\n        >\n      </p>\n    </bmb-card-content>\n  </bmb-card>\n</div>\n"
        },
        {
            "name": "BmbTimestreamTimelineComponent",
            "id": "component-BmbTimestreamTimelineComponent-5f7de66ba91bf26b728ddab589997875878ef22866f1c079d8a5a5126fd0122eb8be97a8ff67c89c5c28b7344e174bcc24013dbe18f2e121ad8b5e5dcab8f33f",
            "file": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream-timeline/bmb-timestream-timeline.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-timestream-timeline",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-timestream-timeline.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "dateFormat",
                    "defaultValue": "'dd/MM/yyyy'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "end",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "DateTime | null",
                    "decorators": []
                },
                {
                    "name": "events",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "lang",
                    "defaultValue": "'es'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "now",
                    "defaultValue": "DateTime.now()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "DateTime",
                    "decorators": []
                },
                {
                    "name": "orderedMonths",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "selectedDate",
                    "defaultValue": "{\n    day: '',\n    month: '',\n    date: this.now,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "ISelectedDate",
                    "decorators": []
                },
                {
                    "name": "start",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "DateTime | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changeSelectedDate",
                    "defaultValue": "new EventEmitter<ISelectedDate>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "EventEmitter<ISelectedDate>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "monthList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'monthList'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getMonthTitle",
                    "args": [
                        {
                            "name": "month",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleDateChange",
                    "args": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "parseEvent",
                    "args": [
                        {
                            "name": "month",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "date",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "date",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollToItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n  ElementRef,\n  AfterViewInit,\n  ViewChild,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { DateTime } from 'luxon';\nimport { CommonModule } from '@angular/common';\nimport { ISelectedDate } from '../types';\n\n@Component({\n  selector: 'bmb-timestream-timeline',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-timestream-timeline.component.html',\n  styleUrl: './bmb-timestream-timeline.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbTimestreamTimelineComponent implements AfterViewInit {\n  @ViewChild('monthList') monthList!: ElementRef;\n\n  @Input() start: DateTime | null = null;\n  @Input() end: DateTime | null = null;\n  @Input() dateFormat: string = 'dd/MM/yyyy';\n  @Input() lang: string = 'es';\n  @Input() now: DateTime = DateTime.now();\n  @Input() events?: any;\n  @Input() selectedDate: ISelectedDate = {\n    day: '',\n    month: '',\n    date: this.now,\n  };\n  @Input() orderedMonths: string[] = [];\n\n  @Output() changeSelectedDate: EventEmitter<ISelectedDate> =\n    new EventEmitter<ISelectedDate>();\n\n  ngAfterViewInit(): void {\n    this.scrollToItem();\n  }\n\n  scrollToItem() {\n    let currentMonthElement = this.monthList.nativeElement.querySelector(\n      '.bmb_timestream-timeline-content-item-current',\n    );\n    if (currentMonthElement) {\n      currentMonthElement.scrollIntoView();\n      this.monthList.nativeElement.scrollTop =\n        this.monthList.nativeElement.scrollTop - 45;\n    } else {\n      currentMonthElement = this.monthList.nativeElement.querySelector(\n        '.bmb_timestream-timeline-item-current',\n      );\n      currentMonthElement?.scrollIntoView();\n    }\n  }\n\n  getMonthTitle(month: string) {\n    return `${this.events[month].name} ${this.events[month].year}`;\n  }\n\n  handleDateChange({ event, month }: { event: string; month: string }): void {\n    this.changeSelectedDate.emit({\n      month,\n      day: event,\n      date: this.events[month].events[event].date,\n    });\n  }\n\n  parseEvent(month: string, date: string) {\n    return this.events[month].events[date].date\n      .setLocale(this.lang)\n      .toFormat('dd LLL yyyy');\n  }\n}\n",
            "styleUrl": "./bmb-timestream-timeline.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<ul #monthList class=\"bmb_timestream-timeline\">\n  @for (month of orderedMonths; track $index) {\n    @if (month !== \"orderedEvents\") {\n      <li\n        class=\"bmb_timestream-timeline-item\"\n        [ngClass]=\"{\n          'bmb_timestream-timeline-item-current': events[month].selected,\n        }\"\n      >\n        <header class=\"bmb_timestream-timeline-header\">\n          {{ getMonthTitle(month) }}\n        </header>\n        <section class=\"bmb_timestream-timeline-content\">\n          @for (event of events[month].orderedEvents; track $index) {\n            <div\n              class=\"bmb_timestream-timeline-content-item\"\n              [ngClass]=\"{\n                'bmb_timestream-timeline-content-item-current':\n                  events[month].events[event].selected,\n              }\"\n            >\n              <h3\n                class=\"bmb_timestream-timeline-content-item-title\"\n                (click)=\"handleDateChange({ event, month })\"\n              >\n                {{ parseEvent(month, event) }}\n              </h3>\n              <span class=\"bmb_timestream-timeline-content-item-bar\"></span>\n              <div class=\"bmb_timestream-timeline-content-item-events\">\n                @if (events[month].events[event].events.length > 4) {\n                  <span>{{ events[month].events[event].events.length }}</span>\n                  <span\n                    class=\"bmb_timestream-timeline-content-item-circle\"\n                  ></span>\n                } @else {\n                  @for (\n                    circle of events[month].events[event].events;\n                    track $index\n                  ) {\n                    <span\n                      class=\"bmb_timestream-timeline-content-item-circle\"\n                      [ngClass]=\"\n                        'bmb_timestream-timeline-content-item-circle-' +\n                        circle.type\n                      \"\n                    ></span>\n                  }\n                }\n              </div>\n            </div>\n          }\n        </section>\n      </li>\n    }\n  }\n</ul>\n"
        },
        {
            "name": "BmbToastComponent",
            "id": "component-BmbToastComponent-b8ea2ef35d6c99a5e75d694f7bc5ad5348fdbb48ba8428adfd4a4017696424df9bbd0874919f8aa5b1537e7ecbc8cb3c32b26e8ab8b520ec4961330938ce9767",
            "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ToastService",
                    "type": "injectable"
                }
            ],
            "selector": "bmb-toast",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-toast.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "\"top\" | \"bottom\" | \"middle\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isOpen$",
                    "defaultValue": "this.toastService.isOpen$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "isOpenSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | undefined",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "setAutoClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  OnInit,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport { ToastService } from '../../services';\nimport { Subscription } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  standalone: true,\n  selector: 'bmb-toast',\n  styleUrl: './bmb-toast.component.scss',\n  imports: [CommonModule, BmbIconComponent],\n  templateUrl: './bmb-toast.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [ToastService],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbToastComponent implements OnInit, OnDestroy {\n  @Input() appearance: string = '';\n  @Input() message: string = '';\n  @Input() duration?: number;\n  @Input() position?: 'top' | 'bottom' | 'middle';\n\n  isOpen$ = this.toastService.isOpen$;\n\n  private isOpenSubscription: Subscription | undefined;\n\n  constructor(private toastService: ToastService) {}\n\n  ngOnInit(): void {\n    this.isOpenSubscription = this.isOpen$.subscribe((isOpen) => {\n      if (isOpen && this.duration) {\n        this.setAutoClose();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.isOpenSubscription) {\n      this.isOpenSubscription.unsubscribe();\n    }\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_toast'];\n\n    if (this.appearance) {\n      classes.push('bmb_toast-' + this.appearance);\n    }\n\n    if (this.position) {\n      classes.push('bmb_toast-' + this.position);\n    }\n\n    return classes;\n  }\n\n  private setAutoClose(): void {\n    setTimeout(() => {\n      this.toastService.closeToast();\n    }, this.duration);\n  }\n\n  public openToast() {\n    this.toastService.openToast();\n  }\n}\n",
            "styleUrl": "./bmb-toast.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "toastService",
                        "type": "ToastService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "toastService",
                        "type": "ToastService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div *ngIf=\"isOpen$ | async\" [ngClass]=\"getClasses()\">\n  <bmb-icon icon=\"info\" />\n  <span>{{ message }}</span>\n</div>\n"
        },
        {
            "name": "BmbTopBarComponent",
            "id": "component-BmbTopBarComponent-deadf30af13aac52ae91f50b5d94c4e4460c4a05bd392c9ec6465e9f5657529f66b3b76e325fb955e05160ac4a6b11dbd06e590f8ce734943b92c52d2b9d032c",
            "file": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-top-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-top-bar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "alertNotification",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "appName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "appSubTitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "assigmentNotification",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "hasLogoutButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "image",
                    "defaultValue": "'assets/images/tec-logo.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "lang",
                    "defaultValue": "'es'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "mitec",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "mobileImage",
                    "defaultValue": "'assets/images/tec-logo-mob.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "positionButtonMenu",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "IPositionButtonMenu",
                    "decorators": []
                },
                {
                    "name": "showLang",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "userInformation",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "IUserInformation | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "logOut",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onLangChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "contentTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<> | null",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TemplateRef"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "isMobileMenuOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 57
                }
            ],
            "methodsClass": [
                {
                    "name": "getCountryName",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFlag",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getMenuButtonClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getMenuClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleLangChange",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleLogOutClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleMobileMenuClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbTopBarUserSectionComponent",
                    "type": "component"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbSelectComponent",
                    "type": "component"
                },
                {
                    "name": "BmbSelectItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n  ViewChild,\n  OnInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbButtonDirective } from '../../directives/button.directive';\nimport { IPositionButtonMenu, IUserInformation } from './types';\nimport { BmbTopBarUserSectionComponent } from './bmb-top-bar-user-section/bmb-top-bar-user-section.component';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbSelectComponent } from '../bmb-select/bmb-select.component';\nimport { BmbSelectItemComponent } from '../bmb-select/bmb-select-item/bmb-select-item.component';\n\nexport { IPositionButtonMenu, IUserInformation } from './types';\n\n@Component({\n  selector: 'bmb-top-bar',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbButtonDirective,\n    BmbTopBarUserSectionComponent,\n    BmbIconComponent,\n    BmbSelectComponent,\n    BmbSelectItemComponent,\n  ],\n  templateUrl: './bmb-top-bar.component.html',\n  styleUrl: './bmb-top-bar.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbTopBarComponent implements OnInit {\n  @Input() positionButtonMenu: IPositionButtonMenu = 'left';\n  @Input() userInformation: IUserInformation | null = null;\n  @Input() hasLogoutButton: boolean = true;\n  @Input() image: string = 'assets/images/tec-logo.svg';\n  @Input() mobileImage: string = 'assets/images/tec-logo-mob.svg';\n  @Input() appName: string = '';\n  @Input() appSubTitle: string = '';\n  @Input() showLang: boolean = false;\n  @Input() lang: string = 'es';\n  @Input() mitec: boolean = false;\n  @Input() assigmentNotification: number = 0;\n  @Input() alertNotification: number = 0;\n\n  @Output() logOut: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onLangChange: EventEmitter<string> = new EventEmitter<string>();\n\n  @ViewChild(TemplateRef) contentTemplate: TemplateRef<unknown> | null = null;\n\n  isMobileMenuOpen: boolean = false;\n\n  ngOnInit(): void {\n    this.image = this.mitec\n      ? 'assets/images/logos-mitec/logo_mitec.png'\n      : 'assets/images/tec-logo.svg';\n  }\n\n  handleLogOutClick(event: Event) {\n    this.logOut.emit(event);\n  }\n\n  handleMobileMenuClick() {\n    this.isMobileMenuOpen = !this.isMobileMenuOpen;\n  }\n\n  getMenuClasses(): string {\n    if (this.isMobileMenuOpen) return 'bmb_top-bar-nav-open';\n    return '';\n  }\n\n  getMenuButtonClasses(): string {\n    if (this.isMobileMenuOpen) return 'bmb_top-bar-button-menu-open';\n    return '';\n  }\n\n  getFlag(lang: string): string {\n    switch (lang) {\n      case 'es':\n        return '/assets/images/lang-flags/mx.svg';\n      case 'en':\n        return `/assets/images/lang-flags/us.svg`;\n\n      default:\n        return '';\n    }\n  }\n\n  getCountryName(lang: string): string {\n    switch (lang) {\n      case 'es':\n        return 'Español';\n      case 'en':\n        return 'English';\n      default:\n        return '';\n    }\n  }\n\n  handleLangChange(lang: string): void {\n    this.onLangChange.emit(lang);\n  }\n}\n",
            "styleUrl": "./bmb-top-bar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<header class=\"bmb_top-bar\">\n  @if (positionButtonMenu === \"left\") {\n    <div class=\"bmb_top-bar-button-section\" [ngClass]=\"getMenuButtonClasses()\">\n      <button\n        class=\"bmb_top-bar-button-menu\"\n        bmbButton\n        (click)=\"handleMobileMenuClick()\"\n      >\n        <bmb-icon icon=\"menu\" class=\"bmb_top-bar-button-menu-menu\" />\n        <bmb-icon icon=\"close\" class=\"bmb_top-bar-button-menu-close\" />\n      </button>\n    </div>\n  }\n  <figure class=\"bmb_top-bar-logo-section\">\n    @if (mitec) {\n      <picture>\n        <source media=\"(min-width: 1000px)\" [srcset]=\"image\" />\n        <source [srcset]=\"mobileImage\" />\n        <img\n          style=\"width: 30px\"\n          [src]=\"image\"\n          alt=\"TEC de Monterrey\"\n          loading=\"lazy\"\n        />\n      </picture>\n    } @else {\n      <picture>\n        <source media=\"(min-width: 1000px)\" [srcset]=\"image\" />\n        <source [srcset]=\"mobileImage\" />\n        <img\n          src=\"/assets/images/tec-logo-mob.svg\"\n          alt=\"TEC de Monterrey\"\n          loading=\"lazy\"\n        />\n      </picture>\n    }\n  </figure>\n  <nav class=\"bmb_top-bar-nav\" [ngClass]=\"getMenuClasses()\">\n    @if (appName !== \"\") {\n      <li class=\"bmb_top-bar-app-name\">\n        <h1>{{ appName }}</h1>\n        @if (appSubTitle !== \"\" && !mitec) {\n          <span>{{ appSubTitle }}</span>\n        }\n      </li>\n    }\n    <ul class=\"bmb_top-bar-nav-content\">\n      <ng-content></ng-content>\n    </ul>\n    @if (userInformation) {\n      <li>\n        <bmb-top-bar-user-section\n          [mitec]=\"mitec\"\n          [userInformation]=\"userInformation\"\n          [assigmentNotification]=\"assigmentNotification\"\n          [notificationNotification]=\"alertNotification\"\n        />\n      </li>\n    }\n  </nav>\n  <div class=\"bmb_top-bar-always-visible-content\">\n    @if (userInformation && hasLogoutButton) {\n      <button\n        class=\"bmb_top-bar-logoff\"\n        bmbButton\n        appearance=\"secondary-filled\"\n        (click)=\"handleLogOutClick($event)\"\n      >\n        Salir\n      </button>\n    }\n\n    @if (showLang) {\n      <bmb-select (onValueChange)=\"handleLangChange($event)\" [value]=\"lang\">\n        <div class=\"bmb_top-bar-lang\" selectTemplate>\n          <figure class=\"bmb_top-bar-lang-flag\">\n            <img [src]=\"getFlag(lang)\" [alt]=\"getCountryName(lang)\" />\n          </figure>\n          <span>{{ getCountryName(lang) }}</span>\n        </div>\n        <bmb-select-item value=\"es\">\n          <div class=\"bmb_top-bar-lang\">\n            <figure class=\"bmb_top-bar-lang-flag\">\n              <img [src]=\"getFlag('es')\" [alt]=\"getCountryName('es')\" />\n            </figure>\n            <span>{{ getCountryName(\"es\") }}</span>\n          </div>\n        </bmb-select-item>\n        <bmb-select-item value=\"en\">\n          <div class=\"bmb_top-bar-lang\">\n            <figure class=\"bmb_top-bar-lang-flag\">\n              <img [src]=\"getFlag('en')\" [alt]=\"getCountryName('en')\" />\n            </figure>\n            <span>{{ getCountryName(\"en\") }}</span>\n          </div>\n        </bmb-select-item>\n      </bmb-select>\n    }\n  </div>\n  @if (positionButtonMenu === \"right\") {\n    <div class=\"bmb_top-bar-button-section\">\n      <button\n        class=\"bmb_top-bar-button-menu\"\n        bmbButton\n        icon=\"menu\"\n        (click)=\"handleMobileMenuClick()\"\n      ></button>\n    </div>\n  }\n</header>\n"
        },
        {
            "name": "BmbTopBarItemComponent",
            "id": "component-BmbTopBarItemComponent-c3ee9188c87d02caccf2895d0adf2ef07986704e06dc8293cf7bb60eb47f5cb9c66d098dadca28ab03bccf45fffb19aefb8ca8afd9657824f28cc132052dc2d7",
            "file": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar-item/bmb-top-bar-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-top-bar-item",
            "styleUrls": [],
            "styles": [],
            "template": "<li class=\"bmb_top-bar-item\" [ngClass]=\"isElementActive()\">\n  <ng-content></ng-content>\n</li>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "isElementActive",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-top-bar-item',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <li class=\"bmb_top-bar-item\" [ngClass]=\"isElementActive()\">\n      <ng-content></ng-content>\n    </li>\n  `,\n  styleUrl: './bmb-top-bar-item.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbTopBarItemComponent {\n  @Input() isActive: boolean = false;\n\n  isElementActive(): string {\n    if (this.isActive) return 'bmb_top-bar-item-active';\n    return '';\n  }\n}\n",
            "styleUrl": "./bmb-top-bar-item.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "BmbTopBarUserSectionComponent",
            "id": "component-BmbTopBarUserSectionComponent-abbfd433e87ef9f5f030dd24a2cfc1bfc37b9e7b7ef4a035e5fceea3d51d19116d0087b14d8831beacecadd25b3a37ada7403f28186f8da172f6586df9e6656d",
            "file": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar-user-section/bmb-top-bar-user-section.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-top-bar-user-section",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-top-bar-user-section.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "assigmentNotification",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "mitec",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "notificationNotification",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "userInformation",
                    "defaultValue": "{\n    image: '',\n    name: '',\n    role: '',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "IUserInformation",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbUserImageComponent",
                    "type": "component"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { BmbUserImageComponent } from '../../bmb-user-image/bmb-user-image.component';\nimport { BmbIconComponent } from '../../bmb-icon/bmb-icon.component';\nimport { IUserInformation, IPositionButtonMenu } from '../types';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-top-bar-user-section',\n  standalone: true,\n  imports: [CommonModule, BmbUserImageComponent, BmbIconComponent],\n  templateUrl: './bmb-top-bar-user-section.component.html',\n  styleUrl: './bmb-top-bar-user-section.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbTopBarUserSectionComponent {\n  @Input() userInformation: IUserInformation = {\n    image: '',\n    name: '',\n    role: '',\n  };\n\n  @Input() mitec: boolean = false;\n  @Input() assigmentNotification: number = 0;\n  @Input() notificationNotification: number = 0;\n}\n",
            "styleUrl": "./bmb-top-bar-user-section.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"bmb_top-bar-user-section\">\n  <div class=\"bmb_top-bar-user-section-icons\">\n    @if (mitec) {\n      <span class=\"bmb_top-bar-user-section-icon\">\n        <bmb-icon onkeypress=\"\" icon=\"assignment\" />\n        @if (assigmentNotification != 0) {\n          <span\n            class=\"bmb_top-bar-user-section-icon-number bmb_top-bar-user-section-icon-number-one\"\n            onkeypress=\"\"\n            >{{ assigmentNotification }}</span\n          >\n        }\n      </span>\n      <span class=\"bmb_top-bar-user-section-icon\">\n        <bmb-icon onkeypress=\"\" icon=\"notifications\" />\n        @if (notificationNotification != 0) {\n          <span\n            class=\"bmb_top-bar-user-section-icon-number bmb_top-bar-user-section-icon-number-two\"\n            >{{ notificationNotification }}</span\n          >\n        }\n      </span>\n    }\n    <span\n      class=\"bmb_top-bar-user-section-icon\"\n      [ngClass]=\"{ 'bmb_top-bar-user-section-icon-mitec': !mitec }\"\n    >\n      <bmb-icon icon=\"help\" />\n    </span>\n  </div>\n  <bmb-user-image\n    [image]=\"userInformation.image\"\n    size=\"mobile-small\"\n    class=\"bmb_top-bar-user-section-user-image\"\n  />\n  <h3 class=\"bmb_top-bar-user-section-title\">{{ userInformation.name }}</h3>\n  <span class=\"bmb_top-bar-user-section-role\">{{ userInformation.role }}</span>\n</section>\n"
        },
        {
            "name": "BmbTotpComponent",
            "id": "component-BmbTotpComponent-636184979fe16c3a872e002c617ffe9f44cc08a059af82ee1538d8e199598b4feadbaeebbd31fd0d24a6cc0ed26252025542057008a50475ce1f296d8815164a",
            "file": "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-totp",
            "styleUrls": [
                "./bmb-totp.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-totp.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "buttonText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "codeError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "helperText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "instanceId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxCode",
                    "defaultValue": "6",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "showButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "'(Time-based One-time Password)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'TOTP'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "handleSubmit",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "codeForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "buildForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "idx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'keydown', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "idx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlePaste",
                    "args": [
                        {
                            "name": "event",
                            "type": "ClipboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'paste', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ClipboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onKeyUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "idx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "idx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "keydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "idx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 113
                },
                {
                    "name": "paste",
                    "args": [
                        {
                            "name": "event",
                            "type": "ClipboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 128
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  EventEmitter,\n  Output,\n  OnInit,\n  ChangeDetectorRef,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  HostListener,\n} from '@angular/core';\nimport { Subject, timer } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbButtonDirective } from '../../directives/button.directive';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n  ReactiveFormsModule,\n} from '@angular/forms';\n\n@Component({\n  selector: 'bmb-totp',\n  templateUrl: './bmb-totp.component.html',\n  styleUrls: ['./bmb-totp.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbButtonDirective,\n    ReactiveFormsModule,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbTotpComponent implements OnInit {\n  private destroy$ = new Subject<void>();\n\n  @Input() title: string = 'TOTP';\n  @Input() subtitle: string = '(Time-based One-time Password)';\n  @Input() instanceId: string = '';\n  @Input() codeError: boolean = false;\n  @Input() errorMessage: string = '';\n  @Input() helperText: string = '';\n  @Input() showButton: boolean = false;\n  @Input() buttonText: string = '';\n  @Input() maxCode: number = 6;\n\n  @Output() handleSubmit = new EventEmitter<string>();\n\n  codeForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  buildForm() {\n    let group: { [key: string]: FormControl } = {};\n    for (let i = 0; i < this.maxCode; i++) {\n      group[`code${i}`] = new FormControl('', [\n        Validators.required,\n        Validators.pattern('[0-9a-zA-Z]'),\n      ]);\n    }\n    this.codeForm = this.formBuilder.group(group);\n  }\n\n  onKeyUp(event: KeyboardEvent, idx: number): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.onSubmit();\n      return;\n    }\n\n    if (\n      event.key === 'Tab' ||\n      event.key === 'Shift' ||\n      event.key === 'ArrowLeft' ||\n      event.key === 'ArrowRight' ||\n      event.key === 'Backspace'\n    ) {\n      return;\n    }\n\n    if (value && value.length === input.maxLength) {\n      if (idx < this.maxCode - 1) {\n        const nextInput = document.getElementById(\n          `code-${this.instanceId}-${idx + 1}`,\n        ) as HTMLInputElement;\n        if (nextInput) {\n          nextInput.focus();\n          nextInput.select();\n        }\n      } else if (idx === this.maxCode - 1 && !this.showButton) {\n        this.onSubmit();\n      }\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  handleKeyDown(event: KeyboardEvent, idx: number): void {\n    const input = event.target as HTMLInputElement;\n\n    if (event.key === 'Backspace' && input.value.length === 0 && idx > 0) {\n      const previousInput = document.getElementById(\n        `code-${this.instanceId}-${idx - 1}`,\n      ) as HTMLInputElement;\n      if (previousInput) {\n        previousInput.focus();\n        previousInput.select();\n      }\n    }\n  }\n\n  @HostListener('paste', ['$event'])\n  handlePaste(event: ClipboardEvent) {\n    let pasteData = event.clipboardData?.getData('text/plain');\n    if (pasteData && pasteData.length === this.maxCode) {\n      for (let i = 0; i < this.maxCode; i++) {\n        const control = this.codeForm.get(`code${i}`);\n        if (control) {\n          control.setValue(pasteData[i]);\n        }\n      }\n\n      const lastInput = document.getElementById(\n        `code-${this.instanceId}-${this.maxCode - 1}`,\n      ) as HTMLInputElement;\n      if (lastInput) {\n        lastInput.focus();\n        lastInput.select();\n      }\n\n      if (!this.showButton) {\n        this.onSubmit();\n      }\n\n      event.preventDefault();\n    }\n  }\n\n  onSubmit() {\n    // const now = Date.now();\n    // if (now - this.lastSubmitTime > 300) {\n    //   this.lastSubmitTime = now;\n\n    if (this.codeForm.valid) {\n      const code = Object.values(this.codeForm.value).join('');\n      this.handleSubmit.emit(code);\n    } else {\n      this.handleSubmit.emit('');\n    }\n    // }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/mixins\" as mixins;\n@use \"../../../assets/styles/base/rem\" as rem;\n\n.bmb_totp {\n  background-color: RGBA(var(--color-charade-50));\n  border-radius: rem.rem_calc(24);\n  margin: auto;\n  padding: rem.rem_calc(36 24);\n  width: rem.rem_calc(344);\n\n  &-form {\n    align-items: center;\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n  }\n\n  &-icon {\n    color: RGBA(var(--color-charade-950));\n    font-size: rem.rem_calc(48);\n    margin-bottom: rem.rem_calc(16);\n    width: rem.rem_calc(48);\n  }\n\n  &-title {\n    color: RGBA(var(--color-charade-950));\n    @include fonts.font(9, semibold);\n  }\n\n  &-subtitle {\n    color: RGBA(var(--color-charade-700));\n    margin-bottom: rem.rem_calc(16);\n    @include fonts.font(3, regular);\n  }\n\n  &-code {\n    align-items: center;\n    display: flex;\n  }\n\n  &-separator {\n    padding-right: rem.rem_calc(20);\n    position: relative;\n\n    &::after {\n      background-color: RGBA(var(--color-mariner-700));\n      border-radius: 100%;\n      content: \"\";\n      display: block;\n      height: rem.rem_calc(4);\n      position: absolute;\n      right: rem.rem_calc(8);\n      top: 45%;\n      width: rem.rem_calc(4);\n    }\n\n    &:last-child {\n      padding-right: 0;\n\n      &::after {\n        display: none;\n      }\n    }\n\n    &:focus-within {\n      &::before {\n        content: \"\";\n        border-radius: rem.rem_calc(4);\n        position: absolute;\n        left: 0;\n        bottom: rem.rem_calc(4);\n        width: rem.rem_calc(24);\n        height: rem.rem_calc(2);\n        background-color: RGBA(var(--color-mariner-500));\n        transition: background-color 0.3s;\n        left: rem.rem_calc(3.5);\n      }\n    }\n  }\n\n  &-input {\n    border: rem.rem_calc(1) solid var(--color-black-min);\n    border-radius: rem.rem_calc(4);\n    color: var(--color-black-light);\n    height: rem.rem_calc(32);\n    width: rem.rem_calc(32);\n    @include fonts.font(7, regular);\n    text-align: center;\n    outline: none;\n\n    &-error {\n      border-color: RGBA(var(--color-red-primary));\n    }\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  button {\n    margin-top: rem.rem_calc(16);\n  }\n\n  &-helper {\n    color: RGBA(var(--color-mariner-700));\n    margin: rem.rem_calc(8 0);\n    @include fonts.font(4, regular);\n  }\n\n  &-error {\n    color: RGBA(var(--color-red-primary));\n    margin: rem.rem_calc(16 0 8);\n    @include fonts.font(3, regular);\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_totp {\n    background-color: var(--color-black-tint);\n\n    &-icon,\n    &-title {\n      color: RGBA(var(--color-charade-50));\n    }\n\n    &-subtitle {\n      color: RGBA(var(--color-charade-200));\n    }\n\n    &-separator {\n      &::after {\n        background-color: RGBA(var(--color-charade-50));\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./bmb-totp.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"bmb_totp\">\n  <form [formGroup]=\"codeForm\" (ngSubmit)=\"onSubmit()\" class=\"bmb_totp-form\">\n    <bmb-icon icon=\"lock\" class=\"bmb_totp-icon\" [materialIcon]=\"true\" />\n    <div class=\"bmb_totp-title\">{{ title }}</div>\n    <p class=\"bmb_totp-subtitle\">{{ subtitle }}</p>\n    <div class=\"bmb_totp-code\">\n      <div\n        *ngFor=\"let i of [].constructor(maxCode); let idx = index\"\n        class=\"bmb_totp-separator\"\n      >\n        <input\n          type=\"text\"\n          formControlName=\"code{{ idx }}\"\n          [id]=\"'code-' + instanceId + '-' + idx\"\n          autocomplete=\"off\"\n          maxlength=\"1\"\n          [ngClass]=\"{\n            'bmb_totp-input-error': codeError,\n            'bmb_totp-input': true,\n          }\"\n          (keyup)=\"onKeyUp($event, idx)\"\n        />\n      </div>\n    </div>\n    @if (codeError) {\n      <p class=\"bmb_totp-error\">{{ errorMessage }}</p>\n    }\n    @if (showButton) {\n      <button bmbButton appearance=\"primary\" size=\"large\" type=\"submit\">\n        {{ buttonText }}\n      </button>\n    }\n    @if (showButton && helperText) {\n      <p class=\"bmb_totp-helper\">\n        {{ helperText }}\n      </p>\n    }\n  </form>\n</div>\n"
        },
        {
            "name": "BmbUserImageComponent",
            "id": "component-BmbUserImageComponent-1797c2a6998cf1ef73dee654e675a5a5f0f97df75d14729b7d45889fa3de85426e02c58f1c6b09ae81a449bd1c94fae9f6b058966bd1dcc5af822317ea4e0967",
            "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-image.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-user-image",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-user-image.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "altImage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bordered",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "image",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "link",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "target",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'bmb-user-image',\n  styleUrl: './bmb-user-image.component.scss',\n  templateUrl: './bmb-user-image.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbUserImageComponent {\n  @Input() size: string = '';\n  @Input() image: string = '';\n  @Input() altImage: string = '';\n  @Input() link: string = '';\n  @Input() target: string = '';\n  @Input() bordered: boolean = false;\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_user_image'];\n\n    if (this.size) {\n      classes.push('bmb_user_image-' + this.size);\n    }\n\n    if (this.bordered) {\n      classes.push('bmb_user_image-bordered');\n    }\n\n    return classes;\n  }\n}\n",
            "styleUrl": "./bmb-user-image.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<a [ngClass]=\"getClasses()\" [href]=\"link\" [target]=\"target\">\n  <img [src]=\"image\" [alt]=\"altImage\" />\n</a>\n"
        },
        {
            "name": "BmbUserSummaryComponent",
            "id": "component-BmbUserSummaryComponent-f8e38b4adb657f7c3cbb992bd2b73b11397097121db94262b27b0caaba43f0cf7321541f225dea410e443d2a24739277998cddcbcc557225f192c276b4e3eea1",
            "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-user-summary",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-user-summary.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "image",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoCareer",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isProfile",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "noBox",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbUserImageComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbButtonDirective } from '../../directives/button.directive';\nimport { BmbUserImageComponent } from '../bmb-user-image/bmb-user-image.component';\n\n@Component({\n  selector: 'bmb-user-summary',\n  standalone: true,\n  imports: [CommonModule, BmbButtonDirective, BmbUserImageComponent],\n  templateUrl: './bmb-user-summary.component.html',\n  styleUrl: './bmb-user-summary.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbUserSummaryComponent {\n  @Input() isProfile: boolean = false;\n  @Input() name: string = '';\n  @Input() id: string = '';\n  @Input() image: string = '';\n  @Input() infoCareer: string = '';\n  @Input() noBox: boolean = false;\n\n  @Output() onClick: EventEmitter<void> = new EventEmitter<void>();\n\n  handleClick(): void {\n    this.onClick.emit();\n  }\n}\n",
            "styleUrl": "./bmb-user-summary.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section\n  class=\"bmb_user-summary\"\n  [ngClass]=\"{\n    'bmb_user-summary-is-profile': isProfile && !noBox,\n    'bmb_user-summary-is-profile-no-box': isProfile && noBox,\n  }\"\n>\n  <bmb-user-image\n    [size]=\"'mobile-large'\"\n    [image]=\"image\"\n    [altImage]=\"name\"\n    [bordered]=\"true\"\n  />\n  <div class=\"bmb_user-summary-content\">\n    @if (isProfile) {\n      <h3 class=\"bmb_user-summary-content-title\">{{ name }}</h3>\n    } @else {\n      <h3 class=\"bmb_user-summary-content-title\">\n        ¡Buenas tardes <br />{{ name }}!\n      </h3>\n    }\n    <span class=\"bmb_user-summary-content-id\">{{ id }}</span>\n    <span class=\"bmb_user-summary-content-id\">{{ infoCareer }}</span>\n  </div>\n  @if (isProfile) {\n    <button\n      class=\"bmb_user-summary-button\"\n      bmbButton\n      appearance=\"secondary-outlined\"\n      (click)=\"handleClick()\"\n    >\n      ID Digital\n    </button>\n  }\n</section>\n"
        },
        {
            "name": "BmbValueCounterComponent",
            "id": "component-BmbValueCounterComponent-a815caf2302db3742be9372c483fa4a532a4b788bf5397e25b9d1419321900e50baf2d7c949f4ee47ac8f3af5d4b7601dfc923b1bc55dfc190ceb488373b8f4d",
            "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-value-counter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-value-counter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "progress",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-value-counter',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-value-counter.component.html',\n  styleUrl: './bmb-value-counter.component.scss',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbValueCounterComponent {\n  @Input() label: string = '';\n  @Input() value: string = '';\n  @Input() progress: string = '';\n}\n",
            "styleUrl": "./bmb-value-counter.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bmb_value-counter\">\n  <h3 class=\"bmb_value-counter-label\">{{ label }}</h3>\n  <span class=\"bmb_value-counter-progress\">{{ progress }}</span>\n  <span class=\"bmb_value-counter-slash\">/</span>\n  <span class=\"bmb_value-counter-value\">{{ value }}</span>\n</div>\n"
        },
        {
            "name": "BmbWheelMenuComponent",
            "id": "component-BmbWheelMenuComponent-b4e9470a118f946f9e97d791e62e777b606a5fd3760d812f21037d19b81381f26aee2f14c35ff85f7914959a304b8fe8c92966a9e7b27e9342998d4c1670cfff",
            "file": "projects/ds-ng/src/lib/components/bmb-wheel-menu/bmb-wheel-menu.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-wheel-menu",
            "styleUrls": [
                "./bmb-wheel-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-wheel-menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "apps",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "navItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "NavItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onValueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeNavItemIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "isFull",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "tabsComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BmbTabsComponent",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "BmbTabsComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "wheel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'wheel', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "wheelMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'wheelMenu', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleBackButton",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleValueChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectFullMenuNavItem",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectNavItem",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setActiveTab",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleFullWheel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleWheel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BmbFabComponent",
                    "type": "component"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                },
                {
                    "name": "BmbInnerHeaderComponent",
                    "type": "component"
                },
                {
                    "name": "BmbTabsComponent",
                    "type": "component"
                },
                {
                    "name": "BmbInteractiveIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbFabComponent } from '../bmb-fab/bmb-fab.component';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbInnerHeaderComponent } from '../bmb-inner-header/bmb-inner-header.component';\nimport { BmbTabsComponent } from '../bmb-tabs/bmb-tabs.component';\nimport { BmbInteractiveIconComponent } from '../bmb-interactive-icon/bmb-interactive-icon.component';\nimport { IBmbApp } from '../../types';\n\ninterface NavItem {\n  title: string;\n  id: number;\n  badge?: number;\n  isActive?: boolean;\n}\n\n@Component({\n  selector: 'bmb-wheel-menu',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbFabComponent,\n    BmbIconComponent,\n    BmbInnerHeaderComponent,\n    BmbTabsComponent,\n    BmbInteractiveIconComponent,\n  ],\n  styleUrls: ['./bmb-wheel-menu.component.scss'],\n  templateUrl: './bmb-wheel-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbWheelMenuComponent implements AfterViewInit {\n  @Input() navItems: NavItem[] = [];\n  @Input() apps: { [key: number]: IBmbApp[] } = {};\n  @Input() data: string[] = [];\n  @Input() isLoading: boolean = false;\n  @Output() onValueChange: EventEmitter<string> = new EventEmitter<string>();\n  @ViewChild('wheel', { static: false }) wheel!: ElementRef;\n  @ViewChild('wheelMenu', { static: false }) wheelMenu!: ElementRef;\n  @ViewChild(BmbTabsComponent) tabsComponent!: BmbTabsComponent;\n\n  activeNavItemIndex: number = 0;\n  isFull: boolean = false;\n  isOpen: boolean = false;\n\n  constructor() {}\n\n  ngAfterViewInit() {\n    this.updateClasses();\n    this.selectNavItem(0);\n  }\n\n  toggleWheel() {\n    this.isFull = false;\n    this.isOpen = !this.isOpen;\n    this.updateClasses();\n  }\n  toggleFullWheel() {\n    this.isFull = !this.isFull;\n    if (!this.isFull) {\n      this.isOpen = true;\n    } else {\n      this.isOpen = false;\n      this.setActiveTab(this.activeNavItemIndex);\n      setTimeout(() => {\n        this.isOpen = true;\n        this.setActiveTab(this.activeNavItemIndex);\n      }, 100);\n    }\n    this.updateClasses();\n  }\n\n  handleBackButton() {\n    this.toggleFullWheel();\n  }\n\n  selectNavItem(index: number) {\n    if (this.activeNavItemIndex !== index) {\n      this.activeNavItemIndex = index;\n      this.updateClasses();\n      this.setActiveTab(index);\n    }\n  }\n\n  selectFullMenuNavItem(index: number) {\n    if (this.activeNavItemIndex !== index) {\n      this.activeNavItemIndex = index;\n      this.updateClasses();\n      this.setActiveTab(index);\n    }\n  }\n\n  getClasses(index: number): string {\n    const activeIndex = this.activeNavItemIndex;\n    if (index === activeIndex) {\n      return 'active';\n    } else if (index === (activeIndex + 1) % 3) {\n      return 'next';\n    } else if (index === (activeIndex + 2) % 3) {\n      return 'previous';\n    }\n    return '';\n  }\n\n  updateClasses() {\n    if (!this.wheelMenu) return;\n\n    const navItems = Array.from(\n      this.wheelMenu.nativeElement.querySelectorAll('.bmb_wheel-item'),\n    ) as HTMLElement[];\n\n    navItems.forEach((item, index) => {\n      item.classList.remove('previous', 'active', 'next');\n      item.classList.add(...this.getClasses(index).split(' '));\n    });\n  }\n\n  setActiveTab(index: number) {\n    if (this.tabsComponent) {\n      this.tabsComponent.selectTab(this.navItems[index].id);\n    }\n  }\n\n  get activeApps() {\n    return this.apps[this.activeNavItemIndex] || [];\n  }\n\n  handleValueChange(event: string): void {\n    this.onValueChange.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"../../../assets/styles/base/rem\" as rem;\n@use \"../../../assets/styles/base/fonts\" as fonts;\n\n.bmb_wheel {\n  bmb-fab {\n    position: absolute;\n    z-index: 30;\n  }\n\n  bmb-tabs {\n    .bmb_tabs {\n      margin: rem.rem_calc(24) auto;\n\n      &-tab {\n        display: grid;\n        grid-template-columns: repeat(3, 1fr);\n      }\n    }\n  }\n\n  &-wrapper {\n    background-color: RGBA(var(--color-charade-50), 1);\n    border: rem.rem_calc(4) solid RGBA(var(--color-mariner-700), 1);\n    border-radius: 50%;\n    bottom: rem.rem_calc(-260);\n    height: rem.rem_calc(700);\n    left: 50%;\n    margin-left: rem.rem_calc(-350);\n    overflow: hidden;\n    position: fixed;\n    transition: all 0.5s ease-in;\n    width: rem.rem_calc(700);\n    z-index: 10;\n\n    .bmb_wheel-apps {\n      bmb-interactive-icon {\n        &:first-child {\n          transform: translate(rem.rem_calc(-15), rem.rem_calc(60));\n        }\n\n        &:nth-child(3) {\n          transform: translate(rem.rem_calc(20), 0);\n        }\n\n        &:nth-child(4) {\n          transform: translate(rem.rem_calc(35), rem.rem_calc(60));\n        }\n\n        &:nth-child(5) {\n          transform: translate(rem.rem_calc(-15), rem.rem_calc(90));\n        }\n\n        &:nth-child(6) {\n          transform: translate(0, rem.rem_calc(32));\n        }\n\n        &:last-child {\n          transform: translate(rem.rem_calc(20), rem.rem_calc(32));\n        }\n      }\n    }\n  }\n\n  &-button {\n    cursor: pointer;\n    height: rem.rem_calc(24);\n    left: 0;\n    margin: auto;\n    position: absolute;\n    right: 0;\n    top: rem.rem_calc(10);\n\n    bmb-icon {\n      color: rgba(var(--color-charade-950), 1);\n      font-size: rem.rem_calc(25);\n    }\n  }\n\n  &-apps {\n    display: flex;\n    flex-wrap: wrap;\n    gap: rem.rem_calc(10);\n    justify-content: flex-start;\n    position: absolute;\n    right: 26%;\n    top: 18%;\n    width: rem.rem_calc(320);\n  }\n\n  &-menu {\n    position: relative;\n  }\n\n  &-item {\n    align-items: center;\n    display: flex;\n    height: rem.rem_calc(50);\n    justify-content: center;\n    position: absolute;\n    width: rem.rem_calc(150);\n    overflow: hidden;\n\n    .bmb_wheel-nav {\n      fill: rgba(var(--color-charade-500), 1);\n    }\n\n    &.previous {\n      left: rem.rem_calc(70);\n      top: rem.rem_calc(80);\n      transform: rotate(-41deg);\n    }\n\n    &.active {\n      left: 0;\n      margin: auto;\n      right: 0;\n      top: 1.25rem;\n\n      .bmb_wheel-nav {\n        fill: rgba(var(--color-mariner-950), 1);\n      }\n\n      &::after {\n        border: solid rem.rem_calc(4) rgba(var(--color-mariner-700), 1);\n        border-color: rgba(var(--color-mariner-700), 1) transparent transparent\n          transparent;\n        border-radius: 63%;\n        bottom: -18px;\n        content: \"\";\n        height: 25px;\n        left: 0;\n        margin: auto;\n        position: absolute;\n        right: 0;\n        width: 75%;\n      }\n    }\n\n    &.next {\n      right: rem.rem_calc(70);\n      top: rem.rem_calc(80);\n      transform: rotate(41deg);\n    }\n  }\n\n  &-nav {\n    @include fonts.font(5, semibold);\n    height: 40px;\n    position: absolute;\n    top: rem.rem_calc(10);\n    z-index: 10;\n  }\n\n  &-full {\n    background-color: RGBA(var(--color-charade-200), 1);\n    bottom: 0;\n    height: 100%;\n    left: 0;\n    margin: auto;\n    position: fixed;\n    right: 0;\n    width: 100%;\n    z-index: 30;\n\n    .bmb_wheel-apps {\n      padding: rem.rem_calc(0 24);\n      position: relative;\n      right: inherit;\n      top: inherit;\n      width: 100%;\n    }\n  }\n\n  &-svg {\n    height: rem.rem_calc(500);\n    overflow: visible;\n    pointer-events: none;\n    rotate: 270deg;\n    width: rem.rem_calc(500);\n  }\n\n  &-path {\n    @include fonts.font(5, semibold);\n    text-anchor: middle;\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_wheel {\n    &-wrapper {\n      background-color: RGBA(var(--color-charade-950), 1);\n      border: rem.rem_calc(4) solid RGBA(var(--color-neon-primary), 1);\n    }\n\n    &-button {\n      bmb-icon {\n        color: rgba(var(--color-charade-50), 1);\n      }\n    }\n    &-item {\n      .bmb_wheel-nav {\n        fill: rgba(var(--color-charade-500), 1);\n      }\n\n      &.active {\n        &::after {\n          border-color: rgba(var(--color-neon-primary), 1) transparent\n            transparent transparent;\n        }\n\n        .bmb_wheel-nav {\n          fill: rgba(var(--color-charade-50), 1);\n        }\n      }\n    }\n\n    &-full {\n      background-color: RGBA(var(--color-charade-950), 1);\n    }\n  }\n}\n",
                    "styleUrl": "./bmb-wheel-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 55
            },
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "accessors": {
                "activeApps": {
                    "name": "activeApps",
                    "getSignature": {
                        "name": "activeApps",
                        "type": "",
                        "returnType": "",
                        "line": 135
                    }
                }
            },
            "templateData": "<div class=\"bmb_wheel\">\n  <bmb-fab\n    [icon]=\"'apps'\"\n    [text]=\"'FAB'\"\n    [size]=\"'large'\"\n    [type]=\"'normal'\"\n    (fabClick)=\"toggleWheel()\"\n  />\n\n  @if (isOpen && !isFull) {\n    <div #wheel class=\"bmb_wheel-wrapper\">\n      <button class=\"bmb_wheel-button\" (click)=\"toggleFullWheel()\">\n        <bmb-icon icon=\"keyboard_arrow_up\" />\n      </button>\n      <ul #wheelMenu class=\"bmb_wheel-menu\">\n        <li\n          *ngFor=\"let nav of navItems.slice(0, 3); let i = index\"\n          class=\"bmb_wheel-item\"\n          [ngClass]=\"getClasses(i)\"\n        >\n          <button (click)=\"selectNavItem(i)\" class=\"bmb_wheel-nav\">\n            <svg viewBox=\"0 0 500 500\" class=\"bmb_wheel-svg\">\n              <path\n                id=\"circlePath{{ i }}\"\n                d=\"M250,250 m-240,0 a240,240 0 1,1 480,0 a240,240 0 1,1 -480,0\"\n                fill=\"none\"\n                stroke=\"none\"\n              />\n              <text>\n                <textPath\n                  [attr.href]=\"'#circlePath' + i\"\n                  startOffset=\"50%\"\n                  class=\"bmb_wheel-path\"\n                >\n                  {{ nav.title }}\n                </textPath>\n              </text>\n            </svg>\n          </button>\n        </li>\n      </ul>\n\n      <div class=\"bmb_wheel-apps\">\n        <ng-container *ngFor=\"let app of activeApps\">\n          <bmb-interactive-icon\n            [appearance]=\"app.appearance\"\n            [title]=\"app.title\"\n            [icon]=\"app.icon\"\n            [target]=\"app.target\"\n            [link]=\"app.link\"\n          />\n        </ng-container>\n      </div>\n    </div>\n  }\n\n  @if (isFull) {\n    <div class=\"bmb_wheel-full\">\n      <bmb-inner-header\n        title=\"Inner Header\"\n        (onHandleBack)=\"handleBackButton()\"\n        (onValueChange)=\"handleValueChange($event)\"\n        [data]=\"data\"\n      />\n      <bmb-tabs\n        [tabs]=\"navItems.slice(0, 3)\"\n        (selected)=\"selectFullMenuNavItem($event.id)\"\n      />\n      <div class=\"bmb_wheel-apps\">\n        <ng-container *ngFor=\"let app of activeApps\">\n          <bmb-interactive-icon\n            [appearance]=\"app.appearance\"\n            [title]=\"app.title\"\n            [icon]=\"app.icon\"\n            [horizontal]=\"false\"\n            [target]=\"app.target\"\n            [link]=\"app.link\"\n          />\n        </ng-container>\n      </div>\n    </div>\n  }\n</div>\n"
        },
        {
            "name": "DsNgComponent",
            "id": "component-DsNgComponent-28964880d025765a36a1fde045efea0520d871433d5037a9446bd9a81dfd01c477b2c4fd6ac6010baa2228b9c378ed5244b53383869f2e60d23a20086c17df46",
            "file": "projects/ds-ng/src/lib/ds-ng.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-ds-ng",
            "styleUrls": [],
            "styles": [
                ""
            ],
            "template": "<p>ds-ng works!</p>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'bmb-ds-ng',\n  template: ` <p>ds-ng works!</p> `,\n  styles: ``,\n})\nexport class DsNgComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n",
            "extends": []
        },
        {
            "name": "StorybookToastWrapperComponent",
            "id": "component-StorybookToastWrapperComponent-91bd177b40e0853e1112052e2ca86b11ce509b3d7cc71d0a382c7fa65039f83d3eefd76faceb1674c2f406dd339ddfd4f7317b010f516a9d76ccc4b705be97de",
            "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmp-login-onboarding.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-toast-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<div style=\"max-width: 300px; margin: 0 auto\">\n  <bmb-login-onboarding (handleRequet)=\"handleRequet($event)\">\n    <p>custom content</p>\n  </bmb-login-onboarding>\n  <bmb-theme initialTheme=\"dark\" [showControls]=\"false\" />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "activate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "auth",
                    "args": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "biometricData",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUserInfo",
                    "args": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "IBmbUserInfo",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleRequet",
                    "args": [
                        {
                            "name": "event",
                            "type": "IBmbLoginOnbording",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IBmbLoginOnbording",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "init",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toTPCode",
                    "args": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbLoginOnboardingComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  moduleMetadata,\n  type Meta,\n  type StoryFn,\n  type StoryObj,\n} from '@storybook/angular';\nimport { BmbLoginOnboardingComponent } from './bmb-login-onboarding.component';\nimport { Component } from '@angular/core';\nimport { IBmbLoginOnbording, IBmbUserInfo } from './types';\n\n@Component({\n  standalone: true,\n  imports: [BmbLoginOnboardingComponent],\n  selector: 'storybook-toast-wrapper',\n  template: `\n    <div style=\"max-width: 300px; margin: 0 auto\">\n      <bmb-login-onboarding (handleRequet)=\"handleRequet($event)\">\n        <p>custom content</p>\n      </bmb-login-onboarding>\n      <bmb-theme initialTheme=\"dark\" [showControls]=\"false\" />\n    </div>\n  `,\n})\nclass StorybookToastWrapperComponent {\n  auth(data: unknown): boolean {\n    data;\n    return true;\n  }\n\n  toTPCode(data: unknown): boolean {\n    return data === '123456';\n  }\n\n  biometricData(): boolean {\n    return true;\n  }\n\n  activate(): boolean {\n    return true;\n  }\n\n  getUserInfo(data: unknown): IBmbUserInfo {\n    data;\n    return {\n      id: 'A00123456',\n      fullName: 'Borrego Perez',\n      profilePicture:\n        'https://studio-assets.supernova.io/design-systems/74407/16b3da66-1d17-46fe-be94-a01dea059580.svg',\n    };\n  }\n\n  init(): void {\n    console.log('init');\n  }\n\n  handleRequet(event: IBmbLoginOnbording) {\n    const { data, action, callback } = event;\n\n    switch (action) {\n      case 'auth':\n        setTimeout(() => {\n          callback(this.auth(data));\n        }, 1000);\n        break;\n      case 'toTP':\n        callback(this.toTPCode(data));\n        break;\n      case 'biometric':\n        callback(this.biometricData());\n        break;\n      case 'activate':\n        callback(this.activate());\n        break;\n      case 'getUserInfo':\n        callback(this.getUserInfo(data));\n        break;\n      case 'init':\n        setTimeout(() => {\n          callback(this.init());\n        }, 1000);\n        break;\n      default:\n        console.log('Invalid action');\n    }\n  }\n}\n\nexport default {\n  title: 'Macro Componentes/Login onboarding',\n  component: BmbLoginOnboardingComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [StorybookToastWrapperComponent, BmbLoginOnboardingComponent],\n      providers: [],\n    }),\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: `\nNote: This component **does not have support** for the \\`light\\` theme.\n\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport {\n  BmbLoginOnboardingComponent,\n  IBmbLoginOnbording,\n   IBmbUserInfo,\n} from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [ BmbLoginOnboardingComponent ],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\nexport class AppComponent {\n  auth(data: unknown): boolean {\n    data;\n    return true;\n  }\n\n  toTPCode(data: unknown): boolean {\n    return data === '123456';\n  }\n\n  biometricData(): boolean {\n    return true;\n  }\n\n  activate(): boolean {\n    return true;\n  }\n\n  getUserInfo(data: unknown): IBmbUserInfo {\n    data;\n    return {\n      id: 'A00123456',\n      fullName: 'Borrego Perez',\n      profilePicture: 'https://studio-assets.supernova.io/design-systems/74407/16b3da66-1d17-46fe-be94-a01dea059580.svg',\n    };\n  }\n\n  init(): void {\n    console.log('init');\n  }\n\n  handleRequet(event: IBmbLoginOnbording) {\n    const { data, action, callback } = event;\n\n    switch (action) {\n      case 'auth':\n        setTimeout(() => {\n          callback(this.auth(data));\n        }, 1000);\n        break;\n      case 'toTP':\n        callback(this.toTPCode(data));\n        break;\n      case 'biometric':\n        callback(this.biometricData());\n        break;\n      case 'activate':\n        callback(this.activate());\n        break;\n      case 'getUserInfo':\n        callback(this.getUserInfo(data));\n        break;\n      case 'init':\n        setTimeout(() => {\n          callback(this.init());\n        }, 1000);\n        break;\n      default:\n        console.log('Invalid action');\n    }\n  }\n}\n\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n<bmb-login-onboarding (handleRequet)=\"handleRequet($event)\">\n  <p>custom content</p>\n</bmb-login-onboarding>\n        `,\n      },\n    },\n  },\n  argTypes: {\n    handleRequet: {\n      name: 'Handle Requet',\n      control: null,\n      description: 'Output function',\n      table: {\n        category: 'Events',\n        type: { summary: 'function' },\n      },\n    },\n  },\n} as Meta<typeof BmbLoginOnboardingComponent>;\n\nexport const Default: StoryFn<typeof StorybookToastWrapperComponent> = (\n  args,\n) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n        <bmb-login-onboarding (handleRequet)=\"handleRequet($event)\">\n          <p>custom content</p>\n        </bmb-login-onboarding>\n      `,\n  };\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "StorybookToastWrapperComponent",
            "id": "component-StorybookToastWrapperComponent-9fa011f774ae9be8a261876085c9b70338c170be908e9482834eb0c151f0823199e761224389c30e85eeeaa75a45d0f5c2afe9c1f755cb1ed3ecbf7fd67713b2-1",
            "file": "projects/ds-ng/src/lib/components/bmb-modal/bmb-modal.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-toast-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<button\n  bmbButton\n  appearance=\"primary\"\n  icon=\"home\"\n  size=\"small\"\n  position=\"left\"\n  [case]=\"false\"\n  (click)=\"openModalComponent()\"\n>\n  Open Modal\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "alertStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "\"error\" | \"event\" | \"neutral\" | \"warning\" | \"success\"",
                    "decorators": []
                },
                {
                    "name": "content",
                    "defaultValue": "'Lorem ipsum dolor sit amet consectetur adipisicing elit.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primaryBtnLabel",
                    "defaultValue": "'OK'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "secondaryBtnLabel",
                    "defaultValue": "'Cancel'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"small\" | \"meidum\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "subtitle",
                    "defaultValue": "'Subtitulo Opcional'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Titulo Modal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "\"alert\" | \"action\" | \"informative\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "{\n    title: 'Modal Title',\n    subtitle: 'Modal Subtitle',\n    content: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.',\n    size: 'large',\n    type: 'action',\n    alertStyle: 'error',\n    primaryBtnLabel: 'Ok',\n    scrollable: false,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalDataConfig",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "openModalComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ModalDataConfig } from './bmb-modal.interface';\nimport { Component, Input } from '@angular/core';\nimport { Meta, StoryFn, moduleMetadata } from '@storybook/angular';\nimport { BmbModalComponent } from './bmb-modal.component';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbButtonDirective } from '../../directives/button.directive';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  standalone: true,\n  imports: [BmbButtonDirective],\n  selector: 'storybook-toast-wrapper',\n  template: `\n    <button\n      bmbButton\n      appearance=\"primary\"\n      icon=\"home\"\n      size=\"small\"\n      position=\"left\"\n      [case]=\"false\"\n      (click)=\"openModalComponent()\"\n    >\n      Open Modal\n    </button>\n  `,\n})\nclass StorybookToastWrapperComponent {\n  @Input() title: string = 'Titulo Modal';\n  @Input() subtitle: string = 'Subtitulo Opcional';\n  @Input() content?: string =\n    'Lorem ipsum dolor sit amet consectetur adipisicing elit.';\n  @Input() size?: 'small' | 'meidum' | 'large';\n  @Input() type?: 'alert' | 'action' | 'informative';\n  @Input() alertStyle?: 'error' | 'event' | 'neutral' | 'warning' | 'success';\n  @Input() primaryBtnLabel?: string = 'OK';\n  @Input() secondaryBtnLabel?: string = 'Cancel';\n  constructor(private matDialog: MatDialog) {}\n\n  data: ModalDataConfig = {\n    title: 'Modal Title',\n    subtitle: 'Modal Subtitle',\n    content: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.',\n    size: 'large',\n    type: 'action',\n    alertStyle: 'error',\n    primaryBtnLabel: 'Ok',\n    scrollable: false,\n  };\n\n  openModalComponent() {\n    this.matDialog.open(BmbModalComponent, {\n      data: this.data,\n    });\n  }\n}\n\nexport default {\n  title: 'Macro Componentes/Modal',\n  component: BmbModalComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        StorybookToastWrapperComponent,\n        BmbModalComponent,\n        BmbIconComponent,\n        BmbButtonDirective,\n      ],\n      providers: [],\n    }),\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport { MatDialog } from '@angular/material/dialog';\nimport { BmbModalComponent, ModalDataConfig } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\nexport class Component {\n    constructor(private matDialog: MatDialog) {}\n\n    data: ModalDataConfig = {\n        title: 'Modal Title',\n        subtitle: 'Modal Subtitle',\n        content: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.',\n        size: 'large',\n        type: 'alert',\n        alertStyle: 'error',\n        primaryBtnLabel: 'Ok',\n      }\n\n    openModalComponent() {\n      this.matDialog.open(BmbModalComponent, { data: this.data });\n    }\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    title: {\n      name: 'Title',\n      control: {\n        type: 'text',\n      },\n      description:\n        'Specifies the text display. This message should be concise and direct.',\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n    },\n    subtitle: {\n      name: 'Subtitle',\n      control: {\n        type: 'text',\n      },\n      description:\n        'Specifies the subtitle text display. This message should be concise and direct.',\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n    },\n    content: {\n      name: 'Content',\n      control: {\n        type: 'text',\n      },\n      description:\n        'Specifies the body text display. This attribute can receive a Template Reference instead of the string.',\n      table: {\n        category: 'Properties',\n        type: { summary: ['string', 'Template Reference'] },\n      },\n    },\n    size: {\n      name: 'Size',\n      control: {\n        type: 'select',\n      },\n      options: ['small', 'medium', 'large'],\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'small' },\n        type: { summary: 'string' },\n      },\n      description:\n        'Specifies the size of the modal. This string should be: small, medium or large.',\n    },\n    type: {\n      name: 'Type',\n      control: {\n        type: 'select',\n      },\n      options: ['alert', 'informative', 'action'],\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'action' },\n        type: { summary: 'string' },\n      },\n      description:\n        'Specifies the type of the modal. This string should be: alert, informative or action.',\n    },\n    alertStyle: {\n      name: 'Alert Style',\n      control: {\n        type: 'select',\n      },\n      options: [\n        'normal',\n        'primary',\n        'success',\n        'event',\n        'warning',\n        'error',\n        'neutral',\n      ],\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'primary' },\n        type: { summary: 'string' },\n      },\n      description:\n        'Specifies the size of the modal. This string should be: error, warning, event, neutral, success, primary',\n    },\n    primaryBtnLabel: {\n      name: 'Primary Button Label',\n      control: {\n        type: 'string',\n      },\n      description: 'Specifies the text of the main button.',\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n    },\n    secondaryBtnLabel: {\n      name: 'Secondary Button Label',\n      control: {\n        type: 'string',\n      },\n      description: 'Specifies the text of the secondary button.',\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n    },\n  },\n  args: {\n    title: 'Modal Title',\n    subtitle: 'Modal Subtitle',\n    content: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.',\n    size: 'small',\n    type: 'action',\n    alertStyle: 'error',\n    primaryBtnLabel: 'Action',\n    secondaryBtnLabel: 'Cancel',\n  },\n} as Meta<typeof BmbModalComponent>;\n\nfunction attributes(object: { [key: string]: any }): string {\n  return Object.entries(object)\n    .filter(([key]) => key !== 'text')\n    .map(([key, value]) => {\n      if (key === 'duration') {\n        return `[${key}]=\"${value}\"`;\n      }\n      return `${key}=\"${value}\"`;\n    })\n    .join(' ');\n}\n\nexport const Default: StoryFn<typeof StorybookToastWrapperComponent> = (\n  args,\n) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Open Modal</button>\n      `,\n  };\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "StorybookToastWrapperComponent-1"
        },
        {
            "name": "StorybookToastWrapperComponent",
            "id": "component-StorybookToastWrapperComponent-1e0147c85560bfca8a8316efb7308458b4aca7b36098d3f73c17b47555c3cd865995f395f8f8f888eedf10118de0308aac3f79fd1adc5dd531c5e041ac8ef7a4-2",
            "file": "projects/ds-ng/src/lib/components/bmb-overlay/bmb-overlay.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-toast-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<div style=\"width: 100%; height: 500px\">\n  <button\n    style=\"position: absolute; z-index: 3;\"\n    bmbButton\n    appearance=\"primary\"\n    icon=\"home\"\n    size=\"small\"\n    position=\"left\"\n    [case]=\"false\"\n    (click)=\"showOverlay()\"\n  >\n    Open Overlay\n  </button>\n\n  <bmb-overlay [active]=\"this.showOverlayComponent\" />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showOverlayComponent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "showOverlay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbOverlayComponent",
                    "type": "component"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                },
                {
                    "name": "BmbIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild } from '@angular/core';\nimport { Meta, StoryFn, moduleMetadata } from '@storybook/angular';\nimport { BmbOverlayComponent } from './bmb-overlay.component';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbButtonDirective } from '../../directives/button.directive';\n\n@Component({\n  standalone: true,\n  imports: [BmbOverlayComponent, BmbButtonDirective, BmbIconComponent],\n  selector: 'storybook-toast-wrapper',\n  template: `\n    <div style=\"width: 100%; height: 500px\">\n      <button\n        style=\"position: absolute; z-index: 3;\"\n        bmbButton\n        appearance=\"primary\"\n        icon=\"home\"\n        size=\"small\"\n        position=\"left\"\n        [case]=\"false\"\n        (click)=\"showOverlay()\"\n      >\n        Open Overlay\n      </button>\n\n      <bmb-overlay [active]=\"this.showOverlayComponent\" />\n    </div>\n  `,\n})\nclass StorybookToastWrapperComponent {\n  showOverlayComponent: boolean = false;\n  constructor() {}\n\n  showOverlay() {\n    this.showOverlayComponent = !this.showOverlayComponent;\n  }\n}\n\nexport default {\n  title: 'Micro Componentes/Overlay',\n  component: BmbOverlayComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        StorybookToastWrapperComponent,\n        BmbOverlayComponent,\n        BmbIconComponent,\n        BmbButtonDirective,\n      ],\n      providers: [],\n    }),\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport { BmbOverlayComponent } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [BmbOverlayComponent],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    active: {\n      name: 'Active',\n      control: { type: 'boolean' },\n      description: 'Show or hide overlay',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' },\n      },\n    },\n  },\n  args: {\n    active: false,\n  },\n} as Meta<typeof BmbOverlayComponent>;\n\nexport const Default: StoryFn<typeof StorybookToastWrapperComponent> = (\n  args,\n) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Open Modal</button>\n      `,\n  };\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 31
            },
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "StorybookToastWrapperComponent-2"
        },
        {
            "name": "StorybookToastWrapperComponent",
            "id": "component-StorybookToastWrapperComponent-d2a5738331a36e39cd15935666385354239c11fbd326e2ab470a812e26e4b929a79713eadb71f9645f377631e2662b8a99955eb934ea5670c89d0db351394dab-3",
            "file": "projects/ds-ng/src/lib/components/bmb-push-notification/bmb-push-notification.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-toast-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<div style=\"height: 500px\">\n  <button\n    bmbButton\n    appearance=\"primary\"\n    icon=\"home\"\n    (click)=\"addNotificationFnc()\"\n  >\n    Add notification\n  </button>\n  <bmb-push-notification />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "delay",
                    "defaultValue": "5000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "required": false
                },
                {
                    "name": "isFullColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appIcon",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "appName",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "content",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "date",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "delay",
                    "defaultValue": "5000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "required": false
                },
                {
                    "name": "icon",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "isFullColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "required": false
                },
                {
                    "name": "media",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "subtitle",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "title",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "type",
                    "defaultValue": "input<NotificationType>('tec')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "userAvatar",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "userMail",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "userName",
                    "defaultValue": "input('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "addNotificationFnc",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "enableDontAskAgain",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbPushNotificationComponent",
                    "type": "component"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input } from '@angular/core';\nimport { Meta, StoryFn, moduleMetadata } from '@storybook/angular';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbButtonDirective } from '../../directives/button.directive';\nimport { BmbNotificationService } from '../../services/notification.service';\nimport { BmbPushNotificationComponent } from './bmb-push-notification.component';\nimport { NotificationType } from './types';\n\n@Component({\n  standalone: true,\n  imports: [BmbPushNotificationComponent, BmbButtonDirective],\n  selector: 'storybook-toast-wrapper',\n  template: `\n    <div style=\"height: 500px\">\n      <button\n        bmbButton\n        appearance=\"primary\"\n        icon=\"home\"\n        (click)=\"addNotificationFnc()\"\n      >\n        Add notification\n      </button>\n      <bmb-push-notification />\n    </div>\n  `,\n})\nclass StorybookToastWrapperComponent {\n  title = input('');\n  subtitle = input('');\n  content = input('');\n  icon = input('');\n  type = input<NotificationType>('tec');\n  isFullColor = input(false);\n  delay = input(5000);\n  date = input('');\n  appName = input('');\n  appIcon = input('');\n  media = input('');\n  userName = input('');\n  userAvatar = input('');\n  userMail = input('');\n\n  enableDontAskAgain() {\n    alert(\"Don't ask again\");\n  }\n\n  constructor(private notificationSignal: BmbNotificationService) {}\n\n  addNotificationFnc() {\n    console.log(typeof this.delay());\n\n    this.notificationSignal.addNotification({\n      title: this.title(),\n      subTitle: this.subtitle(),\n      content: this.content(),\n      icon: this.icon(),\n      type: this.type(),\n      dontAskAgainEvent: this.enableDontAskAgain,\n      isFullColor: this.isFullColor(),\n      delay: this.delay(),\n      date: this.date(),\n      appName: this.appName(),\n      appIcon: this.appIcon(),\n      media: this.media(),\n      userName: this.userName(),\n      userAvatar: this.userAvatar(),\n      userMail: this.userMail(),\n    });\n  }\n}\n\nexport default {\n  title: 'Macro Componentes/Push notification',\n  component: BmbPushNotificationComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        StorybookToastWrapperComponent,\n        BmbPushNotificationComponent,\n        BmbIconComponent,\n        BmbButtonDirective,\n      ],\n      providers: [],\n    }),\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n##Configuration\nAdd the \\`BmbNotificationService\\` to your App providers:\n\n\\`\\`\\`providers: [\n  provideRouter(routes),\n  importProvidersFrom([BmbNotificationService, ...]),\n],\\`\\`\\`\n\n##Show notifications\nAdd the \\`BmbPushNotificationComponent\\` at the bottom of your **app.component.html**\n\n\\`\\`\\`typescript\nimport { BmbPushNotificationComponent, NotificationType, INotificationAction, NotificationType } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [ BmbPushNotificationComponent ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    title: {\n      name: 'Title',\n      control: {\n        type: 'text',\n      },\n      description: 'Set the notification title.',\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n    },\n    subtitle: {\n      name: 'Subtitle',\n      control: {\n        type: 'text',\n      },\n      description: 'Set the notification subtitle.',\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n    },\n    content: {\n      name: 'Content',\n      control: {\n        type: 'text',\n      },\n      description: 'Set the notification content.',\n      table: {\n        category: 'Properties',\n        type: { summary: ['string', 'Template Reference'] },\n      },\n    },\n    icon: {\n      name: 'Icon',\n      control: {\n        type: 'text',\n      },\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n      description: 'Set the notification icon.',\n    },\n    type: {\n      name: 'Type',\n      control: {\n        type: 'select',\n      },\n      options: [\n        'tec',\n        'success',\n        'info',\n        'neutral',\n        'event',\n        'error',\n        'warning',\n        'black',\n      ],\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'tec' },\n        type: { summary: 'NotificationType' },\n      },\n      description: 'Set the noticication color schema.',\n    },\n    enableDontAskAgain: {\n      name: \"Enable don't ask again\",\n      control: null,\n      description:\n        'Enable the option to check the property \"Don don\\'t ask again\", once the user click on the checkbox the function is trigger.',\n      table: {\n        category: 'Events',\n        type: { summary: 'function' },\n      },\n    },\n    actions: {\n      name: 'Actions',\n      control: null,\n      description:\n        'List of actions and their events to display `[{ title, action, type?,  icon? }]`',\n      table: {\n        category: 'Events',\n        type: { summary: 'INotificationAction' },\n      },\n    },\n    isFullColor: {\n      name: 'Full color',\n      control: { type: 'boolean' },\n      description:\n        'Set the Notification virtualization type, Full color is a short notification type, a side effect of enable this option hide the next properties: ',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' },\n      },\n    },\n    delay: {\n      name: 'Delay',\n      control: { type: 'number' },\n      description: 'Delay',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: '5000' },\n        type: { summary: 'number' },\n      },\n    },\n    date: {\n      name: 'Date',\n      control: {\n        type: 'text',\n      },\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n      description: 'Set a leyend with a date or days to left.',\n    },\n    appName: {\n      name: 'App name',\n      control: {\n        type: 'text',\n      },\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'mitec.com' },\n        type: { summary: 'string' },\n      },\n      description: 'Set the App name at the top of the notification.',\n    },\n    appIcon: {\n      name: 'App icon',\n      control: {\n        type: 'text',\n      },\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'assets/images/tec-logo-mob.svg' },\n        type: { summary: 'string' },\n      },\n      description: 'Set the App name at the top of the notification.',\n    },\n    media: {\n      name: 'Media',\n      control: {\n        type: 'text',\n      },\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n      description: 'Set an image at the bottom of the notification.',\n    },\n    userName: {\n      name: 'User name',\n      control: {\n        type: 'text',\n      },\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n      description:\n        'Set the user name label, and in order to enable the user section this filed is required as `userAvatar`.',\n    },\n    userAvatar: {\n      name: 'User avatar',\n      control: {\n        type: 'text',\n      },\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n      description:\n        'Set the user avatar, and in order to enable the user section this filed is required as `userName`.',\n    },\n    userMail: {\n      name: 'User email',\n      control: {\n        type: 'text',\n      },\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n      description:\n        'Set the user email for the user section, and in order to enable the user section this filed is required as `userName and `userName`.',\n    },\n  },\n  args: {\n    title: 'Notification Title',\n    subtitle: 'Notification Subtitle',\n    content: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.',\n    icon: 'info',\n    type: 'tec',\n    isFullColor: false,\n    delay: 5000,\n    date: '1 day',\n    appName: 'mitec.com',\n    appIcon: 'assets/images/tec-logo-mob.svg',\n    media:\n      'https://preview.redd.it/zfohxnf8t3pa1.jpg?width=1024&format=pjpg&auto=webp&v=enabled&s=0f660e0a56476991ee3b97f2885d8c010fec5b97',\n    userName: 'Some Placeholder Name',\n    userAvatar:\n      'https://www.yugatech.com/wp-content/uploads/2020/09/Facebook-Avatar.jpg',\n    userMail: 'some.placeholder.name@domian.com',\n  },\n} as Meta<typeof BmbPushNotificationComponent>;\n\nfunction attributes(object: { [key: string]: any }): string {\n  return Object.entries(object)\n    .filter(([key]) => key !== 'text')\n    .map(([key, value]) => {\n      if (key === 'isFullColor' || key === 'delay') {\n        return `[${key}]=\"${value}\"`;\n      }\n      return `${key}=\"${value}\"`;\n    })\n    .join(' ');\n}\n\nexport const Default: StoryFn<typeof StorybookToastWrapperComponent> = (\n  args,\n) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button\n        bmbButton\n        appearance=\"primary\"\n        icon=\"home\"\n        (click)=\"openModalComponent()\"\n      >Add notification</button>\n      <bmb-push-notification />\n      `,\n  };\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "notificationSignal",
                        "type": "BmbNotificationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "notificationSignal",
                        "type": "BmbNotificationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "StorybookToastWrapperComponent-3"
        },
        {
            "name": "StorybookToastWrapperComponent",
            "id": "component-StorybookToastWrapperComponent-1cc71e64e6ef300154b1edf3e3020269836878d385b0794d0c519ee2b1cb2a73d35e5d71402d41d91527f9d4b2a17849c68ff790ecafb847ba6880f393c9fece-4",
            "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-toast-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<button\n  bmbButton\n  appearance=\"primary\"\n  icon=\"home\"\n  size=\"small\"\n  position=\"left\"\n  [case]=\"false\"\n  (click)=\"onButtonClick()\"\n>\n  Click Here\n</button>\n<bmb-toast\n  [message]=\"message\"\n  [appearance]=\"appearance\"\n  [duration]=\"duration\"\n  [position]=\"position\"\n></bmb-toast>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "\"top\" | \"bottom\" | \"middle\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "toastComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BmbToastComponent",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "BmbToastComponent"
                        }
                    ],
                    "modifierKind": [
                        170,
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onButtonClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "BmbToastComponent",
                    "type": "component"
                },
                {
                    "name": "BmbButtonDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild } from '@angular/core';\nimport { Meta, StoryFn, moduleMetadata } from '@storybook/angular';\nimport { BmbToastComponent } from './bmb-toast.component';\nimport { ToastService } from '../../services/toast.service';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbButtonDirective } from '../../directives/button.directive';\n\n@Component({\n  standalone: true,\n  imports: [BmbToastComponent, BmbButtonDirective],\n  selector: 'storybook-toast-wrapper',\n  template: `\n    <button\n      bmbButton\n      appearance=\"primary\"\n      icon=\"home\"\n      size=\"small\"\n      position=\"left\"\n      [case]=\"false\"\n      (click)=\"onButtonClick()\"\n    >\n      Click Here\n    </button>\n    <bmb-toast\n      [message]=\"message\"\n      [appearance]=\"appearance\"\n      [duration]=\"duration\"\n      [position]=\"position\"\n    ></bmb-toast>\n  `,\n})\nclass StorybookToastWrapperComponent {\n  @Input() appearance: string = '';\n  @Input() message: string = '';\n  @Input() duration?: number;\n  @Input() position?: 'top' | 'bottom' | 'middle';\n\n  @ViewChild(BmbToastComponent)\n  private toastComponent!: BmbToastComponent;\n  onButtonClick() {\n    this.toastComponent.openToast();\n  }\n}\n\nexport default {\n  title: 'Micro Componentes/Toast',\n  component: BmbToastComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        StorybookToastWrapperComponent,\n        BmbToastComponent,\n        BmbIconComponent,\n        BmbButtonDirective,\n      ],\n      providers: [ToastService],\n    }),\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport { BmbButtonDirective, BmbToastComponent } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [ BmbButtonDirective, BmbToastComponent ],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\nexport class Component {\n  title = 'my-app';\n\n  @ViewChild(BmbToastComponent)\n  private toastComponent!: BmbToastComponent;\n  onButtonClick() {\n    this.toastComponent.openToast();\n  }\n}\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    message: {\n      name: 'Message',\n      control: {\n        type: 'text',\n      },\n      description:\n        'Specifies the text displayed within the toast notification. This message should be concise and direct, providing the user with immediate feedback or information related to their actions.',\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n    },\n    appearance: {\n      name: 'Appearance',\n      control: 'select',\n      options: [\n        'neutral',\n        'primary',\n        'successful',\n        'warning',\n        'error',\n        'event',\n      ],\n      description:\n        'Defines the visual style of the toast, allowing it to match the context of the notification. Each option represents a different level of notification severity or type, such as informational (neutral), success (successful), warning (warning), error (error), or event (event).',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'neutral' },\n        type: { summary: 'string' },\n      },\n    },\n    duration: {\n      name: 'Duration',\n      control: {\n        type: 'number',\n      },\n      description:\n        'Determines how long the toast remains visible to the user, in milliseconds. A longer duration can be useful for more complex messages that require additional reading time, whereas shorter durations are suitable for succinct, immediate feedback',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: '5000' },\n        type: { summary: 'string' },\n      },\n    },\n    position: {\n      name: 'Position',\n      control: 'select',\n      options: ['top', 'bottom', 'middle'],\n      description:\n        \"Controls the position of the toast on the screen, helping to ensure the notification does not obstruct important interface elements. Options include top, bottom, and middle, allowing you to choose the most appropriate placement based on your application's layout and user experience requirements.\",\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'top' },\n        type: { summary: 'string' },\n      },\n    },\n  },\n  args: {\n    message: 'Your toast text here',\n    appearance: 'neutral',\n    duration: 5000,\n    position: 'top',\n  },\n} as Meta<typeof BmbToastComponent>;\n\nfunction attributes(object: { [key: string]: any }): string {\n  return Object.entries(object)\n    .filter(([key]) => key !== 'text')\n    .map(([key, value]) => {\n      if (key === 'duration') {\n        return `[${key}]=\"${value}\"`;\n      }\n      return `${key}=\"${value}\"`;\n    })\n    .join(' ');\n}\n\nexport const Default: StoryFn<typeof BmbToastComponent> = (args) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Click Here</button>\n      <bmb-toast ${attributes(args)}></bmb-toast></div>`,\n  };\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "StorybookToastWrapperComponent-4"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "calculateSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(pixels: string[]): string => {\n  return pixels.map((size) => `var(--bmb-radius-${size})`).join(' ');\n}"
            },
            {
                "name": "customizable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<button bmbButton ${attributes(args)}>${attributesText(\n    args,\n  )}</button>`,\n})"
            },
            {
                "name": "customizable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<div class=\"storybook-colors-playground\"><div style=\"background-color: ${colors(\n    args,\n  )};\"></div> <div style=\"background: ${gradients(args)};\"></div></div>`,\n})"
            },
            {
                "name": "customizable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<div ${attributes(args)}>Typography</div>`,\n})"
            },
            {
                "name": "customizable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/foundations/bmb-variables.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<div class=\"font-regular-5\" ${attributes(args)}>Typography</div>`,\n})"
            },
            {
                "name": "customizable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/directives/bmb-button-group/bmb-button-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<button bmbButtonGroup [appearance]=\"appearance\" [size]=\"size\">\n    <button>Button 1</button>\n    <button>Button 2</button>\n    <button>Button 3</button>\n  </button>`,\n})"
            },
            {
                "name": "dayName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(\n  date: DateTime,\n  lang: string,\n  format: StringUnitLength = 'short',\n): string => {\n  const defaultDayOrder = Info.weekdays(format, { locale: lang });\n  return defaultDayOrder[date.weekday - 1];\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "customizable()"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "customizable()"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "customizable()"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/foundations/bmb-variables.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "customizable()"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-advertisement-card/bmb-advertisement-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n        <bmb-advertisement-card [subtitle]=\"'Titulo'\" [data]=\"data\"></bmb-advertisement-card>\n    `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-balance-overview/bmb-balance-overview.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-chat-bar/bmb-chat-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-datepicker/bmb-datepicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-dropdown/bmb-dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-frequent-apps-selector/bmb-frequent-apps-selector.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-grade-value/bmb-grade-value.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-grades/bmb-grades.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-home-card/bmp-home-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-inner-header/bmb-inner-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <bmb-inner-header\n        [src]=\"src\"\n        [mobileSrc]=\"mobileSrc\"\n        [alt]=\"alt\"\n        [width]=\"width\"\n        [ratio]=\"ratio\"\n        [borderRadius]=\"borderRadius\"\n        [loading]=\"loading\"\n        [enableZoom]=\"enableZoom\"\n        [isBlurredBackdrop]=\"isBlurredBackdrop\"\n        [type]=\"type\"\n      >\n        <h2>Custom Component</h2>\n        <p>Custom component area has a max height 90px (transformed to rem) no scrollable.</p>\n        <p>Lorem ipsum odor amet, consectetuer adipiscing elit. Bibendum augue facilisi ac fusce porttitor. Lacus torquent nullam libero iaculis sociosqu parturient. Inceptos amet lectus turpis in curabitur. Ultricies vulputate massa vitae volutpat odio neque. Eros hendrerit dis facilisi praesent placerat diam dapibus primis. Aenean fringilla curabitur tincidunt eu phasellus ante. Class leo diam tristique ligula ullamcorper imperdiet sociosqu fermentum?</p>\n      </bmb-inner-header>\n    `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-input-phone-number/bmb-input-phone-number.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmp-login-onboarding.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<>",
                "defaultValue": "(\n  args,\n) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n        <bmb-login-onboarding (handleRequet)=\"handleRequet($event)\">\n          <p>custom content</p>\n        </bmb-login-onboarding>\n      `,\n  };\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-media-card/bmb-media-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <bmb-media-card\n        [src]=\"src\"\n        [mobileSrc]=\"mobileSrc\"\n        [alt]=\"alt\"\n        [width]=\"width\"\n        [ratio]=\"ratio\"\n        [borderRadius]=\"borderRadius\"\n        [loading]=\"loading\"\n        [enableZoom]=\"enableZoom\"\n        [isBlurredBackdrop]=\"isBlurredBackdrop\"\n        [type]=\"type\"\n        [title]=\"title\"\n        [subtitle]=\"subtitle\"\n        [content]=\"content\"\n        [date]=\"date\"\n        [userImage]=\"userImage\"\n        [userName]=\"userName\"\n      >\n        <p>Custom HTML content</p>\n      </bmb-media-card>\n    `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-modal/bmb-modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<>",
                "defaultValue": "(\n  args,\n) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Open Modal</button>\n      `,\n  };\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-notification-card/bmb-notification-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n        <bmb-notification-card [data]=\"data\"></bmb-notification-card>\n    `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-overlay/bmb-overlay.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<>",
                "defaultValue": "(\n  args,\n) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Open Modal</button>\n      `,\n  };\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-paginator/bmb-paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: ` \n        <bmb-paginator\n            [totalItems]=\"totalItems\"\n            [itemsPerPage]=\"itemsPerPage\"\n            [currentPage]=\"currentPage\"\n            (pageChange)=\"onPageChange($event)\">\n        </bmb-paginator>\n      `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <bmb-progress-bar\n        [appearance]=\"appearance\"\n        [type]=\"type\"\n        [counter]=\"counter\"\n        [totalCount]=\"totalCount\"\n        [title]=\"'title'\"\n        [textLink]=\"textLink\"\n        [href]=\"href\"\n      />\n    `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-pull-wedge/bmb-pull-wedge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-push-notification/bmb-push-notification.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<>",
                "defaultValue": "(\n  args,\n) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button\n        bmbButton\n        appearance=\"primary\"\n        icon=\"home\"\n        (click)=\"openModalComponent()\"\n      >Add notification</button>\n      <bmb-push-notification />\n      `,\n  };\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-skeleton/bmb-skeleton.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-step-progress-bar/bmb-step-progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n    <bmb-step-progress-bar\n      [activeStep]=\"1\"\n      [totalSteps]=\"4\"\n      [size]=\"'normal'\"\n      [freeze]=\"false\"\n      [type]=\"type\"\n      [labelSteps]=\"['¡Orden de compra aprobada!','¡Orden de compra aprobada!','¡Orden de compra aprobada!','¡Orden de compra aprobada!','¡Orden de compra aprobada!', ]\"\n      [labelComplete]=\"'Hecho'\"\n      [labelIncomplete]=\"'Pendiente'\"\n      ></bmb-step-progress-bar>\n    `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-student-activity-card/bmb-student-activity-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-student-activity-selector/bmb-student-activity-selector.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <bmb-student-activity-selector>\n        <bmb-student-activity-tab title=\"1\" subtitle=\"item 1\">\n          <bmb-card>Content 1</bmb-card>\n        </bmb-student-activity-tab>\n        <bmb-student-activity-tab title=\"2\" subtitle=\"item 2\">\n          <bmb-card>Content 2</bmb-card>\n        </bmb-student-activity-tab>\n        <bmb-student-activity-tab title=\"3\" subtitle=\"item 3\">\n          <bmb-card>Content 3</bmb-card>\n        </bmb-student-activity-tab>\n      </bmb-student-activity-selector>\n    `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"height: 1000px\">\n        <bmb-timestream\n          [startDate]=\"startDate\"\n          [endDate]=\"endDate\"\n          [dateFormat]=\"dateFormat\"\n          [lang]=\"lang\"\n          [events]=\"events\"\n        />\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<>",
                "defaultValue": "(args) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Click Here</button>\n      <bmb-toast ${attributes(args)}></bmb-toast></div>`,\n  };\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-wheel-menu/bmb-wheel-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/directives/bmb-button-group/bmb-button-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "customizable()"
            },
            {
                "name": "defaultBotList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-chat-bar/bot_list.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    name: 'TecGPT',\n    icon: '/assets/images/bot-icons/bot.png',\n  },\n  {\n    name: 'ChatGPT',\n    icon: '/assets/images/bot-icons/chat_gpt.svg',\n  },\n  {\n    name: 'Comment',\n    icon: '/assets/images/bot-icons/comment.svg',\n  },\n  {\n    name: 'New',\n    icon: '/assets/images/bot-icons/new.svg',\n  },\n  {\n    name: 'BotSchool',\n    icon: '/assets/images/bot-icons/bot_school.svg',\n  },\n  {\n    name: 'BotTech',\n    icon: '/assets/images/bot-icons/bot_tech.svg',\n  },\n  {\n    name: 'BotSport',\n    icon: '/assets/images/bot-icons/bot_sport.svg',\n  },\n  {\n    name: 'BotPhone',\n    icon: '/assets/images/bot-icons/bot_phone.svg',\n  },\n  {\n    name: 'BotMedic',\n    icon: '/assets/images/bot-icons/bot_medic.svg',\n  },\n  {\n    name: 'BotScience',\n    icon: '/assets/images/bot-icons/bot_science.svg',\n  },\n  {\n    name: 'Backup',\n    icon: '/assets/images/bot-icons/backup.svg',\n  },\n]"
            },
            {
                "name": "eventsInDate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "({\n  date,\n  events,\n}: IBmbCalendarRenderEvents): any[] => {\n  const todayEvents = events.filter((event: IBmbCalendarEvent) =>\n    date.hasSame(DateTime.fromISO(event.start), 'day'),\n  );\n\n  return todayEvents;\n}"
            },
            {
                "name": "FAB_SIZE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  small: 'small',\n  large: 'large',\n} as const"
            },
            {
                "name": "FAB_TYPE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  normal: 'normal',\n  extended: 'extended',\n} as const"
            },
            {
                "name": "getMonthDays",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(date: DateTime): DateTime[] => {\n  const currentWeek = DateTime.fromObject({\n    weekYear: date.year,\n    weekNumber: date.weekNumber,\n  });\n  const firstWeekDay = currentWeek.startOf('week');\n\n  const weekDays = [];\n\n  for (let day = -1; day <= 33; day++) {\n    weekDays.push(firstWeekDay.plus({ days: day }));\n  }\n\n  return weekDays;\n}"
            },
            {
                "name": "getTimeRange",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(event: IBmbCalendarEvent): string => {\n  const start = DateTime.fromISO(event.start);\n  const end = DateTime.fromISO(event.end);\n\n  return `${start.toFormat('hh:mm')} - ${end.toFormat('hh:mm')}`;\n}"
            },
            {
                "name": "getWeekDays",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(date: DateTime): DateTime[] => {\n  const currentWeek = DateTime.fromObject({\n    weekYear: date.year,\n    weekNumber: date.weekNumber,\n  });\n  const firstWeekDay = currentWeek.startOf('week');\n\n  let weekDays = [];\n\n  for (let day = -1; day <= 5; day++) {\n    weekDays.push(firstWeekDay.plus({ days: day }));\n  }\n\n  return weekDays;\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BmbCardComponent>",
                "defaultValue": "{\n  title: 'Micro Componentes/Card',\n  component: BmbCardComponent,\n  subcomponents: { BmbCardFooterComponent, BmbCardHeaderComponent },\n  decorators: [\n    moduleMetadata({\n      declarations: [],\n      imports: [\n        CommonModule,\n        BmbCardComponent,\n        BmbCardFooterComponent,\n        BmbCardHeaderComponent,\n      ],\n    }),\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport { BmbCardComponent, BmbCardFooterComponent, BmbCardHeaderComponent } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [ BmbCardComponent, BmbCardFooterComponent, BmbCardHeaderComponent ],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    borderRadius: {\n      name: 'Border radius',\n      control: {\n        type: 'select',\n      },\n      options: ['xs', 's', 'm', 'l', 'xl', 'none', 'auto'],\n      table: {\n        type: { summary: 'string' },\n        category: 'Properties',\n        defaultValue: { summary: 'm' },\n      },\n      description: 'Determines the corner radius size',\n    },\n    margin: {\n      name: 'Margin',\n      control: {\n        type: 'select',\n      },\n      options: ['xs', 's', 'm', 'l', 'xl', 'none', 'auto'],\n      table: {\n        type: { summary: 'string' },\n        category: 'Properties',\n        defaultValue: { summary: 'm' },\n      },\n      description: 'Set the margin size',\n    },\n    type: {\n      name: 'Type',\n      control: {\n        type: 'select',\n      },\n      options: [\n        'primary',\n        'secondary',\n        'succes',\n        'info',\n        'warning',\n        'error',\n        'normal',\n      ],\n      table: {\n        type: { summary: 'string' },\n        category: 'Properties',\n        defaultValue: { summary: 'normal' },\n      },\n      description: 'Set the color schema',\n    },\n  },\n  args: {\n    borderRadius: 'm',\n    margin: 'm',\n    type: 'normal',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BmbLayoutItemDirective>",
                "defaultValue": "{\n  title: 'Micro Componentes/Layout item',\n  component: BmbLayoutItemDirective,\n  subcomponents: { BmbLayoutDirective },\n  decorators: [\n    moduleMetadata({\n      declarations: [],\n      imports: [\n        CommonModule,\n        BmbLayoutDirective,\n        BmbLayoutItemDirective,\n        BmbCardComponent,\n        BmbCardContentComponent,\n      ],\n    }),\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport { BmbLayoutDirective, BmbLayoutItemDirective } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [ BmbLayoutDirective, BmbLayoutItemDirective ],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    colSm: {\n      name: 'Column size for mobile devices',\n      control: {\n        type: 'select',\n      },\n      options: ['0', '1', '2', '3', '4'],\n      table: {\n        type: { summary: 'number' },\n        category: 'Properties',\n        defaultValue: { summary: '0' },\n      },\n      description: 'Determines the size of the space between elements.',\n    },\n    colLg: {\n      name: 'Column size for full resolution devices',\n      control: {\n        type: 'select',\n      },\n      options: [\n        '0',\n        '1',\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n        '10',\n        '11',\n        '12',\n      ],\n      table: {\n        type: { summary: 'number' },\n        category: 'Properties',\n        defaultValue: { summary: '0' },\n      },\n      description: 'Determines the size of the space between elements.',\n    },\n    marginLeft: {\n      name: 'Margin left',\n      control: 'object',\n      table: {\n        type: { summary: 'IMargin' },\n        category: 'Properties',\n        defaultValue: { summary: 'optional' },\n      },\n      description:\n        'Sets the margin area on the left side of an column. The SM value support 3 as top and LG supports 11 as top',\n    },\n    marginRight: {\n      name: 'Margin right',\n      control: 'object',\n      table: {\n        type: { summary: 'IMargin' },\n        category: 'Properties',\n        defaultValue: { summary: 'optional' },\n      },\n      description:\n        'Sets the margin area on the right side of an column. The SM value support 3 as top and LG supports 11 as top',\n    },\n    isDinamycItem: {\n      name: 'Is dinamyc item',\n      control: { type: 'boolean' },\n      description:\n        'Enable dinamyc size for the column, if you enable this property the colLg and colSm will be disabled',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' },\n      },\n    },\n    colGrow: {\n      name: 'Col grow',\n      control: 'number',\n      description:\n        'Sets how much of the flex container positive free space, if any, should be assigned to the flex item main size. (this property will only be enabled when the isDinamycItem property is enabled)',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 0 },\n        type: { summary: 'number' },\n      },\n    },\n  },\n  args: {\n    colSm: 0,\n    colLg: 0,\n    marginLeft: { sm: 0, lg: 0 },\n    marginRight: { sm: 0, lg: 0 },\n    isDinamycItem: false,\n    colGrow: 0,\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BmbLayoutDirective>",
                "defaultValue": "{\n  title: 'Micro Componentes/Layout',\n  component: BmbLayoutDirective,\n  subcomponents: { BmbLayoutItemDirective },\n  decorators: [\n    moduleMetadata({\n      declarations: [],\n      imports: [\n        CommonModule,\n        BmbLayoutDirective,\n        BmbLayoutItemDirective,\n        BmbCardComponent,\n        BmbCardContentComponent,\n      ],\n    }),\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport { BmbLayoutDirective, BmbLayoutItemDirective } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [ BmbLayoutDirective, BmbLayoutItemDirective ],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    gapSise: {\n      name: 'Gap size',\n      control: {\n        type: 'select',\n      },\n      options: ['xs', 's', 'm', 'l', 'xl', 'none', 'auto'],\n      table: {\n        type: { summary: 'string' },\n        category: 'Properties',\n        defaultValue: { summary: 'm' },\n      },\n      description: 'Determines the size of the space between elements.',\n    },\n    margin: {\n      name: 'Margin',\n      control: {\n        type: 'select',\n      },\n      options: ['xs', 's', 'm', 'l', 'xl', 'none', 'auto'],\n      table: {\n        type: { summary: 'string' },\n        category: 'Properties',\n        defaultValue: { summary: 'm' },\n      },\n      description: 'Set the margin size',\n    },\n    dinamycCols: {\n      name: 'Enable dinamyc cols',\n      control: { type: 'boolean' },\n      description: 'This property enable the dinamic size for bmbLayoutItem',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' },\n      },\n    },\n    justify: {\n      name: 'Justify content',\n      control: {\n        type: 'select',\n      },\n      options: [\n        'center',\n        'end',\n        'start',\n        'stretch',\n        'spaceAround',\n        'spaceBetween',\n        'spaceEvenly',\n      ],\n      table: {\n        type: { summary: 'string' },\n        category: 'Properties',\n        defaultValue: { summary: 'start' },\n      },\n      description: 'Set the justify content.',\n    },\n    alignItems: {\n      name: 'Align items',\n      control: {\n        type: 'select',\n      },\n      options: ['center', 'end', 'start', 'stretch'],\n      table: {\n        type: { summary: 'string' },\n        category: 'Properties',\n        defaultValue: { summary: 'start' },\n      },\n      description: 'Set the align items.',\n    },\n  },\n  args: {\n    gapSise: 'm',\n    margin: 'm',\n    dinamycCols: false,\n    justify: 'start',\n    alignItems: 'start',\n  },\n}"
            },
            {
                "name": "OneItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <bmb-card [borderRadius]=\"borderRadius\" [margin]=\"margin\" [type]=\"type\">\n        <bmb-card-header padding=\"s\">\n          <h3>Header</h3>\n        </bmb-card-header>\n        <bmb-card-content padding=\"none\">\n          <figure [ngStyle]=\"{margin: 0}\">\n            <img\n              width=\"100%\"\n              alt=\"gatito\"\n              src=\"https://img.freepik.com/fotos-premium/dia-internacional-gato-8-agosto-gatos-lindos-gatito-pequeno-hermosos-pequenos-animales-compania-verdadero-amigo-bonitos-divertidos-tiernos-esponjosos-juguetones-shorties-ia-generativa_887181-4265.jpg?w=2000\"\n            />\n          </figure>\n          <p [ngStyle]=\"{padding: '1rem'}\">Los gatos son criaturas llenas de misterio. Su elegancia al moverse, sus ojos penetrantes y su habilidad para desaparecer en las sombras han inspirado leyendas y supersticiones. Pero más allá de su aura enigmática, los gatos también son compañeros leales y cariñosos.</p>\n        </bmb-card-content>\n        <bmb-card-footer padding=\"xl\">\n          <h3>Footer</h3>\n        </bmb-card-footer>\n      </bmb-card>\n    `,\n  }),\n}"
            },
            {
                "name": "OneItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <section bmbLayout>\n        <bmb-card\n          bmbLayoutItem\n          [colSm]=\"colSm\"\n          [colLg]=\"colLg\"\n          [marginLeft]=\"marginLeft\"\n          [marginRight]=\"marginRight\"\n          [isDinamycItem]=\"isDinamycItem\"\n          [colGrow]=\"colGrow\"\n        >\n          <bmb-card-content padding=\"none\">\n            <p [ngStyle]=\"{padding: '1rem'}\">Element</p>\n          </bmb-card-content>\n        </bmb-card>\n      </section>\n    `,\n  }),\n}"
            },
            {
                "name": "OneItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <section bmbLayout [gapSise]=\"gapSise\" [margin]=\"margin\" [justify]=\"justify\" [alignItems]=\"alignItems\">\n        <bmb-card bmbLayoutItem margin=\"none\" [colLg]=\"4\">\n          <bmb-card-content padding=\"none\">\n            <p [ngStyle]=\"{padding: '1rem'}\">Element</p>\n          </bmb-card-content>\n        </bmb-card>\n        <bmb-card bmbLayoutItem margin=\"none\" [colLg]=\"4\">\n          <bmb-card-content padding=\"none\">\n            <p [ngStyle]=\"{padding: '1rem'}\">Element</p>\n          </bmb-card-content>\n        </bmb-card>\n        <bmb-card bmbLayoutItem margin=\"none\" [colGrow]=\"12\">\n          <bmb-card-content padding=\"none\">\n            <p [ngStyle]=\"{padding: '1rem'}\">Element</p>\n            <p [ngStyle]=\"{padding: '1rem'}\">Element</p>\n            <p [ngStyle]=\"{padding: '1rem'}\">Element</p>\n          </bmb-card-content>\n        </bmb-card>\n      </section>\n    `,\n  }),\n}"
            },
            {
                "name": "orderDayNames",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(\n  days: (string | undefined)[],\n): (string | undefined)[] => {\n  const lastElement: string | undefined = days.pop();\n  days.unshift(lastElement);\n  return days;\n}"
            },
            {
                "name": "pixelToRem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(size: number) =>\n  `${fixDecimals({ value: size / 16 })}rem`"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      expanded: true,\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n    docs: {\n      source: { language: 'html' },\n      canvas: {\n        sourceState: 'shown',\n      },\n    },\n    options: {\n      storySort: {\n        method: 'alphabetical',\n        order: ['Foundations', 'Micro Componentes', 'Macro Componentes'],\n        locales: 'en-US',\n      },\n    },\n  },\n  decorators: [\n    withThemeByClassName({\n      themes: {\n        light: 'storybook-light-theme',\n        dark: 'storybook-dark-theme',\n      },\n      defaultTheme: 'light',\n    }),\n  ],\n}"
            },
            {
                "name": "weeksAndDays",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(date: DateTime): DateTime[] => {\n  const calculateFirstDay = getWeekDays(date);\n\n  let weekDays = [];\n\n  for (let day = 0; day <= 41; day++) {\n    weekDays.push(calculateFirstDay[0].plus({ days: day }));\n  }\n\n  return weekDays;\n}"
            }
        ],
        "functions": [
            {
                "name": "attributes",
                "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "object",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "object",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "attributes",
                "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "object",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "object",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "attributes",
                "file": "projects/ds-ng/src/lib/foundations/bmb-variables.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "args",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "attributes",
                "file": "projects/ds-ng/src/lib/components/bmb-modal/bmb-modal.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "object",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "object",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "attributes",
                "file": "projects/ds-ng/src/lib/components/bmb-push-notification/bmb-push-notification.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "object",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "object",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "attributes",
                "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "object",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "object",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "attributesText",
                "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "object",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "object",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "colors",
                "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "object",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "object",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "fixDecimals",
                "file": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "IFixDecimals",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "0d65265b-de47-40d6-b48b-938cf890a3a8",
                        "destructuredParameter": true
                    },
                    {
                        "name": "dp",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "2",
                        "destrucuredGroupId": "0d65265b-de47-40d6-b48b-938cf890a3a8",
                        "destructuredParameter": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "IFixDecimals",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "0d65265b-de47-40d6-b48b-938cf890a3a8",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dp",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "2",
                        "destrucuredGroupId": "0d65265b-de47-40d6-b48b-938cf890a3a8",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "gradients",
                "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "object",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "object",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "FabSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 199
            },
            {
                "name": "FabType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 199
            },
            {
                "name": "IAlignItemsOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"center\" | \"end\" | \"start\" | \"stretch\"",
                "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBbmInputType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"text\" | \"password\"",
                "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBmbActivityTags",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"info\" | \"life\" | \"event\"",
                "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBmbAdvertisementCard",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/ds-ng/src/lib/components/bmb-advertisement-card/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "IBmbAdvertisementContent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/ds-ng/src/lib/components/bmb-advertisement-card/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "IBmbAdvertisementData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/ds-ng/src/lib/components/bmb-advertisement-card/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "IBmbAdvertisementImage",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/ds-ng/src/lib/components/bmb-advertisement-card/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "IBmbAppearanceType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary-container\" | \"primary-home\" | \"primary-header\" | \"secondary-container\" | \"contrast-box-container\" | \"button-container\"",
                "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBmbCalendarEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "IBmbCalendarHourFormat",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"12\" | \"24\"",
                "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBmbCalendarView",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"week\" | \"month\" | \"day\"",
                "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBmbCardType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"succes\" | \"info\" | \"warning\" | \"error\" | \"normal\"",
                "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBmbClassDetail",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/ds-ng/src/lib/components/bmb-grades/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "IBmbElementDetail",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/ds-ng/src/lib/components/bmb-grades/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "IBmbEventType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"academic\" | \"life\" | \"events\"",
                "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBmbGrades",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/ds-ng/src/lib/components/bmb-grades/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "IBmbHorizontalPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\"",
                "file": "projects/ds-ng/src/lib/types/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBmbInteractiveIconAppearance",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"red\" | \"blue\" | \"green\" | \"yellow\" | \"purple\"",
                "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBmbInteractiveIconType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"regular\" | \"button\" | \"app_drawer\"",
                "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBmbLegendVariations",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"normal\" | \"strong\" | \"success\" | \"info\" | \"warning\" | \"error\" | \"brand\"",
                "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBmbMediaCardLoading",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"lazy\" | \"eager\"",
                "file": "projects/ds-ng/src/lib/components/bmb-media-card/bmb-media-card.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBmbMediaCardType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"inline\" | \"floating\" | \"author_detail\"",
                "file": "projects/ds-ng/src/lib/components/bmb-media-card/bmb-media-card.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBmbNotificationCard",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/ds-ng/src/lib/components/bmb-notification-card/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "IBmbNotificationCardData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/ds-ng/src/lib/components/bmb-notification-card/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "IBmbPartial",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/ds-ng/src/lib/components/bmb-grades/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "IBmbPeriod",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/ds-ng/src/lib/components/bmb-grades/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "IBmbProgressBarVariations",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"info\" | \"warning\" | \"error\"",
                "file": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IBmbTarget",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
                "file": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IButtonAppearance",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary-filled\" | \"secondary-outlined\" | \"destructive\"",
                "file": "projects/ds-ng/src/lib/types/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IJustifyOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"center\" | \"end\" | \"start\" | \"stretch\" | \"spaceAround\" | \"spaceBetween\" | \"spaceEvenly\"",
                "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "IPositionButtonMenu",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\"",
                "file": "projects/ds-ng/src/lib/components/bmb-top-bar/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "NotificationPositionX",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\"",
                "file": "projects/ds-ng/src/lib/services/notification.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "NotificationPositionY",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"top\" | \"bottom\"",
                "file": "projects/ds-ng/src/lib/services/notification.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "NotificationType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"tec\" | \"success\" | \"info\" | \"neutral\" | \"event\" | \"error\" | \"warning\" | \"black\"",
                "file": "projects/ds-ng/src/lib/components/bmb-push-notification/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "SizeNames",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\" | \"none\" | \"auto\"",
                "file": "projects/ds-ng/src/lib/types/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbAdvertisementCardComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-advertisement-card/bmb-advertisement-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbBadgeComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbBalanceOverviewComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-balance-overview/bmb-balance-overview.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbCalendarComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbCardComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbChatBarComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-chat-bar/bmb-chat-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbCheckboxComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbChevronTitleSelectorComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbContainerComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbContainerButtonComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbDatepickerComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-datepicker/bmb-datepicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbDividerComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbDotPaginatorComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbDropdownComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-dropdown/bmb-dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbFabComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbFocusElementComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbFrequentAppsSelectorComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-frequent-apps-selector/bmb-frequent-apps-selector.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbGradeValueComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-grade-value/bmb-grade-value.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbGradesComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-grades/bmb-grades.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbHeaderMobileComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbHomeCardComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-home-card/bmp-home-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbHomeSectionComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbIconComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbInnerHeaderComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-inner-header/bmb-inner-header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbInputComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbInputPhoneNumberComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-input-phone-number/bmb-input-phone-number.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbInteractiveIconComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbLegendComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbLoaderComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbLogoComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbMediaCardComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-media-card/bmb-media-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbNotificationCardComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-notification-card/bmb-notification-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbPaginatorComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-paginator/bmb-paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbProgressBarComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbProgressCircleComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbPullWedgeComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-pull-wedge/bmb-pull-wedge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbRadialComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbSearchInputComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbSidebarComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbSkeletonComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-skeleton/bmb-skeleton.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbStatCounterComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbStepProgressBarComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-step-progress-bar/bmb-step-progress-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbStudentActivityCardComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-student-activity-card/bmb-student-activity-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbStudentActivitySelectorComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-student-activity-selector/bmb-student-activity-selector.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbSwitchComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbTablesComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbTabsComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbTagComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbThemeComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbTimestreamComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbTopBarComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbTotpComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbUserImageComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbUserSummaryComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbValueCounterComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbWheelMenuComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-wheel-menu/bmb-wheel-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbLayoutItemDirective>",
                "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbLayoutDirective>",
                "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts": [
                {
                    "name": "calculateSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(pixels: string[]): string => {\n  return pixels.map((size) => `var(--bmb-radius-${size})`).join(' ');\n}"
                }
            ],
            "projects/ds-ng/src/lib/directives/button.stories.ts": [
                {
                    "name": "customizable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<button bmbButton ${attributes(args)}>${attributesText(\n    args,\n  )}</button>`,\n})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "customizable()"
                }
            ],
            "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts": [
                {
                    "name": "customizable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<div class=\"storybook-colors-playground\"><div style=\"background-color: ${colors(\n    args,\n  )};\"></div> <div style=\"background: ${gradients(args)};\"></div></div>`,\n})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "customizable()"
                }
            ],
            "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts": [
                {
                    "name": "customizable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<div ${attributes(args)}>Typography</div>`,\n})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "customizable()"
                }
            ],
            "projects/ds-ng/src/lib/foundations/bmb-variables.stories.ts": [
                {
                    "name": "customizable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/foundations/bmb-variables.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<div class=\"font-regular-5\" ${attributes(args)}>Typography</div>`,\n})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/foundations/bmb-variables.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "customizable()"
                }
            ],
            "projects/ds-ng/src/lib/directives/bmb-button-group/bmb-button-group.stories.ts": [
                {
                    "name": "customizable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/directives/bmb-button-group/bmb-button-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<button bmbButtonGroup [appearance]=\"appearance\" [size]=\"size\">\n    <button>Button 1</button>\n    <button>Button 2</button>\n    <button>Button 3</button>\n  </button>`,\n})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/directives/bmb-button-group/bmb-button-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "customizable()"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts": [
                {
                    "name": "dayName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(\n  date: DateTime,\n  lang: string,\n  format: StringUnitLength = 'short',\n): string => {\n  const defaultDayOrder = Info.weekdays(format, { locale: lang });\n  return defaultDayOrder[date.weekday - 1];\n}"
                },
                {
                    "name": "eventsInDate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "({\n  date,\n  events,\n}: IBmbCalendarRenderEvents): any[] => {\n  const todayEvents = events.filter((event: IBmbCalendarEvent) =>\n    date.hasSame(DateTime.fromISO(event.start), 'day'),\n  );\n\n  return todayEvents;\n}"
                },
                {
                    "name": "getMonthDays",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(date: DateTime): DateTime[] => {\n  const currentWeek = DateTime.fromObject({\n    weekYear: date.year,\n    weekNumber: date.weekNumber,\n  });\n  const firstWeekDay = currentWeek.startOf('week');\n\n  const weekDays = [];\n\n  for (let day = -1; day <= 33; day++) {\n    weekDays.push(firstWeekDay.plus({ days: day }));\n  }\n\n  return weekDays;\n}"
                },
                {
                    "name": "getTimeRange",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(event: IBmbCalendarEvent): string => {\n  const start = DateTime.fromISO(event.start);\n  const end = DateTime.fromISO(event.end);\n\n  return `${start.toFormat('hh:mm')} - ${end.toFormat('hh:mm')}`;\n}"
                },
                {
                    "name": "getWeekDays",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(date: DateTime): DateTime[] => {\n  const currentWeek = DateTime.fromObject({\n    weekYear: date.year,\n    weekNumber: date.weekNumber,\n  });\n  const firstWeekDay = currentWeek.startOf('week');\n\n  let weekDays = [];\n\n  for (let day = -1; day <= 5; day++) {\n    weekDays.push(firstWeekDay.plus({ days: day }));\n  }\n\n  return weekDays;\n}"
                },
                {
                    "name": "orderDayNames",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(\n  days: (string | undefined)[],\n): (string | undefined)[] => {\n  const lastElement: string | undefined = days.pop();\n  days.unshift(lastElement);\n  return days;\n}"
                },
                {
                    "name": "weeksAndDays",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(date: DateTime): DateTime[] => {\n  const calculateFirstDay = getWeekDays(date);\n\n  let weekDays = [];\n\n  for (let day = 0; day <= 41; day++) {\n    weekDays.push(calculateFirstDay[0].plus({ days: day }));\n  }\n\n  return weekDays;\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-advertisement-card/bmb-advertisement-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-advertisement-card/bmb-advertisement-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n        <bmb-advertisement-card [subtitle]=\"'Titulo'\" [data]=\"data\"></bmb-advertisement-card>\n    `,\n  }),\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-balance-overview/bmb-balance-overview.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-balance-overview/bmb-balance-overview.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-chat-bar/bmb-chat-bar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-chat-bar/bmb-chat-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-datepicker/bmb-datepicker.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-datepicker/bmb-datepicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-dropdown/bmb-dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-dropdown/bmb-dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-frequent-apps-selector/bmb-frequent-apps-selector.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-frequent-apps-selector/bmb-frequent-apps-selector.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-grade-value/bmb-grade-value.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-grade-value/bmb-grade-value.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-grades/bmb-grades.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-grades/bmb-grades.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-home-card/bmp-home-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-home-card/bmp-home-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-inner-header/bmb-inner-header.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-inner-header/bmb-inner-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <bmb-inner-header\n        [src]=\"src\"\n        [mobileSrc]=\"mobileSrc\"\n        [alt]=\"alt\"\n        [width]=\"width\"\n        [ratio]=\"ratio\"\n        [borderRadius]=\"borderRadius\"\n        [loading]=\"loading\"\n        [enableZoom]=\"enableZoom\"\n        [isBlurredBackdrop]=\"isBlurredBackdrop\"\n        [type]=\"type\"\n      >\n        <h2>Custom Component</h2>\n        <p>Custom component area has a max height 90px (transformed to rem) no scrollable.</p>\n        <p>Lorem ipsum odor amet, consectetuer adipiscing elit. Bibendum augue facilisi ac fusce porttitor. Lacus torquent nullam libero iaculis sociosqu parturient. Inceptos amet lectus turpis in curabitur. Ultricies vulputate massa vitae volutpat odio neque. Eros hendrerit dis facilisi praesent placerat diam dapibus primis. Aenean fringilla curabitur tincidunt eu phasellus ante. Class leo diam tristique ligula ullamcorper imperdiet sociosqu fermentum?</p>\n      </bmb-inner-header>\n    `,\n  }),\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-input-phone-number/bmb-input-phone-number.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-input-phone-number/bmb-input-phone-number.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmp-login-onboarding.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmp-login-onboarding.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<>",
                    "defaultValue": "(\n  args,\n) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n        <bmb-login-onboarding (handleRequet)=\"handleRequet($event)\">\n          <p>custom content</p>\n        </bmb-login-onboarding>\n      `,\n  };\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-media-card/bmb-media-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-media-card/bmb-media-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <bmb-media-card\n        [src]=\"src\"\n        [mobileSrc]=\"mobileSrc\"\n        [alt]=\"alt\"\n        [width]=\"width\"\n        [ratio]=\"ratio\"\n        [borderRadius]=\"borderRadius\"\n        [loading]=\"loading\"\n        [enableZoom]=\"enableZoom\"\n        [isBlurredBackdrop]=\"isBlurredBackdrop\"\n        [type]=\"type\"\n        [title]=\"title\"\n        [subtitle]=\"subtitle\"\n        [content]=\"content\"\n        [date]=\"date\"\n        [userImage]=\"userImage\"\n        [userName]=\"userName\"\n      >\n        <p>Custom HTML content</p>\n      </bmb-media-card>\n    `,\n  }),\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-modal/bmb-modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-modal/bmb-modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<>",
                    "defaultValue": "(\n  args,\n) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Open Modal</button>\n      `,\n  };\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-notification-card/bmb-notification-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-notification-card/bmb-notification-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n        <bmb-notification-card [data]=\"data\"></bmb-notification-card>\n    `,\n  }),\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-overlay/bmb-overlay.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-overlay/bmb-overlay.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<>",
                    "defaultValue": "(\n  args,\n) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Open Modal</button>\n      `,\n  };\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-paginator/bmb-paginator.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-paginator/bmb-paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: ` \n        <bmb-paginator\n            [totalItems]=\"totalItems\"\n            [itemsPerPage]=\"itemsPerPage\"\n            [currentPage]=\"currentPage\"\n            (pageChange)=\"onPageChange($event)\">\n        </bmb-paginator>\n      `,\n  }),\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <bmb-progress-bar\n        [appearance]=\"appearance\"\n        [type]=\"type\"\n        [counter]=\"counter\"\n        [totalCount]=\"totalCount\"\n        [title]=\"'title'\"\n        [textLink]=\"textLink\"\n        [href]=\"href\"\n      />\n    `,\n  }),\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-pull-wedge/bmb-pull-wedge.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-pull-wedge/bmb-pull-wedge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-push-notification/bmb-push-notification.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-push-notification/bmb-push-notification.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<>",
                    "defaultValue": "(\n  args,\n) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button\n        bmbButton\n        appearance=\"primary\"\n        icon=\"home\"\n        (click)=\"openModalComponent()\"\n      >Add notification</button>\n      <bmb-push-notification />\n      `,\n  };\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-skeleton/bmb-skeleton.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-skeleton/bmb-skeleton.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-step-progress-bar/bmb-step-progress-bar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-step-progress-bar/bmb-step-progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n    <bmb-step-progress-bar\n      [activeStep]=\"1\"\n      [totalSteps]=\"4\"\n      [size]=\"'normal'\"\n      [freeze]=\"false\"\n      [type]=\"type\"\n      [labelSteps]=\"['¡Orden de compra aprobada!','¡Orden de compra aprobada!','¡Orden de compra aprobada!','¡Orden de compra aprobada!','¡Orden de compra aprobada!', ]\"\n      [labelComplete]=\"'Hecho'\"\n      [labelIncomplete]=\"'Pendiente'\"\n      ></bmb-step-progress-bar>\n    `,\n  }),\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-student-activity-card/bmb-student-activity-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-student-activity-card/bmb-student-activity-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-student-activity-selector/bmb-student-activity-selector.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-student-activity-selector/bmb-student-activity-selector.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <bmb-student-activity-selector>\n        <bmb-student-activity-tab title=\"1\" subtitle=\"item 1\">\n          <bmb-card>Content 1</bmb-card>\n        </bmb-student-activity-tab>\n        <bmb-student-activity-tab title=\"2\" subtitle=\"item 2\">\n          <bmb-card>Content 2</bmb-card>\n        </bmb-student-activity-tab>\n        <bmb-student-activity-tab title=\"3\" subtitle=\"item 3\">\n          <bmb-card>Content 3</bmb-card>\n        </bmb-student-activity-tab>\n      </bmb-student-activity-selector>\n    `,\n  }),\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"height: 1000px\">\n        <bmb-timestream\n          [startDate]=\"startDate\"\n          [endDate]=\"endDate\"\n          [dateFormat]=\"dateFormat\"\n          [lang]=\"lang\"\n          [events]=\"events\"\n        />\n      </div>\n    `,\n  }),\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<>",
                    "defaultValue": "(args) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Click Here</button>\n      <bmb-toast ${attributes(args)}></bmb-toast></div>`,\n  };\n}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-wheel-menu/bmb-wheel-menu.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-wheel-menu/bmb-wheel-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-chat-bar/bot_list.ts": [
                {
                    "name": "defaultBotList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-chat-bar/bot_list.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    name: 'TecGPT',\n    icon: '/assets/images/bot-icons/bot.png',\n  },\n  {\n    name: 'ChatGPT',\n    icon: '/assets/images/bot-icons/chat_gpt.svg',\n  },\n  {\n    name: 'Comment',\n    icon: '/assets/images/bot-icons/comment.svg',\n  },\n  {\n    name: 'New',\n    icon: '/assets/images/bot-icons/new.svg',\n  },\n  {\n    name: 'BotSchool',\n    icon: '/assets/images/bot-icons/bot_school.svg',\n  },\n  {\n    name: 'BotTech',\n    icon: '/assets/images/bot-icons/bot_tech.svg',\n  },\n  {\n    name: 'BotSport',\n    icon: '/assets/images/bot-icons/bot_sport.svg',\n  },\n  {\n    name: 'BotPhone',\n    icon: '/assets/images/bot-icons/bot_phone.svg',\n  },\n  {\n    name: 'BotMedic',\n    icon: '/assets/images/bot-icons/bot_medic.svg',\n  },\n  {\n    name: 'BotScience',\n    icon: '/assets/images/bot-icons/bot_science.svg',\n  },\n  {\n    name: 'Backup',\n    icon: '/assets/images/bot-icons/backup.svg',\n  },\n]"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts": [
                {
                    "name": "FAB_SIZE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  small: 'small',\n  large: 'large',\n} as const"
                },
                {
                    "name": "FAB_TYPE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  normal: 'normal',\n  extended: 'extended',\n} as const"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-card/bmb-card.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BmbCardComponent>",
                    "defaultValue": "{\n  title: 'Micro Componentes/Card',\n  component: BmbCardComponent,\n  subcomponents: { BmbCardFooterComponent, BmbCardHeaderComponent },\n  decorators: [\n    moduleMetadata({\n      declarations: [],\n      imports: [\n        CommonModule,\n        BmbCardComponent,\n        BmbCardFooterComponent,\n        BmbCardHeaderComponent,\n      ],\n    }),\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport { BmbCardComponent, BmbCardFooterComponent, BmbCardHeaderComponent } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [ BmbCardComponent, BmbCardFooterComponent, BmbCardHeaderComponent ],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    borderRadius: {\n      name: 'Border radius',\n      control: {\n        type: 'select',\n      },\n      options: ['xs', 's', 'm', 'l', 'xl', 'none', 'auto'],\n      table: {\n        type: { summary: 'string' },\n        category: 'Properties',\n        defaultValue: { summary: 'm' },\n      },\n      description: 'Determines the corner radius size',\n    },\n    margin: {\n      name: 'Margin',\n      control: {\n        type: 'select',\n      },\n      options: ['xs', 's', 'm', 'l', 'xl', 'none', 'auto'],\n      table: {\n        type: { summary: 'string' },\n        category: 'Properties',\n        defaultValue: { summary: 'm' },\n      },\n      description: 'Set the margin size',\n    },\n    type: {\n      name: 'Type',\n      control: {\n        type: 'select',\n      },\n      options: [\n        'primary',\n        'secondary',\n        'succes',\n        'info',\n        'warning',\n        'error',\n        'normal',\n      ],\n      table: {\n        type: { summary: 'string' },\n        category: 'Properties',\n        defaultValue: { summary: 'normal' },\n      },\n      description: 'Set the color schema',\n    },\n  },\n  args: {\n    borderRadius: 'm',\n    margin: 'm',\n    type: 'normal',\n  },\n}"
                },
                {
                    "name": "OneItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <bmb-card [borderRadius]=\"borderRadius\" [margin]=\"margin\" [type]=\"type\">\n        <bmb-card-header padding=\"s\">\n          <h3>Header</h3>\n        </bmb-card-header>\n        <bmb-card-content padding=\"none\">\n          <figure [ngStyle]=\"{margin: 0}\">\n            <img\n              width=\"100%\"\n              alt=\"gatito\"\n              src=\"https://img.freepik.com/fotos-premium/dia-internacional-gato-8-agosto-gatos-lindos-gatito-pequeno-hermosos-pequenos-animales-compania-verdadero-amigo-bonitos-divertidos-tiernos-esponjosos-juguetones-shorties-ia-generativa_887181-4265.jpg?w=2000\"\n            />\n          </figure>\n          <p [ngStyle]=\"{padding: '1rem'}\">Los gatos son criaturas llenas de misterio. Su elegancia al moverse, sus ojos penetrantes y su habilidad para desaparecer en las sombras han inspirado leyendas y supersticiones. Pero más allá de su aura enigmática, los gatos también son compañeros leales y cariñosos.</p>\n        </bmb-card-content>\n        <bmb-card-footer padding=\"xl\">\n          <h3>Footer</h3>\n        </bmb-card-footer>\n      </bmb-card>\n    `,\n  }),\n}"
                }
            ],
            "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BmbLayoutItemDirective>",
                    "defaultValue": "{\n  title: 'Micro Componentes/Layout item',\n  component: BmbLayoutItemDirective,\n  subcomponents: { BmbLayoutDirective },\n  decorators: [\n    moduleMetadata({\n      declarations: [],\n      imports: [\n        CommonModule,\n        BmbLayoutDirective,\n        BmbLayoutItemDirective,\n        BmbCardComponent,\n        BmbCardContentComponent,\n      ],\n    }),\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport { BmbLayoutDirective, BmbLayoutItemDirective } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [ BmbLayoutDirective, BmbLayoutItemDirective ],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    colSm: {\n      name: 'Column size for mobile devices',\n      control: {\n        type: 'select',\n      },\n      options: ['0', '1', '2', '3', '4'],\n      table: {\n        type: { summary: 'number' },\n        category: 'Properties',\n        defaultValue: { summary: '0' },\n      },\n      description: 'Determines the size of the space between elements.',\n    },\n    colLg: {\n      name: 'Column size for full resolution devices',\n      control: {\n        type: 'select',\n      },\n      options: [\n        '0',\n        '1',\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n        '10',\n        '11',\n        '12',\n      ],\n      table: {\n        type: { summary: 'number' },\n        category: 'Properties',\n        defaultValue: { summary: '0' },\n      },\n      description: 'Determines the size of the space between elements.',\n    },\n    marginLeft: {\n      name: 'Margin left',\n      control: 'object',\n      table: {\n        type: { summary: 'IMargin' },\n        category: 'Properties',\n        defaultValue: { summary: 'optional' },\n      },\n      description:\n        'Sets the margin area on the left side of an column. The SM value support 3 as top and LG supports 11 as top',\n    },\n    marginRight: {\n      name: 'Margin right',\n      control: 'object',\n      table: {\n        type: { summary: 'IMargin' },\n        category: 'Properties',\n        defaultValue: { summary: 'optional' },\n      },\n      description:\n        'Sets the margin area on the right side of an column. The SM value support 3 as top and LG supports 11 as top',\n    },\n    isDinamycItem: {\n      name: 'Is dinamyc item',\n      control: { type: 'boolean' },\n      description:\n        'Enable dinamyc size for the column, if you enable this property the colLg and colSm will be disabled',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' },\n      },\n    },\n    colGrow: {\n      name: 'Col grow',\n      control: 'number',\n      description:\n        'Sets how much of the flex container positive free space, if any, should be assigned to the flex item main size. (this property will only be enabled when the isDinamycItem property is enabled)',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 0 },\n        type: { summary: 'number' },\n      },\n    },\n  },\n  args: {\n    colSm: 0,\n    colLg: 0,\n    marginLeft: { sm: 0, lg: 0 },\n    marginRight: { sm: 0, lg: 0 },\n    isDinamycItem: false,\n    colGrow: 0,\n  },\n}"
                },
                {
                    "name": "OneItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <section bmbLayout>\n        <bmb-card\n          bmbLayoutItem\n          [colSm]=\"colSm\"\n          [colLg]=\"colLg\"\n          [marginLeft]=\"marginLeft\"\n          [marginRight]=\"marginRight\"\n          [isDinamycItem]=\"isDinamycItem\"\n          [colGrow]=\"colGrow\"\n        >\n          <bmb-card-content padding=\"none\">\n            <p [ngStyle]=\"{padding: '1rem'}\">Element</p>\n          </bmb-card-content>\n        </bmb-card>\n      </section>\n    `,\n  }),\n}"
                }
            ],
            "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BmbLayoutDirective>",
                    "defaultValue": "{\n  title: 'Micro Componentes/Layout',\n  component: BmbLayoutDirective,\n  subcomponents: { BmbLayoutItemDirective },\n  decorators: [\n    moduleMetadata({\n      declarations: [],\n      imports: [\n        CommonModule,\n        BmbLayoutDirective,\n        BmbLayoutItemDirective,\n        BmbCardComponent,\n        BmbCardContentComponent,\n      ],\n    }),\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport { BmbLayoutDirective, BmbLayoutItemDirective } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [ BmbLayoutDirective, BmbLayoutItemDirective ],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    gapSise: {\n      name: 'Gap size',\n      control: {\n        type: 'select',\n      },\n      options: ['xs', 's', 'm', 'l', 'xl', 'none', 'auto'],\n      table: {\n        type: { summary: 'string' },\n        category: 'Properties',\n        defaultValue: { summary: 'm' },\n      },\n      description: 'Determines the size of the space between elements.',\n    },\n    margin: {\n      name: 'Margin',\n      control: {\n        type: 'select',\n      },\n      options: ['xs', 's', 'm', 'l', 'xl', 'none', 'auto'],\n      table: {\n        type: { summary: 'string' },\n        category: 'Properties',\n        defaultValue: { summary: 'm' },\n      },\n      description: 'Set the margin size',\n    },\n    dinamycCols: {\n      name: 'Enable dinamyc cols',\n      control: { type: 'boolean' },\n      description: 'This property enable the dinamic size for bmbLayoutItem',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' },\n      },\n    },\n    justify: {\n      name: 'Justify content',\n      control: {\n        type: 'select',\n      },\n      options: [\n        'center',\n        'end',\n        'start',\n        'stretch',\n        'spaceAround',\n        'spaceBetween',\n        'spaceEvenly',\n      ],\n      table: {\n        type: { summary: 'string' },\n        category: 'Properties',\n        defaultValue: { summary: 'start' },\n      },\n      description: 'Set the justify content.',\n    },\n    alignItems: {\n      name: 'Align items',\n      control: {\n        type: 'select',\n      },\n      options: ['center', 'end', 'start', 'stretch'],\n      table: {\n        type: { summary: 'string' },\n        category: 'Properties',\n        defaultValue: { summary: 'start' },\n      },\n      description: 'Set the align items.',\n    },\n  },\n  args: {\n    gapSise: 'm',\n    margin: 'm',\n    dinamycCols: false,\n    justify: 'start',\n    alignItems: 'start',\n  },\n}"
                },
                {
                    "name": "OneItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <section bmbLayout [gapSise]=\"gapSise\" [margin]=\"margin\" [justify]=\"justify\" [alignItems]=\"alignItems\">\n        <bmb-card bmbLayoutItem margin=\"none\" [colLg]=\"4\">\n          <bmb-card-content padding=\"none\">\n            <p [ngStyle]=\"{padding: '1rem'}\">Element</p>\n          </bmb-card-content>\n        </bmb-card>\n        <bmb-card bmbLayoutItem margin=\"none\" [colLg]=\"4\">\n          <bmb-card-content padding=\"none\">\n            <p [ngStyle]=\"{padding: '1rem'}\">Element</p>\n          </bmb-card-content>\n        </bmb-card>\n        <bmb-card bmbLayoutItem margin=\"none\" [colGrow]=\"12\">\n          <bmb-card-content padding=\"none\">\n            <p [ngStyle]=\"{padding: '1rem'}\">Element</p>\n            <p [ngStyle]=\"{padding: '1rem'}\">Element</p>\n            <p [ngStyle]=\"{padding: '1rem'}\">Element</p>\n          </bmb-card-content>\n        </bmb-card>\n      </section>\n    `,\n  }),\n}"
                }
            ],
            "projects/ds-ng/src/lib/utils/pixelToRem.ts": [
                {
                    "name": "pixelToRem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(size: number) =>\n  `${fixDecimals({ value: size / 16 })}rem`"
                }
            ],
            "projects/ds-ng/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      expanded: true,\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n    docs: {\n      source: { language: 'html' },\n      canvas: {\n        sourceState: 'shown',\n      },\n    },\n    options: {\n      storySort: {\n        method: 'alphabetical',\n        order: ['Foundations', 'Micro Componentes', 'Macro Componentes'],\n        locales: 'en-US',\n      },\n    },\n  },\n  decorators: [\n    withThemeByClassName({\n      themes: {\n        light: 'storybook-light-theme',\n        dark: 'storybook-dark-theme',\n      },\n      defaultTheme: 'light',\n    }),\n  ],\n}"
                }
            ]
        },
        "groupedFunctions": {
            "projects/ds-ng/src/lib/directives/button.stories.ts": [
                {
                    "name": "attributes",
                    "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "attributesText",
                    "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts": [
                {
                    "name": "attributes",
                    "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "object",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "object",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/ds-ng/src/lib/foundations/bmb-variables.stories.ts": [
                {
                    "name": "attributes",
                    "file": "projects/ds-ng/src/lib/foundations/bmb-variables.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-modal/bmb-modal.stories.ts": [
                {
                    "name": "attributes",
                    "file": "projects/ds-ng/src/lib/components/bmb-modal/bmb-modal.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-push-notification/bmb-push-notification.stories.ts": [
                {
                    "name": "attributes",
                    "file": "projects/ds-ng/src/lib/components/bmb-push-notification/bmb-push-notification.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts": [
                {
                    "name": "attributes",
                    "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts": [
                {
                    "name": "colors",
                    "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "object",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "object",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "gradients",
                    "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "object",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "object",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/ds-ng/src/lib/utils/pixelToRem.ts": [
                {
                    "name": "fixDecimals",
                    "file": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "IFixDecimals",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "0d65265b-de47-40d6-b48b-938cf890a3a8",
                            "destructuredParameter": true
                        },
                        {
                            "name": "dp",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "2",
                            "destrucuredGroupId": "0d65265b-de47-40d6-b48b-938cf890a3a8",
                            "destructuredParameter": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "IFixDecimals",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "0d65265b-de47-40d6-b48b-938cf890a3a8",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dp",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "2",
                            "destrucuredGroupId": "0d65265b-de47-40d6-b48b-938cf890a3a8",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts": [
                {
                    "name": "FabSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 199
                },
                {
                    "name": "FabType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 199
                }
            ],
            "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.directive.ts": [
                {
                    "name": "IAlignItemsOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"center\" | \"end\" | \"start\" | \"stretch\"",
                    "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "IJustifyOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"center\" | \"end\" | \"start\" | \"stretch\" | \"spaceAround\" | \"spaceBetween\" | \"spaceEvenly\"",
                    "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-input/bmb-input.component.ts": [
                {
                    "name": "IBbmInputType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"text\" | \"password\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.component.ts": [
                {
                    "name": "IBmbActivityTags",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"info\" | \"life\" | \"event\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-advertisement-card/types.ts": [
                {
                    "name": "IBmbAdvertisementCard",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/ds-ng/src/lib/components/bmb-advertisement-card/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "IBmbAdvertisementContent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/ds-ng/src/lib/components/bmb-advertisement-card/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "IBmbAdvertisementData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/ds-ng/src/lib/components/bmb-advertisement-card/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "IBmbAdvertisementImage",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/ds-ng/src/lib/components/bmb-advertisement-card/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-container/bmb-container.component.ts": [
                {
                    "name": "IBmbAppearanceType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary-container\" | \"primary-home\" | \"primary-header\" | \"secondary-container\" | \"contrast-box-container\" | \"button-container\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-calendar/types.ts": [
                {
                    "name": "IBmbCalendarEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "IBmbCalendarHourFormat",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"12\" | \"24\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "IBmbCalendarView",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"week\" | \"month\" | \"day\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "IBmbEventType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"academic\" | \"life\" | \"events\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts": [
                {
                    "name": "IBmbCardType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"succes\" | \"info\" | \"warning\" | \"error\" | \"normal\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-grades/types.ts": [
                {
                    "name": "IBmbClassDetail",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/ds-ng/src/lib/components/bmb-grades/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "IBmbElementDetail",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/ds-ng/src/lib/components/bmb-grades/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "IBmbGrades",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/ds-ng/src/lib/components/bmb-grades/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "IBmbPartial",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/ds-ng/src/lib/components/bmb-grades/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "IBmbPeriod",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/ds-ng/src/lib/components/bmb-grades/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "projects/ds-ng/src/lib/types/index.ts": [
                {
                    "name": "IBmbHorizontalPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\"",
                    "file": "projects/ds-ng/src/lib/types/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "IButtonAppearance",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary-filled\" | \"secondary-outlined\" | \"destructive\"",
                    "file": "projects/ds-ng/src/lib/types/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "SizeNames",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\" | \"none\" | \"auto\"",
                    "file": "projects/ds-ng/src/lib/types/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.component.ts": [
                {
                    "name": "IBmbInteractiveIconAppearance",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"red\" | \"blue\" | \"green\" | \"yellow\" | \"purple\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "IBmbInteractiveIconType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"regular\" | \"button\" | \"app_drawer\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts": [
                {
                    "name": "IBmbLegendVariations",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"normal\" | \"strong\" | \"success\" | \"info\" | \"warning\" | \"error\" | \"brand\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-media-card/bmb-media-card.component.ts": [
                {
                    "name": "IBmbMediaCardLoading",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"lazy\" | \"eager\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-media-card/bmb-media-card.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "IBmbMediaCardType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"inline\" | \"floating\" | \"author_detail\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-media-card/bmb-media-card.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-notification-card/types.ts": [
                {
                    "name": "IBmbNotificationCard",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/ds-ng/src/lib/components/bmb-notification-card/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "IBmbNotificationCardData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/ds-ng/src/lib/components/bmb-notification-card/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.component.ts": [
                {
                    "name": "IBmbProgressBarVariations",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"info\" | \"warning\" | \"error\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "IBmbTarget",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-top-bar/types.ts": [
                {
                    "name": "IPositionButtonMenu",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-top-bar/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ds-ng/src/lib/services/notification.service.ts": [
                {
                    "name": "NotificationPositionX",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\"",
                    "file": "projects/ds-ng/src/lib/services/notification.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "NotificationPositionY",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"top\" | \"bottom\"",
                    "file": "projects/ds-ng/src/lib/services/notification.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-push-notification/types.ts": [
                {
                    "name": "NotificationType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"tec\" | \"success\" | \"info\" | \"neutral\" | \"event\" | \"error\" | \"warning\" | \"black\"",
                    "file": "projects/ds-ng/src/lib/components/bmb-push-notification/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-advertisement-card/bmb-advertisement-card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbAdvertisementCardComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-advertisement-card/bmb-advertisement-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbBadgeComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-balance-overview/bmb-balance-overview.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbBalanceOverviewComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-balance-overview/bmb-balance-overview.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbCalendarComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-card/bmb-card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbCardComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-chat-bar/bmb-chat-bar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbChatBarComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-chat-bar/bmb-chat-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbCheckboxComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbChevronTitleSelectorComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbContainerComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbContainerButtonComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-datepicker/bmb-datepicker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbDatepickerComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-datepicker/bmb-datepicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbDividerComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbDotPaginatorComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-dropdown/bmb-dropdown.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbDropdownComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-dropdown/bmb-dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbFabComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbFocusElementComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-frequent-apps-selector/bmb-frequent-apps-selector.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbFrequentAppsSelectorComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-frequent-apps-selector/bmb-frequent-apps-selector.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-grade-value/bmb-grade-value.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbGradeValueComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-grade-value/bmb-grade-value.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-grades/bmb-grades.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbGradesComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-grades/bmb-grades.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbHeaderMobileComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-home-card/bmp-home-card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbHomeCardComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-home-card/bmp-home-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbHomeSectionComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbIconComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-inner-header/bmb-inner-header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbInnerHeaderComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-inner-header/bmb-inner-header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbInputComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-input-phone-number/bmb-input-phone-number.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbInputPhoneNumberComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-input-phone-number/bmb-input-phone-number.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbInteractiveIconComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbLegendComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbLoaderComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbLogoComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-media-card/bmb-media-card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbMediaCardComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-media-card/bmb-media-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-notification-card/bmb-notification-card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbNotificationCardComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-notification-card/bmb-notification-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-paginator/bmb-paginator.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbPaginatorComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-paginator/bmb-paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbProgressBarComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbProgressCircleComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-pull-wedge/bmb-pull-wedge.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbPullWedgeComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-pull-wedge/bmb-pull-wedge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbRadialComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbSearchInputComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbSidebarComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-skeleton/bmb-skeleton.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbSkeletonComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-skeleton/bmb-skeleton.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbStatCounterComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-step-progress-bar/bmb-step-progress-bar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbStepProgressBarComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-step-progress-bar/bmb-step-progress-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-student-activity-card/bmb-student-activity-card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbStudentActivityCardComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-student-activity-card/bmb-student-activity-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-student-activity-selector/bmb-student-activity-selector.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbStudentActivitySelectorComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-student-activity-selector/bmb-student-activity-selector.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbSwitchComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbTablesComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbTabsComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbTagComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbThemeComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbTimestreamComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbTopBarComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbTotpComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbUserImageComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbUserSummaryComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbValueCounterComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-wheel-menu/bmb-wheel-menu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbWheelMenuComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-wheel-menu/bmb-wheel-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbLayoutItemDirective>",
                    "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbLayoutDirective>",
                    "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ds-ng/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-account-statement/bmb-account-statement.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbAccountStatementComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-advertisement-card/bmb-advertisement-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbAdvertisementCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-advertisement-card/bmb-advertisement-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbBadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-balance-overview/bmb-balance-overview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbBalanceOverviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-balance-overview/bmb-balance-overview.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCalendarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-header/bmb-calendar-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCalendarHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-hour-view/bmb-calendar-hour-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCalendarHourViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-schedule-cards/bmb-calendar-schedule-cards.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCalendarScheduleCardsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-day/bmb-calendar-template-day.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCalendarTemplateDayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-event-list/bmb-calendar-template-event-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCalendarTemplateEventListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-event/bmb-calendar-template-event.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCalendarTemplateEventComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-mobile/bmb-calendar-template-mobile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCalendarTemplateMobileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-month/bmb-calendar-template-month.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCalendarTemplateMonthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-select/bmb-calendar-template-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCalendarTemplateSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-week/bmb-calendar-template-week.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCalendarTemplateWeekComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBmbCalendarEventClick",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBmbCalendarRenderEvents",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dayName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "eventsInDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getMonthDays",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTimeRange",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getWeekDays",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "orderDayNames",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "weeksAndDays",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCardContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCardFooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCardHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "calculateSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OneItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-chat-bar/bmb-chat-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbChatBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-chat-bar/bmb-chat-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-chat-bar/bot_list.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultBotList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-chat-bar/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBotType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbChevronTitleSelectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbContainerButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-datepicker/bmb-datepicker-modal/bmb-datepicker-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbDatepickerModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-datepicker/bmb-datepicker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbDatepickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-datepicker/bmb-datepicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbDividerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbDotPaginatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Target",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Target",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-dropdown/bmb-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/43",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-dropdown/bmb-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FAB_SIZE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FAB_TYPE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbFabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbFocusElementComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-frequent-apps-selector/bmb-frequent-apps-selector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbFrequentAppsSelectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-frequent-apps-selector/bmb-frequent-apps-selector.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-grade-value/bmb-grade-value.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbGradeValueComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-grade-value/bmb-grade-value.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-grades/bmb-grades.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-grades/bmb-grades.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbGradesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbHeaderMobileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-home-card-chat/bmb-home-card-chat.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbHomeCardChatComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-home-card/bmb-home-card-header/bmb-home-card-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbHomeCardHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-home-card/bmb-home-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbHomeCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-home-card/bmp-home-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbHomeSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-inner-header/bmb-inner-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbInnerHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-inner-header/bmb-inner-header.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBmbTab",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-inner-header/bmb-inner-header.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-inner-header/bmb-inner-header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-input-phone-number/bmb-input-phone-number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbInputPhoneNumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-input-phone-number/bmb-input-phone-number.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbInteractiveIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbLegendComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbLoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-logged/bmb-login-onboarding-logged.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbLoginOnboardingLoggedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-login/bmb-login-onboarding-login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbLoginOnboardingLoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-logout/bmb-login-onboarding-logout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbLoginOnboardingLogoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-stepper/bmb-login-onboarding-stepper-steps/bmb-login-onboarding-stepper-step-four.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbLoginOnboardingStepperStepFourComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-stepper/bmb-login-onboarding-stepper-steps/bmb-login-onboarding-stepper-step-one.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbLoginOnboardingStepperStepOneComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-stepper/bmb-login-onboarding-stepper-steps/bmb-login-onboarding-stepper-step-three.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbLoginOnboardingStepperStepThreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-stepper/bmb-login-onboarding-stepper-steps/bmb-login-onboarding-stepper-step-two.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbLoginOnboardingStepperStepTwoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-stepper/bmb-login-onboarding-stepper-steps/bmb-login-onboarding-stepper-step.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbLoginOnboardingStepperStepComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding-stepper/bmb-login-onboarding-stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbLoginOnboardingStepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbLoginOnboardingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmb-login-onboarding.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BmbLoginOnboardingService",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmp-login-onboarding.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "StorybookToastWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/bmp-login-onboarding.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBmbAuthenticateInfo",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBmbError",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBmbLoginOnbording",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-login-onboarding/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBmbUserInfo",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbLogoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-media-card/bmb-media-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbMediaCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-media-card/bmb-media-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-modal/bmb-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-modal/bmb-modal.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ModalDataConfig",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-modal/bmb-modal.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "StorybookToastWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-modal/bmb-modal.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "attributes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-modal/bmb-modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-notification-card/bmb-notification-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbNotificationCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-notification-card/bmb-notification-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-overlay/bmb-overlay.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbOverlayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-overlay/bmb-overlay.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "StorybookToastWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-overlay/bmb-overlay.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-paginator/bmb-paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbPaginatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-paginator/bmb-paginator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbProgressCircleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CircleProgressOptions",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BmbProgressCircleOptionsInterface",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-pull-wedge/bmb-pull-wedge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbPullWedgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-pull-wedge/bmb-pull-wedge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-push-notification/bmb-push-notification-item/bmb-push-notification-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbPushNotificationItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-push-notification/bmb-push-notification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbPushNotificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-push-notification/bmb-push-notification.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "StorybookToastWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-push-notification/bmb-push-notification.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "attributes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-push-notification/bmb-push-notification.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-push-notification/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMinimalNotification",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-push-notification/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "INotification",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-push-notification/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "INotificationAction",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbRadialComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbSearchInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-select/bmb-select-item/bmb-select-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbSelectItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-select/bmb-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbSidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SidebarElement",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-skeleton/bmb-skeleton.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-skeleton/bmb-skeleton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbSkeletonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbStatCounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Props",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Target",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-step-progress-bar/bmb-step-progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbStepProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-step-progress-bar/bmb-step-progress-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-student-activity-card/bmb-student-activity-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbStudentActivityCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-student-activity-card/bmb-student-activity-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-student-activity-selector/bmb-student-activity-selector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbStudentActivitySelectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-student-activity-selector/bmb-student-activity-selector.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-student-activity-selector/bmb-student-activity-tab/bmb-student-activity-tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbTabStudenActivityComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbSwitchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbTablesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/49",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TemplateNameDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TableColum",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TableConfig",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBmbTab",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbTagComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbThemeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream-detail/bmb-timestream-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbTimestreamDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream-dialog/bmb-timestream-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbTimestreamDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream-dialog/bmb-timestream-dialog.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tab",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream-error/bmb-timestream-error.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbTimestreamErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream-timeline/bmb-timestream-timeline.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbTimestreamTimelineComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbTimestreamComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPlaceholderObject",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-timestream/bmb-timestream.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-timestream/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISelectedDate",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-timestream/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITimelineDayEvent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-timestream/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITimelineEvent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-timestream/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITimelineEventParsed",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbToastComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "StorybookToastWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "attributes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar-item/bmb-top-bar-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbTopBarItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar-user-section/bmb-top-bar-user-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbTopBarUserSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbTopBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-top-bar/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IUserInformation",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbTotpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-image.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbUserImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbUserSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbValueCounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-wheel-menu/bmb-wheel-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbWheelMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-wheel-menu/bmb-wheel-menu.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-wheel-menu/bmb-wheel-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/bmb-button-group/bmb-button-group.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BmbButtonGroupDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/bmb-button-group/bmb-button-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "customizable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/bmb-button-group/bmb-button-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/bmb-input-states/bmb-input-states.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BmbInputStatesDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BmbLayoutItemDirective",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.directive.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMargin",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OneItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BmbLayoutDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OneItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/button.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BmbButtonDirective",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "attributes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "attributesText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "customizable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/utils/clickoutside.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ClickOutsideDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/ds-ng.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DsNgComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/ds-ng.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DsNgService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "gradients",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "customizable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "attributes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "customizable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/foundations/bmb-variables.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "attributes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/foundations/bmb-variables.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "customizable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/foundations/bmb-variables.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/services/calendar.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BmbCalendarService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/services/modal.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ModalService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/services/notification.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BmbNotificationService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/services/theme.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/services/toast.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ToastService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/types/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBmbApp",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFixDecimals",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "fixDecimals",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pixelToRem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}